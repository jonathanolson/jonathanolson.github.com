import{o as O,e as Q}from"./chunk-16.js";import{N as E,V as x,A as f,H as m,T as v,D as G}from"./chunk-17.js";import{I as U,F as z,a as N,B as K,R as X,P as _}from"./chunk-20.js";import{l as $,U as J}from"./chunk-23.js";import{g as Y,e as Z,E as ee}from"./chunk-25.js";import{D,g as M}from"./chunk-24.js";import{P as R}from"./chunk-33.js";import{P as te}from"./chunk-26.js";import{p as ae,d as P,e as W,_ as ne}from"./chunk-18.js";import{P as ie}from"./chunk-19.js";import{B as se,R as oe}from"./chunk-42.js";import{H as T}from"./chunk-40.js";import{P as A}from"./chunk-27.js";import"./chunk-28.js";import"./chunk-30.js";import"./chunk-31.js";import"./chunk-32.js";import"./chunk-29.js";const B=.5,re=Y($),le=Z(J);class de extends E{constructor(t,I){const h=O()({layoutWidth:1e3},I),c=new x({x:10,y:10,align:"left"}),V=d=>{c.addChild(new f(d,{margin:5}))},i=t.patternBoard,p=ae.get(i);P()&&W(p);const g=(d,u=20)=>{c.addChild(new f(new v(d,{font:"bold 20px Arial",fill:"#ccc",tagName:"h1"}),{topMargin:u}))};g(`Generic Rule${t.highlander?" (Highlander)":""}`,0),V(new te(t,p,{scale:1.5}));{const d=A.getSolutions(i,t.inputFeatureSet.getFeaturesArray()),u=n=>{const s=z.empty(i);return t.inputFeatureSet.getFeaturesArray().forEach(a=>{a instanceof N&&s.addFeature(a)}),i.edges.forEach(a=>{a.isExit||(n.includes(a)?s.addBlackEdge(a):s.addRedEdge(a))}),s};if(t.highlander){const n=new se(i,{solveEdges:!0,solveSectors:!1,solveFaceColors:!1}),a=A.getSolutions(i,t.inputFeatureSet.getHighlanderFeaturesArray()).map(e=>new oe(i,n,e,!0)),l=T.filterWithFeatureSet(a,t.inputFeatureSet).filter(e=>e.isCompatibleWithFeatureSet(t.inputFeatureSet)),C=d.slice();l.forEach(e=>{const o=C.find(r=>r.length===e.solution.length&&r.every(L=>e.solutionSet.has(L)));P()&&W(o),Q(C,o)});const F=new Map;a.forEach(e=>{const o=T.getHighlanderKeyWithFeatureSet(e,t.inputFeatureSet);F.has(o)?F.get(o).push(e):F.set(o,[e])});const H=ne.sortBy([...F.values()],e=>-e.length),j=H.filter(e=>e.length>1),q=H.filter(e=>e.length===1).map(e=>e[0]),k=[];q.forEach(e=>{const o=t.inputFeatureSet.clone();try{e.solution.forEach(r=>{o.addBlackEdge(r)}),i.edges.forEach(r=>{e.solutionSet.has(r)||o.addRedEdge(r)}),k.push(e)}catch(r){if(!(r instanceof U))throw r}}),g("Valid Solutions"),c.addChild(new f(new m({spacing:5,wrap:!0,justify:"left",lineSpacing:30,preferredWidth:h.layoutWidth,children:[...k.map(e=>new R(i,u(e.solution),p,{scale:B}))]}),{margin:5})),g("Highlander Duplicates (Invalid)"),c.addChild(new f(new m({spacing:40,wrap:!0,justify:"left",lineSpacing:30,preferredWidth:h.layoutWidth,children:j.map(e=>new m({spacing:5,children:[...e.map(o=>new R(i,u(o.solution),p,{scale:B}))]}))}),{margin:5}))}else{const s=A.getSolutions(i,t.inputFeatureSet.getFeaturesArray()).map(l=>z.fromSolution(i,l)),a=[],b=[];for(const l of s)t.outputFeatureSet.isCompatibleWith(l)?a.push(l):b.push(l);P()&&W(b.length===0),g("Valid Solutions"),c.addChild(new f(new m({spacing:5,wrap:!0,justify:"left",lineSpacing:30,preferredWidth:h.layoutWidth,children:[...a.map(l=>new R(i,l,p,{scale:B}))]}),{margin:5}))}}{const d=(n,s,a)=>new x({spacing:10,children:[new v(n,{font:"16px Arial",fill:"#ccc"}),new ee(t,s,{cursor:"pointer",scale:30,style:a})]}),u=D.enumeration.values.map(n=>{const s=M(t,n);return s?d(n.displayName,s,le):null}).filter(n=>!!n);{const n=M(t,D.SQUARE);n&&t.inputFeatureSet.getFeaturesArray().every(a=>a instanceof N||a instanceof K||a instanceof X)&&u.unshift(d("Classic Square",n,re))}g("Example Embeddings"),c.addChild(new E({layoutOptions:{topMargin:20},children:[new m({spacing:30,align:"top",wrap:!0,justify:"left",lineSpacing:30,preferredWidth:h.layoutWidth,children:u})]}))}h.children=[new ie(c,{fill:"#333",stroke:null})],super(h),this.rule=t}}self.assertions.enableAssert();const ce=QueryStringMachine.getAll({r:{type:"string",defaultValue:"square-1-0/AQcODxARIib/ExkbIRwe/w=="}}),S=new E,ue=new E({renderer:"svg",children:[S]}),y=new G(ue,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(y.domElement);y.setWidthHeight(self.innerWidth,self.innerHeight);console.log("test");(async()=>{const w=_.fromBinaryIdentifier(ce.r);if(console.log(w.getInputDifficultyScoreB()),console.log(w.serialize()),S.addChild(new de(w,{left:10,top:10})),S.bounds.isValid()){y.setWidthHeight(Math.ceil(S.right+10),Math.ceil(S.bottom+10)),y.updateDisplay();const t=new self.XMLSerializer().serializeToString(y.getRootBackbone().blocks[0].domElement);console.log(t)}})();
