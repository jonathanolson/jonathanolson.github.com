var is=Object.defineProperty;var os=(t,a,e)=>a in t?is(t,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[a]=e;var C=(t,a,e)=>os(t,typeof a!="symbol"?a+"":a,e);import{z as R,ad as ls,O as at,f as hs,V as s,R as qa,B as Fe}from"./Vector2Property-CFyCN_2h.js";function cs(t){if(assert&&assert(!t||Array.isArray(t),"cleanArray either takes an Array"),t){for(;t.length;)t.pop();return t}else return[]}R.register("cleanArray",cs);function fs(t,a){if(t[a]!==void 0)return a;if(a=a.charAt(0).toUpperCase()+a.slice(1),t[`moz${a}`]!==void 0)return`moz${a}`;if(t[`Moz${a}`]!==void 0)return`Moz${a}`;if(t[`webkit${a}`]!==void 0)return`webkit${a}`;if(t[`ms${a}`]!==void 0)return`ms${a}`;if(t[`o${a}`]!==void 0)return`o${a}`}R.register("detectPrefix",fs);const D=navigator.userAgent;function He(t){return wn()===t}function ba(){return!!(self.phet&&phet.chipper&&phet.chipper.queryParameters&&phet.chipper.queryParameters["phet-app"]||(D.match(/(iPod|iPhone|iPad)/)||navigator.platform==="MacIntel"&&navigator.maxTouchPoints>=2)&&D.match(/AppleWebKit/))}function wn(){let t=-1,a=null;return navigator.appName==="Microsoft Internet Explorer"?(a=new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})"),a.exec(D)!==null&&(t=parseFloat(RegExp.$1))):navigator.appName==="Netscape"&&(a=new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})"),a.exec(D)!==null&&(t=parseFloat(RegExp.$1))),t}const ds={firefox:D.toLowerCase().includes("firefox"),mobileSafari:ba(),safari5:!!(D.match(/Version\/5\./)&&D.match(/Safari\//)&&D.match(/AppleWebKit/)),safari6:!!(D.match(/Version\/6\./)&&D.match(/Safari\//)&&D.match(/AppleWebKit/)),safari7:!!(D.match(/Version\/7\./)&&D.match(/Safari\//)&&D.match(/AppleWebKit/)),safari10:!!(D.match(/Version\/10\./)&&D.match(/Safari\//)&&D.match(/AppleWebKit/)),safari11:!!(D.match(/Version\/11\./)&&D.match(/Safari\//)&&D.match(/AppleWebKit/)),safari9:!!(D.match(/Version\/9\./)&&D.match(/Safari\//)&&D.match(/AppleWebKit/)),safari:ba()||!!(D.match(/Version\//)&&D.match(/Safari\//)&&D.match(/AppleWebKit/)),ie:wn()!==-1,ie9:He(9),ie10:He(10),ie11:He(11),android:D.indexOf("Android")>0,edge:!!D.match(/Edge\//),chromium:/chrom(e|ium)/.test(D.toLowerCase())&&!D.match(/Edge\//),chromeOS:D.indexOf("CrOS")>0,mac:navigator.platform.includes("Mac")};R.register("platform",ds);function us(t,a){if(t[`on${a}`]!==void 0)return a;if(t[`onmoz${a}`]!==void 0)return`moz${a}`;if(t[`onMoz${a}`]!==void 0)return`Moz${a}`;if(t[`onwebkit${a}`]!==void 0)return`webkit${a}`;if(t[`onms${a}`]!==void 0)return`ms${a}`;if(t[`ono${a}`]!==void 0)return`o${a}`}R.register("detectPrefixEvent",us);function gs(t){return t.replace(/\u202a|\u202b|\u202c/g,"")}R.register("stripEmbeddingMarks",gs);function ws(t,a,e,n,r){assert&&assert(Array.isArray(t)&&_.uniq(t).length===t.length,"a is not an array of unique items"),assert&&assert(Array.isArray(a)&&_.uniq(a).length===a.length,"b is not an array of unique items"),e=e||[],n=n||[],r=r||[],assert&&assert(Array.isArray(e)&&e.length===0),assert&&assert(Array.isArray(n)&&n.length===0),assert&&assert(Array.isArray(r)&&r.length===0),Array.prototype.push.apply(e,t),Array.prototype.push.apply(n,a);t:for(let i=0;i<e.length;i++){const h=e[i];for(let o=0;o<n.length;o++){const f=n[o];if(h===f){if(r.push(h),e.splice(i,1),n.splice(o,1),o=0,i===e.length)break t;i-=1}}}return e}R.register("arrayDifference",ws);function ps(t){const a=new Map;return e=>{if(a.has(e))return a.get(e);{const n=t(e);return a.set(e,n),n}}}R.register("memoize",ps);const xs=(t,a)=>{assert&&t&&a.forEach(e=>{assert&&assert(Object.getOwnPropertyDescriptor(t,e)||_.some(ls(t.constructor).map(n=>Object.getOwnPropertyDescriptor(n.prototype,e))),`property not defined: ${e}`)})};R.register("assertHasProperties",xs);function Ms(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/\//g,"&#x2F;").replace(/ /g,"&nbsp;")}R.register("escapeHTML",Ms);function ms(t,...a){return _.each(a,e=>{if(e)for(const n in e){const r=Object.getOwnPropertyDescriptor(e,n);r&&(typeof r.get=="function"||e[n]!==void 0)&&Object.defineProperty(t,n,r)}}),t}R.register("extendDefined",ms);function Es(t,a,e){assert&&assert(t),assert&&assert(Array.isArray(a)),e&&(assert&&assert(Object.getPrototypeOf(e)===Object.prototype,"Extra prototype on options object is a code smell"),_.each(a,n=>{assert&&assert(!e.hasOwnProperty(n)||e[n]!==void 0,`Undefined not allowed for key: ${n}`),e[n]!==void 0&&(t[n]=e[n])}))}R.register("mutate",Es);class Te{constructor(a,e){this._map=new Map,this._enumeration=a,this._values=a.enumeration.values,this._values.forEach(n=>{assert&&assert(!this._map.has(n),"Enumeration key override problem"),this._map.set(n,e(n))})}get(a){return assert&&assert(this._values.includes(a)),assert&&assert(this._map.has(a)),this._map.get(a)}set(a,e){assert&&assert(this._values.includes(a)),this._map.set(a,e)}map(a){return new Te(this._enumeration,e=>a(this.get(e),e))}forEach(a){this._values.forEach(e=>a(this.get(e),e))}values(){return this._values.map(a=>this.get(a))}}R.register("EnumerationMap",Te);class ae extends Te{constructor(a,e){super(at,n=>n===at.HORIZONTAL?a:e)}get horizontal(){return this.get(at.HORIZONTAL)}set horizontal(a){this.set(at.HORIZONTAL,a)}get vertical(){return this.get(at.VERTICAL)}set vertical(a){this.set(at.VERTICAL,a)}with(a,e){return new ae(a===at.HORIZONTAL?e:this.horizontal,a===at.VERTICAL?e:this.vertical)}static create(a){return new ae(a(at.HORIZONTAL),a(at.VERTICAL))}map(a){return new ae(a(this.horizontal,at.HORIZONTAL),a(this.vertical,at.VERTICAL))}}R.register("OrientationPair",ae);class vs{constructor(){this.pendingLocks=[],this.loadComplete=!1,this.listeners=[]}reset(){this.loadComplete=!1}addListener(a){this.listeners.push(a)}proceedIfReady(){this.pendingLocks.length===0&&(assert&&assert(!this.loadComplete,"cannot complete load twice"),this.loadComplete=!0,this.listeners.forEach(a=>a()))}createLock(a){return assert&&assert(!this.loadComplete,"Cannot create more locks after load-step has completed"),this.pendingLocks.push(a),()=>{assert&&assert(this.pendingLocks.includes(a),"invalid lock"),hs(this.pendingLocks,a),this.proceedIfReady()}}}const pn=new vs;R.register("asyncLoader",pn);const De={};function qs(t,a,e){const n=De;let r=n,i=n;return t.hasOwnProperty(a)&&(r=t[a]),t.hasOwnProperty(e)&&(i=t[e]),r!==De?t[e]=r:delete t[e],i!==De?t[a]=i:delete t[a],t}R.register("swapObjectKeys",qs);const xn=t=>{assert&&assert(t.trim()===t,"path must be trimmed");const a=_.get(self,t);return a!==void 0?a:null};R.register("getGlobal",xn);const bs=t=>{assert&&assert(t.split(".").length>1,"path must have multiple parts"),assert&&assert(t.trim()===t,"path must be trimmed");const a=t.split("."),e=a.pop(),n=_.get(self,a);return n?n[e].bind(n):null};R.register("gracefulBind",bs);const F=self._,w=(t,...a)=>self.assert(t,...a),q=()=>!!self.assert;class Lt{constructor(a,e,n,r,i,h,o){C(this,"isAutomorphism");C(this,"isIdentityAutomorphism");C(this,"vertexInverseMap");C(this,"edgeInverseMap");C(this,"sectorInverseMap");C(this,"faceInverseMap");this.sourcePatternBoard=a,this.targetPatternBoard=e,this.vertexMap=n,this.nonExitEdgeMap=r,this.exitEdgeMap=i,this.sectorMap=h,this.faceMap=o,this.isAutomorphism=a===e,this.isAutomorphism&&(this.vertexInverseMap=new Map(Array.from(n).map(([f,l])=>[l,f])),this.sectorInverseMap=new Map(Array.from(h).map(([f,l])=>[l,f])),this.faceInverseMap=new Map(Array.from(o).map(([f,l])=>[l,f])),this.edgeInverseMap=new Map([...Array.from(r).map(([f,l])=>[l,f]),...Array.from(i).map(([f,l])=>(q()&&w(l.length===1),[l[0],f]))])),this.isIdentityAutomorphism=this.computeIsIdentityAutomorphism()}static fromMaps(a,e,n,r,i,h,o){return new Lt(a,e,n,r,i,h,o)}getVertexMap(){return this.vertexMap}getNonExitEdgeMap(){return this.nonExitEdgeMap}getExitEdgeMap(){return this.exitEdgeMap}getSectorMap(){return this.sectorMap}getFaceMap(){return this.faceMap}mapVertex(a){const e=this.vertexMap.get(a);return q()&&w(e),e}mapNonExitEdge(a){const e=this.nonExitEdgeMap.get(a);return q()&&w(e),e}mapExitEdges(a){const e=this.exitEdgeMap.get(a);return q()&&w(e),e}mapSector(a){const e=this.sectorMap.get(a);return q()&&w(e),e}mapFace(a){const e=this.faceMap.get(a);return q()&&w(e),e}inverseMapVertex(a){const e=this.vertexInverseMap.get(a);return q()&&w(e),e}inverseMapEdge(a){const e=this.edgeInverseMap.get(a);return q()&&w(e),e}inverseMapSector(a){const e=this.sectorInverseMap.get(a);return q()&&w(e),e}inverseMapFace(a){const e=this.faceInverseMap.get(a);return q()&&w(e),e}equals(a){return this.vertexMap.size===a.vertexMap.size&&this.nonExitEdgeMap.size===a.nonExitEdgeMap.size&&this.exitEdgeMap.size===a.exitEdgeMap.size&&this.sectorMap.size===a.sectorMap.size&&this.faceMap.size===a.faceMap.size&&Array.from(this.vertexMap).every(([e,n])=>a.vertexMap.get(e)===n)&&Array.from(this.nonExitEdgeMap).every(([e,n])=>a.nonExitEdgeMap.get(e)===n)&&Array.from(this.exitEdgeMap).every(([e,n])=>a.exitEdgeMap.get(e)===n)&&Array.from(this.sectorMap).every(([e,n])=>a.sectorMap.get(e)===n)&&Array.from(this.faceMap).every(([e,n])=>a.faceMap.get(e)===n)}toString(){return`Embedding(
  vertexMap: ${[...this.vertexMap].map(a=>`${a[0].index} ${a[0].isExit?"->":"=>"} ${a[1].index}`).join(", ")}
  nonExitEdgeMap: ${[...this.nonExitEdgeMap].map(a=>`${a[0].index} => ${a[1].index}`).join(", ")}
  exitEdgeMap: ${[...this.exitEdgeMap].map(a=>`${a[0].index} => [${a[1].map(e=>e.index).join(", ")}]`).join(", ")}
  sectorMap: ${[...this.sectorMap].map(a=>`${a[0].index} => ${a[1].index}`).join(", ")}
  faceMap: ${[...this.faceMap].map(a=>`${a[0].index} ${a[0].isExit?"->":"=>"} ${a[1].index}`).join(", ")}
)`}computeIsIdentityAutomorphism(){if(this.sourcePatternBoard!==this.targetPatternBoard)return!1;for(const a of this.vertexMap.keys())if(this.vertexMap.get(a)!==a)return!1;for(const a of this.nonExitEdgeMap.keys())if(this.nonExitEdgeMap.get(a)!==a)return!1;for(const a of this.exitEdgeMap.keys())if(this.exitEdgeMap.get(a).length!==1||this.exitEdgeMap.get(a)[0]!==a)return!1;for(const a of this.sectorMap.keys())if(this.sectorMap.get(a)!==a)return!1;for(const a of this.faceMap.keys())if(this.faceMap.get(a)!==a)return!1;return!0}serialize(){return{vertexMapping:this.sourcePatternBoard.vertices.map(a=>(q()&&w(this.vertexMap.has(a)),this.vertexMap.get(a).index)),edgeMapping:this.sourcePatternBoard.edges.map(a=>a.isExit?(q()&&w(this.exitEdgeMap.has(a)),this.exitEdgeMap.get(a).map(e=>e.index)):(q()&&w(this.nonExitEdgeMap.has(a)),this.nonExitEdgeMap.get(a).index)),sectorMapping:this.sourcePatternBoard.sectors.map(a=>(q()&&w(this.sectorMap.has(a)),this.sectorMap.get(a).index)),faceMapping:this.sourcePatternBoard.faces.map(a=>(q()&&w(this.faceMap.has(a)),this.faceMap.get(a).index))}}static deserialize(a,e,n){return new Lt(a,e,new Map(a.vertices.map(r=>[r,e.vertices[n.vertexMapping[r.index]]])),new Map(a.edges.filter(r=>!r.isExit).map(r=>[r,e.edges[n.edgeMapping[r.index]]])),new Map(a.edges.filter(r=>r.isExit).map(r=>[r,n.edgeMapping[r.index].map(i=>e.edges[i])])),new Map(a.sectors.map(r=>[r,e.sectors[n.sectorMapping[r.index]]])),new Map(a.faces.map(r=>[r,e.faces[n.faceMapping[r.index]]])))}}const _s=(t,a,e=!1)=>{if(t.faces.filter(i=>!i.isExit).length>a.faces.filter(i=>!i.isExit).length||t.sectors.length>a.sectors.length||t.edges.filter(i=>!i.isExit).length>a.edges.filter(i=>!i.isExit).length||t.vertices.length>a.vertices.length)return[];const n=[],r=t.faces.filter(i=>!i.isExit);if(r.length){const i=r[0],h=[i],o=[],f=[],l=new Set(r.slice(1)),c=new Set(i.edges),E=new Set(i.vertices);for(;l.size;){const d=F.maxBy([...l],p=>{let k=0;for(const M of p.edges)c.has(M)&&(k+=5);for(const M of p.vertices)E.has(M)&&(k+=1);return k});q()&&w(d),h.push(d),o.push(F.findIndex(d.edges,p=>c.has(p))),f.push(F.findIndex(d.vertices,p=>E.has(p))),l.delete(d);for(const p of d.edges)c.add(p);for(const p of d.vertices)E.add(p)}const u=(d,p,k)=>{if(d.edges.length!==p.edges.length)return!1;for(let M=0;M<d.edges.length;M++){const y=d.edges[M],g=p.edges[k.mapEdgeIndex(M)];q()&&w(y.faces.includes(d)),q()&&w(g.faces.includes(p));const m=y.faces[0]===d?y.faces[1]:y.faces[0];if(!m.isExit){const x=g.faces[0]===p?g.faces[1]:g.faces[0];if(x.isExit||m.edges.length!==x.edges.length)return!1}}return!0};for(const d of a.faces)if(!d.isExit&&d.edges.length===i.edges.length)for(const p of Pt.allForOrder(d.edges.length)){if(!u(i,d,p))continue;const k=new Map,M=new Map,y=new Map,g=new Map,m=new Map;k.set(i,p),M.set(i,d),y.set(d,i);for(let A=0;A<i.vertices.length;A++){const T=i.vertices[A],v=d.vertices[p.mapVertexIndex(A)];g.set(T,v),m.set(v,T)}const x=(A,T,v,I,B,S)=>{if(q()&&w(B.size===S.size),A===h.length){q()&&w(B.size===t.vertices.length);const b=new Map,P=new Set;for(const[O,L]of v){const Z=T.get(O);for(let J=0;J<O.edges.length;J++){const et=O.edges[J],j=L.edges[Z.mapEdgeIndex(J)];q()&&b.has(et)&&w(b.get(et)===j),b.set(et,j),P.add(j)}}q()&&w(b.size===t.edges.filter(O=>!O.isExit).length);const mt=new Map;for(const O of t.edges.filter(L=>L.isExit)){const L=O.exitVertex;q()&&w(L);const Z=B.get(L);q()&&w(Z),mt.set(O,Z.edges.filter(J=>!P.has(J)))}for(const O of t.faces.filter(L=>L.isExit)){const L=O.edges[0];q()&&w(L&&O.edges.length===1);const Z=b.get(L),J=L.faces[0]===O?L.faces[1]:L.faces[0],et=v.get(J),j=Z.faces[0]===et?Z.faces[1]:Z.faces[0];q()&&w(j),v.set(O,j)}const V=new Map;for(const O of t.sectors){const L=O.face,Z=v.get(L);q()&&w(Z);const J=O.edges[0],et=O.edges[1],j=b.get(J),gt=b.get(et);q()&&w(j&&gt);const W=Z.sectors.find(ht=>ht.edges.includes(j)&&ht.edges.includes(gt));q()&&w(W),V.set(O,W)}if(n.push(Lt.fromMaps(t,a,B,b,mt,V,v)),e)return}else{const b=h[A],P=o[A-1],mt=f[A-1];if(P>=0){const V=b.edges[P],O=V.vertices[0],L=V.vertices[1],Z=B.get(O),J=B.get(L),et=V.faces[0]===b?V.faces[1]:V.faces[0],j=v.get(et);q()&&w(j);const gt=j.edges.find(Bt=>Bt.vertices.includes(Z)&&Bt.vertices.includes(J));q()&&w(gt);const W=gt.faces[0]===j?gt.faces[1]:gt.faces[0];if(W.isExit||I.has(W))return;const ht=b.vertices.indexOf(O),Et=b.vertices.indexOf(L),wt=W.vertices.indexOf(Z),Dt=W.vertices.indexOf(J),Xt=(ht+1)%b.vertices.length===Et,Me=(wt+1)%W.vertices.length===Dt,At=Xt===Me?1:-1,kt=(wt-ht*At+b.vertices.length)%b.vertices.length,it=new Pt(b.vertices.length,kt,At);if(q()&&w(it.mapVertexIndex(ht)===wt),q()&&w(it.mapVertexIndex(Et)===Dt),!u(b,W,it)||(v.set(b,W),I.set(W,b),v.size!==I.size))return;for(let Bt=0;Bt<b.vertices.length;Bt++){const Kt=b.vertices[Bt],Qt=W.vertices[it.mapVertexIndex(Bt)];if(B.has(Kt)){if(B.get(Kt)!==Qt)return}else B.set(Kt,Qt);if(S.has(Qt)){if(S.get(Qt)!==Kt)return}else S.set(Qt,Kt);q()&&w(B.size===S.size)}if(T.set(b,it),x(A+1,T,v,I,B,S),e&&n.length)return}else{q()&&w(mt>=0,"If this is not satisfied, we have disconnected components OR orderedFaces order is bad");const V=b.vertices[mt],O=B.get(V),L=O.faces.filter(Z=>!Z.isExit&&!I.has(Z));for(const Z of L){const J=b.vertices.indexOf(V),et=Z.vertices.indexOf(O);q()&&w(J>=0),q()&&w(et>=0);for(const j of[1,-1]){const gt=(et-J*j+b.vertices.length)%b.vertices.length,W=new Pt(b.vertices.length,gt,j);if(!u(b,Z,W))continue;let ht=!0;const Et=new Map(B),wt=new Map(S);for(let At=0;At<b.vertices.length;At++){const kt=b.vertices[At],it=Z.vertices[W.mapVertexIndex(At)];if(Et.has(kt)){if(Et.get(kt)!==it){ht=!1;break}}else Et.set(kt,it);if(wt.has(it)){if(wt.get(it)!==kt){ht=!1;break}}else wt.set(it,kt);q()&&w(Et.size===wt.size)}if(!ht)continue;const Dt=new Map(v),Xt=new Map(I);if(Dt.set(b,Z),Xt.set(Z,b),Dt.size!==Xt.size)continue;const Me=new Map(T);if(Me.set(b,W),x(A+1,Me,Dt,Xt,Et,wt),e&&n.length)return}}}}};if(x(1,k,M,y,g,m),e&&n.length)return n}}else if(t.vertices.length===1){const i=t.vertices[0];q()&&w(i.edges.length===t.edges.length);const h=i.edges.filter(c=>!c.isExit),o=i.edges.filter(c=>!c.isExit).length,f=i.isExit,l=F.range(0,o).map(c=>{const E=h[c],u=h.slice(0,c+1);return i.sectors.filter(d=>d.edges.includes(E)&&d.edges.every(p=>u.includes(p)))});if(q()&&w(l.flat().length===i.sectors.length),q()&&!i.isExit){w(i.sectors.length===o);for(let c=0;c<o;c++){const E=i.edges[c],u=i.edges[(c+1)%o],d=i.sectors[c],p=i.faces[c];w(d.edges.includes(E)),w(d.edges.includes(u)),w(d.face===p)}}for(const c of a.vertices){if(f){if(c.edges.length<o||c.sectors.length<i.sectors.length)continue}else{if(c.isExit||c.edges.length!==o)continue;q()&&w(c.sectors.length===o)}const E=new Map([[i,c]]),u=(d,p,k,M)=>{if(d===o){q()&&w(p.size===h.length),q()&&w(k.size===t.sectors.length);const y=f?new Map([[i.exitEdge,c.edges.filter(m=>!M.has(m))]]):new Map,g=new Map([...k.keys()].map(m=>[m.face,k.get(m).face]));if(i.sectors.length===0)for(const[m,x]of p){const A=m.faces[0],T=m.faces[1];q()&&w(A.isExit&&T.isExit),g.set(A,x.faces[0]),g.set(T,x.faces[1])}else if(f){for(const m of t.faces.filter(x=>x.isExit))if(m.edges.length===1){const x=m.edges[0];q()&&w(x&&m.edges.length===1);const A=p.get(x);q()&&w(A);const T=x.faces[0]===m?x.faces[1]:x.faces[0],v=g.get(T);q()&&w(v);const I=A.faces[0]===v?A.faces[1]:A.faces[0];q()&&w(I),g.set(m,I)}}else for(const m of t.sectors){const x=m.face,T=k.get(m).face;g.set(x,T)}if(n.push(Lt.fromMaps(t,a,E,p,y,k,g)),e)return}else{const y=h[d],g=l[d];for(const m of c.edges){if(m.isExit||M.has(m))continue;const x=[];let A=!0;for(const T of g){const v=T.edges[0],I=T.edges[1],B=v===y?m:p.get(v),S=I===y?m:p.get(I);q()&&w(B&&S);const b=c.sectors.find(P=>P.edges.includes(B)&&P.edges.includes(S)&&(o>2||!x.includes(P)))??null;if(b)x.push(b);else{A=!1;break}}if(A){const T=new Map(p);T.set(y,m);const v=new Map(k);for(let B=0;B<g.length;B++)v.set(g[B],x[B]);const I=new Set(M);I.add(m),u(d+1,T,v,I)}}}};u(0,new Map,new Map,new Set)}}else if(t.vertices.length===0&&t.edges.length===1){const i=t.edges[0];for(const h of a.edges.filter(o=>!o.isExit))if(n.push(Lt.fromMaps(t,a,new Map,new Map([[i,h]]),new Map,new Map,new Map([[i.faces[0],h.faces[0]],[i.faces[1],h.faces[1]]]))),e)return n}else throw new Error("pattern search not implemented generally yet");return q()&&t===a&&w(n.filter(i=>i.isIdentityAutomorphism).length===1),n};class Pt{constructor(a,e,n){this.edgeCount=a,this.offset=e,this.direction=n,q()&&w(n===1||n===-1)}mapVertexIndex(a){return(this.offset+a*this.direction+this.edgeCount)%this.edgeCount}mapEdgeIndex(a){return this.direction===1?(this.offset+a)%this.edgeCount:(this.offset-a-1+2*this.edgeCount)%this.edgeCount}toString(){return`FaceMapping( edgeCount=${this.edgeCount}, offset=${this.offset}, direction=${this.direction} )`}toDetailedString(a,e){return`FaceMapping( vertices: ${F.range(0,this.edgeCount).map(n=>`${a.vertices[n].index} => ${e.vertices[this.mapVertexIndex(n)].index}`).join(", ")}, edges: ${F.range(0,this.edgeCount).map(n=>{const r=a.edges[n],i=e.edges[this.mapEdgeIndex(n)];return`#${r.index} (${r.vertices.map(h=>h.index).join(",")}) => #${i.index} (${i.vertices.map(h=>h.index).join(",")})`}).join(", ")} )`}static allForOrder(a){return[...F.range(0,a).map(e=>new Pt(a,e,1)),...F.range(0,a).map(e=>new Pt(a,e,-1))]}}const _a=new WeakMap,ya=(t,a)=>{q()&&w(t),q()&&w(a);let e=_a.get(t)??null;e||(e=new WeakMap,_a.set(t,e));let n=e.get(a)??null;return n||(n=_s(t,a),e.set(a,n)),n};function ys(t){const a=[];return t(e=>{a.push(e)}),a}R.register("collect",ys);function ta(t){if(Array.isArray(t))return t.map(ta);if(typeof t!="object"||t===null)return t;const a={};return Object.keys(t).sort().forEach(e=>{const n=t[e];a[e]=ta(n)}),a}R.register("copyWithSortedKeys",ta);function As(t,a,e){const n=[];function r(i,h){return h.forEach((o,f)=>{n.push(f),i===1?e(o,...n):r(i-1,o),n.pop()})}return r(t,a)}R.register("dimensionForEach",As);function ks(t,a,e){const n=[];function r(i,h){return h.map((o,f)=>{n.push(f);const l=i===1?e(o,...n):r(i-1,o);return n.pop(),l})}return r(t,a)}R.register("dimensionMap",ks);class Bs{constructor(a,e){this.eventModel=a,this.eventCallback=e,this.period=this.eventModel.getPeriodBeforeNextEvent(),this.timeBeforeNextEvent=this.period}step(a){for(;a>=this.timeBeforeNextEvent;)a-=this.timeBeforeNextEvent,this.period=this.eventModel.getPeriodBeforeNextEvent(),this.timeBeforeNextEvent=this.period,this.eventCallback(a);this.timeBeforeNextEvent-=a}getRatio(){return(this.period-this.timeBeforeNextEvent)/this.period}}class Ss{constructor(a){this.rate=a,assert&&assert(a>0,"We need to have a strictly positive rate in order to prevent infinite loops.")}getPeriodBeforeNextEvent(){return 1/this.rate}}class Ts{constructor(a,e){this.rate=a,this.pseudoRandomNumberSource=e,assert&&assert(a>0,"We need to have a strictly positive rate in order to prevent infinite loops.")}getPeriodBeforeNextEvent(){const a=this.pseudoRandomNumberSource();return assert&&assert(a>=0&&a<1,`Our uniform random number is outside of its expected range with a value of ${a}`),a*2/this.rate}}class Cs{constructor(a,e){this.rate=a,this.pseudoRandomNumberSource=e,assert&&assert(a>0,"We need to have a strictly positive poisson rate in order to prevent infinite loops.")}getPeriodBeforeNextEvent(){const a=this.pseudoRandomNumberSource();return assert&&assert(a>=0&&a<1,`Our uniform random number is outside of its expected range with a value of ${a}`),-Math.log(a)/this.rate}}R.register("PoissonEventModel",Cs);R.register("UniformEventModel",Ts);R.register("ConstantEventModel",Ss);R.register("EventTimer",Bs);function Is(t){return t}R.register("identity",Is);function zs(t,a){assert&&assert(Array.isArray(t));const e=[],n=t.length*2-1;for(let r=0;r<n;r++)r%2===0?e.push(t[r/2]):e.push(a((r-1)/2));return e}R.register("interleave",zs);function Rs(t){const a=typeof t=="string"?{src:t}:t,e=a.src,n=a.callback,r=a.async===void 0?!0:a.async,i=a.cacheBust===void 0?!1:a.cacheBust;let h=!1;const o=document.createElement("script");o.type="text/javascript",o.async=r,o.onload=o.onreadystatechange=function(){const l=this.readyState;l&&l!=="complete"&&l!=="loaded"||h||(h=!0,n&&n())},o.src=e+(i?`?random=${Math.random().toFixed(10)}`:"");const f=document.getElementsByTagName("script")[0];f.parentNode.insertBefore(o,f)}R.register("loadScript",Rs);function Fs(t){phet.log&&phet.log(`${t}: ${JSON.stringify(xn(t),null,2)}`)}R.register("logGlobal",Fs);class Hs{constructor(a,e,n){this.width=a,this.height=e,this.url=n,this.img=new Image;const r=pn.createLock(this.img);this.img.onload=r,this.img.src=this.url,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height;const i=this.canvas.getContext("2d");this.updateCanvas=()=>{this.img.complete&&(typeof this.img.naturalWidth>"u"||this.img.naturalWidth>0)&&(i.drawImage(this.img,0,0),delete this.updateCanvas)}}}R.register("MipmapElement",Hs);function Ds(t){const a=[],e=t.length;if(e>1)for(let n=0;n<e-1;n++){const r=t[n];for(let i=n+1;i<e;i++)a.push([r,t[i]])}return a}R.register("pairs",Ds);function Os(t,a){assert&&assert(Array.isArray(t));const e=[],n=[],r=t.length;for(let i=0;i<r;i++)a(t[i])?e.push(t[i]):n.push(t[i]);return[e,n]}R.register("partition",Os);const Ns={GRAVITATIONAL_CONSTANT:66743e-15,GRAVITY_ON_EARTH:9.81};R.register("PhysicalConstants",Ns);function Zs(t){return assert&&assert(t!==void 0,"Required field is undefined."),t}R.register("required",Zs);const Xl={name:"Square Tiling",basisA:new s(1,0),basisB:new s(0,1),polygons:[[new s(0,0),new s(0,1),new s(1,1),new s(1,0)]],translation:new s(1,1)},Kl={name:"Hexagonal Tiling",basisA:new s(1,0),basisB:new s(.5,Math.sqrt(3)/2),polygons:[[new s(0,1/Math.sqrt(3)),new s(.5,Math.sqrt(3)/2),new s(1,1/Math.sqrt(3)),new s(1,0),new s(.5,-(1/(2*Math.sqrt(3)))),new s(0,0)]],translation:new s(3/2,Math.sqrt(3)/2)},Ls={name:"Triangular",basisA:new s(1,0),basisB:new s(.5,Math.sqrt(3)/2),polygons:[[new s(0,0),new s(1,0),new s(.5,Math.sqrt(3)/2)],[new s(.5,Math.sqrt(3)/2),new s(3/2,Math.sqrt(3)/2),new s(1,0)]],translation:new s(3/2,Math.sqrt(3)/2)},Ps={name:"Trihexagonal",basisA:new s(2,0),basisB:new s(1,Math.sqrt(3)),polygons:[[new s(1/2,Math.sqrt(3)/2),new s(1,0),new s(1/2,-(Math.sqrt(3)/2)),new s(-1/2,-(Math.sqrt(3)/2)),new s(-1,0),new s(-1/2,Math.sqrt(3)/2)],[new s(1/2,Math.sqrt(3)/2),new s(1,0),new s(3/2,Math.sqrt(3)/2)],[new s(1/2,-(Math.sqrt(3)/2)),new s(1,0),new s(3/2,-(Math.sqrt(3)/2))]],translation:new s(3,Math.sqrt(3))},Gs={name:"Rhombitrihexagonal",basisA:new s(.5*(3+Math.sqrt(3)),.5*(1+Math.sqrt(3))),basisB:new s(.5*(3+Math.sqrt(3)),.5*(-1-Math.sqrt(3))),polygons:[[new s(1/2,Math.sqrt(3)/2),new s(1,0),new s(1/2,-(Math.sqrt(3)/2)),new s(-1/2,-(Math.sqrt(3)/2)),new s(-1,0),new s(-1/2,Math.sqrt(3)/2)],[new s(1/2*(1+Math.sqrt(3)),1/2*(-1-Math.sqrt(3))),new s(1/2,-(Math.sqrt(3)/2)),new s(1,0),new s(1/2*(2+Math.sqrt(3)),-1/2)],[new s(1+Math.sqrt(3)/2,1/2),new s(1,0),new s(1+Math.sqrt(3)/2,-1/2)],[new s(1+Math.sqrt(3)/2,1/2),new s(1,0),new s(1/2,Math.sqrt(3)/2),new s(1/2*(1+Math.sqrt(3)),1/2*(1+Math.sqrt(3)))],[new s(1/2,1/2*(2+Math.sqrt(3))),new s(1/2,Math.sqrt(3)/2),new s(1/2*(1+Math.sqrt(3)),1/2*(1+Math.sqrt(3)))],[new s(1/2,1/2*(2+Math.sqrt(3))),new s(1/2,Math.sqrt(3)/2),new s(-1/2,Math.sqrt(3)/2),new s(-1/2,1/2*(2+Math.sqrt(3)))]],translation:new s(3+Math.sqrt(3),.5*(-1-Math.sqrt(3))+.5*(1+Math.sqrt(3)))},Ql={name:"Truncated Square",basisA:new s(2+Math.sqrt(2),0),basisB:new s(.5*(2+Math.sqrt(2)),1+1/Math.sqrt(2)),polygons:[[new s(.5,.5*(1+Math.sqrt(2))),new s(.5*(1+Math.sqrt(2)),.5),new s(.5*(1+Math.sqrt(2)),-.5),new s(.5,.5*(-1-Math.sqrt(2))),new s(-.5,.5*(-1-Math.sqrt(2))),new s(.5*(-1-Math.sqrt(2)),-.5),new s(.5*(-1-Math.sqrt(2)),.5),new s(-.5,.5*(1+Math.sqrt(2)))],[new s(.5*(1+Math.sqrt(2)),.5),new s(.5*(1+Math.sqrt(2)),-.5),new s(3/2+1/Math.sqrt(2),-.5),new s(3/2+1/Math.sqrt(2),.5)]],translation:new s(2+Math.sqrt(2)+.5*(2+Math.sqrt(2)),1+1/Math.sqrt(2))},Us={name:"Snub Square",basisA:new s(1/2*(1+Math.sqrt(3)),1/2*(-1-Math.sqrt(3))),basisB:new s(1/2*(-1-Math.sqrt(3)),1/2*(-1-Math.sqrt(3))),polygons:[[new s(1/2,0),new s(0,-(Math.sqrt(3)/2)),new s(-(1/2),0)],[new s(1/2,0),new s(0,Math.sqrt(3)/2),new s(-(1/2),0)],[new s(1/2*(1+Math.sqrt(3)),1/2),new s(1/2,0),new s(0,Math.sqrt(3)/2),new s(Math.sqrt(3)/2,1/2*(1+Math.sqrt(3)))],[new s(Math.sqrt(3)/2,1/2*(1+Math.sqrt(3))),new s(0,Math.sqrt(3)/2),new s(0,1/2*(2+Math.sqrt(3)))],[new s(-(Math.sqrt(3)/2),1/2*(1+Math.sqrt(3))),new s(0,Math.sqrt(3)/2),new s(0,1/2*(2+Math.sqrt(3)))],[new s(1/2*(-1-Math.sqrt(3)),1/2),new s(-(1/2),0),new s(0,Math.sqrt(3)/2),new s(-(Math.sqrt(3)/2),1/2*(1+Math.sqrt(3)))]],translation:new s(1/2*(-1-Math.sqrt(3))+1/2*(1+Math.sqrt(3)),-1-Math.sqrt(3))},$l={name:"Truncated Hexagonal",basisA:new s(2+Math.sqrt(3),0),basisB:new s(.5*(2+Math.sqrt(3)),3/2+Math.sqrt(3)),polygons:[[new s(1/2,1/2*(2+Math.sqrt(3))),new s(1/2*(1+Math.sqrt(3)),1/2*(1+Math.sqrt(3))),new s(1/2*(2+Math.sqrt(3)),1/2),new s(1/2*(2+Math.sqrt(3)),-(1/2)),new s(1/2*(1+Math.sqrt(3)),1/2*(-1-Math.sqrt(3))),new s(1/2,1/2*(-2-Math.sqrt(3))),new s(-(1/2),1/2*(-2-Math.sqrt(3))),new s(1/2*(-1-Math.sqrt(3)),1/2*(-1-Math.sqrt(3))),new s(1/2*(-2-Math.sqrt(3)),-(1/2)),new s(1/2*(-2-Math.sqrt(3)),1/2),new s(1/2*(-1-Math.sqrt(3)),1/2*(1+Math.sqrt(3))),new s(-(1/2),1/2*(2+Math.sqrt(3)))],[new s(1/2*(1+Math.sqrt(3)),1/2*(1+Math.sqrt(3))),new s(1/2*(3+Math.sqrt(3)),1/2*(1+Math.sqrt(3))),new s(1/2*(2+Math.sqrt(3)),1/2)],[new s(1/2*(1+Math.sqrt(3)),1/2*(-1-Math.sqrt(3))),new s(1/2*(3+Math.sqrt(3)),1/2*(-1-Math.sqrt(3))),new s(1/2*(2+Math.sqrt(3)),-(1/2))]],translation:new s(2+Math.sqrt(3)+.5*(2+Math.sqrt(3)),3/2+Math.sqrt(3))},Ys={name:"Elongated Triangular",basisA:new s(1,0),basisB:new s(.5,.5*(2+Math.sqrt(3))),polygons:[[new s(-(1/2),-(1/2)),new s(-(1/2),1/2),new s(1/2,1/2),new s(1/2,-(1/2))],[new s(1/2,1/2),new s(0,1/2*(1+Math.sqrt(3))),new s(-(1/2),1/2)],[new s(1/2,-(1/2)),new s(0,1/2*(-1-Math.sqrt(3))),new s(-(1/2),-(1/2))]],translation:new s(3/2,.5*(2+Math.sqrt(3)))},th={name:"Great Rhombitrihexagonal",basisA:new s(3+Math.sqrt(3),0),basisB:new s(.5*(3+Math.sqrt(3)),1.5*(1+Math.sqrt(3))),polygons:[[new s(1/2,1/2*(2+Math.sqrt(3))),new s(1/2*(1+Math.sqrt(3)),1/2*(1+Math.sqrt(3))),new s(1/2*(2+Math.sqrt(3)),1/2),new s(1/2*(2+Math.sqrt(3)),-(1/2)),new s(1/2*(1+Math.sqrt(3)),1/2*(-1-Math.sqrt(3))),new s(1/2,1/2*(-2-Math.sqrt(3))),new s(-(1/2),1/2*(-2-Math.sqrt(3))),new s(1/2*(-1-Math.sqrt(3)),1/2*(-1-Math.sqrt(3))),new s(1/2*(-2-Math.sqrt(3)),-(1/2)),new s(1/2*(-2-Math.sqrt(3)),1/2),new s(1/2*(-1-Math.sqrt(3)),1/2*(1+Math.sqrt(3))),new s(-(1/2),1/2*(2+Math.sqrt(3)))],[new s(1,1+Math.sqrt(3)),new s(.5*(2+Math.sqrt(3)),.5*(1+2*Math.sqrt(3))),new s(.5*(1+Math.sqrt(3)),.5*(1+Math.sqrt(3))),new s(.5,.5*(2+Math.sqrt(3)))],[new s(.5*(1+Math.sqrt(3)),.5*(1+Math.sqrt(3))),new s(.5*(2+Math.sqrt(3)),.5),new s(1+.5*(2+Math.sqrt(3)),.5),new s(.5*(5+Math.sqrt(3)),.5*(1+Math.sqrt(3))),new s(.5*(4+Math.sqrt(3)),.5*(1+2*Math.sqrt(3))),new s(.5*(2+Math.sqrt(3)),.5*(1+2*Math.sqrt(3)))],[new s(1+.5*(2+Math.sqrt(3)),.5),new s(1+.5*(2+Math.sqrt(3)),-(1/2)),new s(.5*(2+Math.sqrt(3)),-(1/2)),new s(.5*(2+Math.sqrt(3)),.5)],[new s(.5*(1+Math.sqrt(3)),.5*(-1-Math.sqrt(3))),new s(.5*(2+Math.sqrt(3)),-(1/2)),new s(1+.5*(2+Math.sqrt(3)),-(1/2)),new s(.5*(5+Math.sqrt(3)),.5*(-1-Math.sqrt(3))),new s(.5*(4+Math.sqrt(3)),.5*(-1-2*Math.sqrt(3))),new s(.5*(2+Math.sqrt(3)),.5*(-1-2*Math.sqrt(3)))],[new s(.5*(2+Math.sqrt(3)),.5*(-1-2*Math.sqrt(3))),new s(1,-1-Math.sqrt(3)),new s(.5,.5*(-2-Math.sqrt(3))),new s(.5*(1+Math.sqrt(3)),.5*(-1-Math.sqrt(3)))]],translation:new s(3+Math.sqrt(3)+.5*(3+Math.sqrt(3)),1.5*(1+Math.sqrt(3)))},eh={name:"Snub Hexagonal",basisA:new s(5/2,-Math.sqrt(3)/2),basisB:new s(-1/2,3*Math.sqrt(3)/2),polygons:[[new s(1/2,Math.sqrt(3)/2),new s(1,0),new s(1/2,-(Math.sqrt(3)/2)),new s(-(1/2),-(Math.sqrt(3)/2)),new s(-1,0),new s(-(1/2),Math.sqrt(3)/2)],[new s(-1,0),new s(-3/2,-(Math.sqrt(3)/2)),new s(-2,0)],[new s(-(1/2),-(Math.sqrt(3)/2)),new s(-1,0),new s(-3/2,-(Math.sqrt(3)/2))],[new s(1/2,Math.sqrt(3)/2),new s(1,0),new s(3/2,Math.sqrt(3)/2)],[new s(1,0),new s(3/2,Math.sqrt(3)/2),new s(2,0)],[new s(-1,0),new s(-(1/2),Math.sqrt(3)/2),new s(-(3/2),Math.sqrt(3)/2)],[new s(1/2,-(Math.sqrt(3)/2)),new s(-(1/2),-(Math.sqrt(3)/2)),new s(0,-Math.sqrt(3))],[new s(1,0),new s(1/2,-(Math.sqrt(3)/2)),new s(3/2,-(Math.sqrt(3)/2))],[new s(-(1/2),Math.sqrt(3)/2),new s(1/2,Math.sqrt(3)/2),new s(0,Math.sqrt(3))]],translation:new s(2,Math.sqrt(3))},Vs={name:"Rhombille",basisA:new s(2,0),basisB:new s(1,Math.sqrt(3)),polygons:[[new s(5,5/Math.sqrt(3)),new s(4,2*Math.sqrt(3)),new s(5,7/Math.sqrt(3)),new s(6,2*Math.sqrt(3))],[new s(5,5/Math.sqrt(3)),new s(6,2*Math.sqrt(3)),new s(6,4/Math.sqrt(3)),new s(5,Math.sqrt(3))],[new s(5,5/Math.sqrt(3)),new s(5,Math.sqrt(3)),new s(4,4/Math.sqrt(3)),new s(4,2*Math.sqrt(3))]],translation:new s(3,Math.sqrt(3))},Js={name:"Deltoidal Trihexagonal",basisA:new s(.5*(3+Math.sqrt(3)),.5*(1+Math.sqrt(3))),basisB:new s(.5*(3+Math.sqrt(3)),.5*(-1-Math.sqrt(3))),polygons:[[new s(1/3*(12+4*Math.sqrt(3)),0),new s(1/4*(15+5*Math.sqrt(3)),.25*(-1-Math.sqrt(3))),new s(3+Math.sqrt(3),0),new s(1/4*(15+5*Math.sqrt(3)),.25*(1+Math.sqrt(3)))],[new s(1/3*(12+4*Math.sqrt(3)),0),new s(1/4*(15+5*Math.sqrt(3)),.25*(1+Math.sqrt(3))),new s(.5*(9+3*Math.sqrt(3)),.5*(1+Math.sqrt(3))),new s(.5*(9+3*Math.sqrt(3)),0)],[new s(1/3*(12+4*Math.sqrt(3)),0),new s(.5*(9+3*Math.sqrt(3)),0),new s(.5*(9+3*Math.sqrt(3)),.5*(-1-Math.sqrt(3))),new s(1/4*(15+5*Math.sqrt(3)),.25*(-1-Math.sqrt(3)))],[new s(1/3*(15+5*Math.sqrt(3)),0),new s(.5*(9+3*Math.sqrt(3)),0),new s(.5*(9+3*Math.sqrt(3)),.5*(1+Math.sqrt(3))),new s(1/4*(21+7*Math.sqrt(3)),.25*(1+Math.sqrt(3)))],[new s(1/3*(15+5*Math.sqrt(3)),0),new s(1/4*(21+7*Math.sqrt(3)),.25*(1+Math.sqrt(3))),new s(6+2*Math.sqrt(3),0),new s(1/4*(21+7*Math.sqrt(3)),.25*(-1-Math.sqrt(3)))],[new s(1/3*(15+5*Math.sqrt(3)),0),new s(1/4*(21+7*Math.sqrt(3)),.25*(-1-Math.sqrt(3))),new s(.5*(9+3*Math.sqrt(3)),.5*(-1-Math.sqrt(3))),new s(.5*(9+3*Math.sqrt(3)),0)]],translation:new s(3+Math.sqrt(3),.5*(-1-Math.sqrt(3))+.5*(1+Math.sqrt(3)))},ah={name:"Tetrakis Square",basisA:new s(2+Math.sqrt(2),0),basisB:new s(.5*(2+Math.sqrt(2)),1+1/Math.sqrt(2)),polygons:[[new s(4+2*Math.sqrt(2),.5*(2+Math.sqrt(2))),new s(4+2*Math.sqrt(2),2+Math.sqrt(2)),new s(.5*(10+5*Math.sqrt(2)),.5*(2+Math.sqrt(2)))],[new s(.5*(10+5*Math.sqrt(2)),2+Math.sqrt(2)),new s(.5*(10+5*Math.sqrt(2)),.5*(2+Math.sqrt(2))),new s(4+2*Math.sqrt(2),2+Math.sqrt(2))],[new s(.5*(10+5*Math.sqrt(2)),2+Math.sqrt(2)),new s(6+3*Math.sqrt(2),2+Math.sqrt(2)),new s(.5*(10+5*Math.sqrt(2)),.5*(2+Math.sqrt(2)))],[new s(6+3*Math.sqrt(2),2+Math.sqrt(2)),new s(6+3*Math.sqrt(2),.5*(2+Math.sqrt(2))),new s(.5*(10+5*Math.sqrt(2)),.5*(2+Math.sqrt(2)))]],translation:new s(2+Math.sqrt(2)+.5*(2+Math.sqrt(2)),1+1/Math.sqrt(2))},js={name:"Cairo Pentagonal",basisA:new s(.5*(1+Math.sqrt(3)),.5*(-1-Math.sqrt(3))),basisB:new s(.5*(-1-Math.sqrt(3)),.5*(-1-Math.sqrt(3))),polygons:[[new s(0,1/6*(-6-5*Math.sqrt(3))),new s(.25*(-1-Math.sqrt(3)),.25*(-3-3*Math.sqrt(3))),new s(-1/(2*Math.sqrt(3)),.5*(-1-Math.sqrt(3))),new s(1/(2*Math.sqrt(3)),.5*(-1-Math.sqrt(3))),new s(.25*(1+Math.sqrt(3)),.25*(-3-3*Math.sqrt(3)))],[new s(0,1/6*(-6-5*Math.sqrt(3))),new s(.25*(1+Math.sqrt(3)),.25*(-3-3*Math.sqrt(3))),new s(1/6*(3+2*Math.sqrt(3)),-1-Math.sqrt(3)),new s(.25*(1+Math.sqrt(3)),.25*(-5-5*Math.sqrt(3))),new s(0,1/6*(-6-7*Math.sqrt(3)))],[new s(0,1/6*(-6-7*Math.sqrt(3))),new s(.25*(-1-Math.sqrt(3)),.25*(-5-5*Math.sqrt(3))),new s(1/6*(-3-2*Math.sqrt(3)),-1-Math.sqrt(3)),new s(.25*(-1-Math.sqrt(3)),.25*(-3-3*Math.sqrt(3))),new s(0,1/6*(-6-5*Math.sqrt(3)))],[new s(0,1/6*(-6-7*Math.sqrt(3))),new s(.25*(1+Math.sqrt(3)),.25*(-5-5*Math.sqrt(3))),new s(1/(2*Math.sqrt(3)),.5*(-3-3*Math.sqrt(3))),new s(-1/(2*Math.sqrt(3)),.5*(-3-3*Math.sqrt(3))),new s(.25*(-1-Math.sqrt(3)),.25*(-5-5*Math.sqrt(3)))]],translation:new s(.5*(-1-Math.sqrt(3))+.5*(1+Math.sqrt(3)),-1-Math.sqrt(3))},nh={name:"Triakis Triangular",basisA:new s(2+Math.sqrt(3),0),basisB:new s(.5*(2+Math.sqrt(3)),1.5+Math.sqrt(3)),polygons:[[new s(4+2*Math.sqrt(3),1/3*(6+4*Math.sqrt(3))),new s(.5*(10+5*Math.sqrt(3)),.5*(3+2*Math.sqrt(3))),new s(.5*(6+3*Math.sqrt(3)),.5*(3+2*Math.sqrt(3)))],[new s(4+2*Math.sqrt(3),1/3*(6+4*Math.sqrt(3))),new s(.5*(6+3*Math.sqrt(3)),.5*(3+2*Math.sqrt(3))),new s(4+2*Math.sqrt(3),3+2*Math.sqrt(3))],[new s(4+2*Math.sqrt(3),1/3*(6+4*Math.sqrt(3))),new s(4+2*Math.sqrt(3),3+2*Math.sqrt(3)),new s(.5*(10+5*Math.sqrt(3)),.5*(3+2*Math.sqrt(3)))],[new s(.5*(10+5*Math.sqrt(3)),1/6*(15+10*Math.sqrt(3))),new s(.5*(10+5*Math.sqrt(3)),.5*(3+2*Math.sqrt(3))),new s(4+2*Math.sqrt(3),3+2*Math.sqrt(3))],[new s(.5*(10+5*Math.sqrt(3)),1/6*(15+10*Math.sqrt(3))),new s(4+2*Math.sqrt(3),3+2*Math.sqrt(3)),new s(6+3*Math.sqrt(3),3+2*Math.sqrt(3))],[new s(.5*(10+5*Math.sqrt(3)),1/6*(15+10*Math.sqrt(3))),new s(6+3*Math.sqrt(3),3+2*Math.sqrt(3)),new s(.5*(10+5*Math.sqrt(3)),.5*(3+2*Math.sqrt(3)))]],translation:new s(2+Math.sqrt(3)+.5*(2+Math.sqrt(3)),1.5+Math.sqrt(3))},Ws={name:"Prismatic Pentagonal",basisA:new s(1,0),basisB:new s(.5,.5*(2+Math.sqrt(3))),polygons:[[new s(2,1/6*(9+5*Math.sqrt(3))),new s(2.5,1/6*(9+4*Math.sqrt(3))),new s(2.5,.5*(2+Math.sqrt(3))),new s(1.5,.5*(2+Math.sqrt(3))),new s(1.5,1/6*(9+4*Math.sqrt(3)))],[new s(2.5,1/6*(9+4*Math.sqrt(3))),new s(2,1/6*(9+5*Math.sqrt(3))),new s(2,2+Math.sqrt(3)),new s(3,2+Math.sqrt(3)),new s(3,1/6*(9+5*Math.sqrt(3)))]],translation:new s(1.5,.5*(2+Math.sqrt(3)))},sh={name:"Bisected Hexagonal",basisA:new s(3+Math.sqrt(3),0),basisB:new s(.5*(3+Math.sqrt(3)),1.5*(1+Math.sqrt(3))),polygons:[[new s(6+2*Math.sqrt(3),.5*(3+3*Math.sqrt(3))),new s(6+2*Math.sqrt(3),2+2*Math.sqrt(3)),new s(.5*(15+5*Math.sqrt(3)),.5*(3+3*Math.sqrt(3)))],[new s(6+2*Math.sqrt(3),.5*(3+3*Math.sqrt(3))),new s(.5*(15+5*Math.sqrt(3)),.5*(3+3*Math.sqrt(3))),new s(6+2*Math.sqrt(3),1+Math.sqrt(3))],[new s(6+2*Math.sqrt(3),.5*(3+3*Math.sqrt(3))),new s(6+2*Math.sqrt(3),1+Math.sqrt(3)),new s(.5*(9+3*Math.sqrt(3)),.5*(3+3*Math.sqrt(3)))],[new s(6+2*Math.sqrt(3),.5*(3+3*Math.sqrt(3))),new s(.5*(9+3*Math.sqrt(3)),.5*(3+3*Math.sqrt(3))),new s(6+2*Math.sqrt(3),2+2*Math.sqrt(3))],[new s(.25*(21+7*Math.sqrt(3)),.25*(9+9*Math.sqrt(3))),new s(6+2*Math.sqrt(3),2+2*Math.sqrt(3)),new s(.5*(9+3*Math.sqrt(3)),.5*(3+3*Math.sqrt(3)))],[new s(.25*(21+7*Math.sqrt(3)),.25*(9+9*Math.sqrt(3))),new s(.5*(9+3*Math.sqrt(3)),.5*(3+3*Math.sqrt(3))),new s(.5*(9+3*Math.sqrt(3)),.5*(5+5*Math.sqrt(3)))],[new s(.25*(21+7*Math.sqrt(3)),.25*(9+9*Math.sqrt(3))),new s(.5*(9+3*Math.sqrt(3)),.5*(5+5*Math.sqrt(3))),new s(6+2*Math.sqrt(3),3+3*Math.sqrt(3))],[new s(.25*(21+7*Math.sqrt(3)),.25*(9+9*Math.sqrt(3))),new s(6+2*Math.sqrt(3),3+3*Math.sqrt(3)),new s(6+2*Math.sqrt(3),2+2*Math.sqrt(3))],[new s(.25*(27+9*Math.sqrt(3)),.25*(9+9*Math.sqrt(3))),new s(6+2*Math.sqrt(3),2+2*Math.sqrt(3)),new s(6+2*Math.sqrt(3),3+3*Math.sqrt(3))],[new s(.25*(27+9*Math.sqrt(3)),.25*(9+9*Math.sqrt(3))),new s(6+2*Math.sqrt(3),3+3*Math.sqrt(3)),new s(.5*(15+5*Math.sqrt(3)),.5*(5+5*Math.sqrt(3)))],[new s(.25*(27+9*Math.sqrt(3)),.25*(9+9*Math.sqrt(3))),new s(.5*(15+5*Math.sqrt(3)),.5*(5+5*Math.sqrt(3))),new s(.5*(15+5*Math.sqrt(3)),.5*(3+3*Math.sqrt(3)))],[new s(.25*(27+9*Math.sqrt(3)),.25*(9+9*Math.sqrt(3))),new s(.5*(15+5*Math.sqrt(3)),.5*(3+3*Math.sqrt(3))),new s(6+2*Math.sqrt(3),2+2*Math.sqrt(3))]],translation:new s(3+Math.sqrt(3)+.5*(3+Math.sqrt(3)),1.5*(1+Math.sqrt(3)))},Xs={name:"Floret Pentagonal",basisA:new s(2.5,-Math.sqrt(3)/2),basisB:new s(-.5,3*Math.sqrt(3)/2),polygons:[[new s(2,Math.sqrt(3)),new s(3,4/Math.sqrt(3)),new s(3.5,7/(2*Math.sqrt(3))),new s(3.5,5/(2*Math.sqrt(3))),new s(3,2/Math.sqrt(3))],[new s(2,Math.sqrt(3)),new s(3,2/Math.sqrt(3)),new s(3,1/Math.sqrt(3)),new s(2.5,1/(2*Math.sqrt(3))),new s(2,1/Math.sqrt(3))],[new s(2,Math.sqrt(3)),new s(2,1/Math.sqrt(3)),new s(1.5,1/(2*Math.sqrt(3))),new s(1,1/Math.sqrt(3)),new s(1,2/Math.sqrt(3))],[new s(2,Math.sqrt(3)),new s(1,2/Math.sqrt(3)),new s(.5,5/(2*Math.sqrt(3))),new s(.5,7/(2*Math.sqrt(3))),new s(1,4/Math.sqrt(3))],[new s(2,Math.sqrt(3)),new s(1,4/Math.sqrt(3)),new s(1,5/Math.sqrt(3)),new s(1.5,11/(2*Math.sqrt(3))),new s(2,5/Math.sqrt(3))],[new s(2,Math.sqrt(3)),new s(2,5/Math.sqrt(3)),new s(2.5,11/(2*Math.sqrt(3))),new s(3,5/Math.sqrt(3)),new s(3,4/Math.sqrt(3))]],translation:new s(2,Math.sqrt(3))},Ks={name:"Portugal",basisA:new s(2,2),basisB:new s(-2,2),polygons:[[new s(0,0),new s(1,0),new s(2,1),new s(2,2),new s(1,2),new s(0,1)],[new s(2,2),new s(3,2),new s(4,1),new s(4,0),new s(3,0),new s(2,1)],[new s(1,0),new s(2,1),new s(3,0),new s(2,-1)]],translation:new s(0,4)},rh={name:"Trihex and Hex",basisA:new s(2,0),basisB:new s(1,Math.sqrt(3)),polygons:[[new s(-1,0),new s(-1,1/Math.sqrt(3)),new s(-.5,Math.sqrt(3)/2),new s(0,1/Math.sqrt(3)),new s(.5,Math.sqrt(3)/2),new s(1,1/Math.sqrt(3)),new s(1,0),new s(.5,-1/(2*Math.sqrt(3))),new s(.5,-Math.sqrt(3)/2),new s(0,-2/Math.sqrt(3)),new s(-.5,-Math.sqrt(3)/2),new s(-.5,-1/(2*Math.sqrt(3)))],[new s(-.5,5/(2*Math.sqrt(3))),new s(0,Math.sqrt(3)),new s(.5,5/(2*Math.sqrt(3))),new s(.5,Math.sqrt(3)/2),new s(0,1/Math.sqrt(3)),new s(-.5,Math.sqrt(3)/2)]],translation:new s(3,Math.sqrt(3))};class ca{constructor(a){C(this,"edges");C(this,"vertices");C(this,"faces");C(this,"halfEdges");C(this,"outerBoundary");C(this,"innerBoundaries");this.boardDescriptor=a,this.edges=a.edges,this.vertices=a.vertices,this.faces=a.faces,this.halfEdges=a.halfEdges,this.outerBoundary=a.outerBoundary,this.innerBoundaries=a.innerBoundaries}}class Qs{constructor(a,e){C(this,"forwardHalf");C(this,"reversedHalf");C(this,"forwardFace");C(this,"reversedFace");C(this,"vertices");C(this,"faces");this.start=a,this.end=e,q()&&w(a),q()&&w(e)}getOtherVertex(a){return q()&&w(a===this.start||a===this.end,"vertex must be one of the two vertices of this edge"),a===this.start?this.end:this.start}getOtherFace(a){return q()&&w(a===this.forwardFace||a===this.reversedFace,"face must be one of the two faces of this edge"),a===this.forwardFace?this.reversedFace:this.forwardFace}}class $s{constructor(a,e){C(this,"halfEdges");C(this,"edges");C(this,"vertices");this.logicalCoordinates=a,this.viewCoordinates=e,q()&&w(a),q()&&w(e)}}class tr{constructor(a,e,n){C(this,"edge");C(this,"reversed");C(this,"next");C(this,"previous");C(this,"face",null);this.start=a,this.end=e,this.isReversed=n,q()&&w(a),q()&&w(e)}}class er{constructor(a,e){C(this,"incomingHalfEdges");C(this,"outgoingHalfEdges");C(this,"edges");C(this,"faces");this.logicalCoordinates=a,this.viewCoordinates=e,q()&&w(a),q()&&w(e)}getHalfEdgeTo(a){const e=this.outgoingHalfEdges.find(n=>n.end===a);return q()&&w(e),e}getHalfEdgeFrom(a){const e=this.incomingHalfEdges.find(n=>n.start===a);return q()&&w(e),e}getEdgeTo(a){const e=this.edges.find(n=>n.start===a||n.end===a);return q()&&w(e),e}}const Ae=t=>{let a=0;for(let e=0;e<t.length;e++){const n=t[e],r=t[(e+1)%t.length];a+=(r.x+n.x)*(r.y-n.y)}return .5*a},ar=t=>Math.abs(Ae(t)),Mn=t=>{const a=Ae(t);if(a===0)return t.reduce((r,i)=>r.plus(i),new s(0,0)).timesScalar(1/t.length);let e=0,n=0;for(let r=0;r<t.length;r++){const i=t[r],h=t[(r+1)%t.length],o=i.x*(2*i.y+h.y)+h.x*(i.y+2*h.y);e+=(i.x-h.x)*o,n+=(h.y-i.y)*o}return new s(e,n).timesScalar(1/(6*a))},ih=(t,a)=>{let e=0;for(let n=0;n<t.length;n++){const r=t[n],i=t[(n+1)%t.length],h=a[n],o=a[(n+1)%t.length];e+=(i.x+r.x)*(o.y-h.y)+(o.x-h.x)*(i.y-r.y)}return .5*e},mn=(t,a)=>{const e=t.faces.map(h=>ar(h.vertices.map(o=>o.viewCoordinates))),n=a(e),r=t.vertices.map(h=>({logicalCoordinates:h.logicalCoordinates,viewCoordinates:h.viewCoordinates.timesScalar(n)})),i=new Map(r.map((h,o)=>[t.vertices[o],h]));return{vertices:r,faces:t.faces.map(h=>({logicalCoordinates:h.logicalCoordinates,vertices:h.vertices.map(o=>i.get(o))}))}},nr=(t,a)=>mn(t,e=>Math.sqrt(a/(F.sum(e)/e.length))),sr=(t,a)=>mn(t,e=>Math.sqrt(a/Math.min(...e)));class rr{constructor(a,e){this.start=a,this.end=e}isCanonicalHalfEdge(){return this.start.x<this.end.x||this.start.x===this.end.x&&this.start.y<this.end.y}}class ir{constructor(){C(this,"identifiers",[]);C(this,"canonicalIdentifiers",[]);C(this,"map",new Map)}add(a,e){if(q()&&w(a.x!==e.x||a.y!==e.y),this.lookupAttempt(a,e)!==null)return;const n=(r,i)=>{let h;this.map.has(r)?h=this.map.get(r):(h=new Map,this.map.set(r,h));const o=new rr(r,i);h.set(i,o),this.identifiers.push(o),o.isCanonicalHalfEdge()&&this.canonicalIdentifiers.push(o)};n(a,e),n(e,a)}getAdjacentLocations(a){const e=this.map.get(a);return e?Array.from(e.keys()):[]}lookupAttempt(a,e){const n=this.map.get(a);return n?n.get(e)??null:null}lookup(a,e){const n=this.lookupAttempt(a,e);return q()&&w(n),n}lookupCanonical(a,e){const n=this.lookup(a,e);return n.isCanonicalHalfEdge()?n:this.lookup(e,a)}}const fa=t=>{const a=t.vertices;let e=t.faces;e=e.map(g=>Ae(g.vertices.map(m=>m.viewCoordinates))>0?g:{logicalCoordinates:g.logicalCoordinates,vertices:g.vertices.slice().reverse()});const n=new ir;e.forEach(g=>{for(let m=0;m<g.vertices.length;m++){const x=g.vertices[m].logicalCoordinates,A=g.vertices[(m+1)%g.vertices.length].logicalCoordinates;n.add(x,A)}});const r=new Map,i=new Map,h=new Map,o=new Map,f=g=>r.get(g)??null,l=g=>i.get(g)??null,c=(g,m)=>{const x=n.lookup(g,m);return o.get(x)??null},E=a.map(g=>new er(g.logicalCoordinates,g.viewCoordinates));E.forEach(g=>r.set(g.logicalCoordinates,g));const u=e.map(g=>new $s(g.logicalCoordinates,Mn(g.vertices.map(m=>m.viewCoordinates))));u.forEach(g=>i.set(g.logicalCoordinates,g));const d=n.canonicalIdentifiers.map(g=>new Qs(f(g.start),f(g.end)));d.forEach(g=>h.set(n.lookupCanonical(g.start.logicalCoordinates,g.end.logicalCoordinates),g));const p=n.identifiers.map(g=>new tr(f(g.start),f(g.end),!g.isCanonicalHalfEdge()));p.forEach(g=>o.set(n.lookup(g.start.logicalCoordinates,g.end.logicalCoordinates),g)),d.forEach(g=>{const m=c(g.start.logicalCoordinates,g.end.logicalCoordinates),x=c(g.end.logicalCoordinates,g.start.logicalCoordinates);q()&&w(m),q()&&w(x),m.edge=g,x.edge=g,m.reversed=x,x.reversed=m,g.forwardHalf=m,g.reversedHalf=x,g.vertices=[g.start,g.end]}),e.forEach(g=>{const m=l(g.logicalCoordinates),x=g.vertices.map(v=>f(v.logicalCoordinates)),A=[],T=[];for(let v=0;v<x.length;v++){const I=g.vertices[v].logicalCoordinates,B=g.vertices[(v+1)%x.length].logicalCoordinates,S=g.vertices[(v+2)%x.length].logicalCoordinates,b=c(I,B);b.face=m;const P=c(B,S);b.next=P,P.previous=b,T.push(b),A.push(b.edge)}m.halfEdges=T,m.edges=A,m.vertices=x}),p.forEach(g=>{g.face===void 0&&(g.face=null)}),d.forEach(g=>{g.forwardFace=g.forwardHalf.face,g.reversedFace=g.reversedHalf.face,g.faces=[g.forwardFace,g.reversedFace].filter(m=>m!==null)});const k=new Set(p.filter(g=>g.face===null)),M=[],y=[];for(;k.size;){const g=k.values().next().value;k.delete(g);const m=T=>{q()&&w(T.face===null);const v=T.end.logicalCoordinates,S=n.getAdjacentLocations(v).filter(b=>b!==T.start.logicalCoordinates).map(b=>c(v,b)).filter(b=>b.face===null);return q()&&w(S.length===1),S[0]},x=[g];let A=m(g);for(g.next=A,A.previous=g;A!==g;){x.push(A),k.delete(A);const T=A;A=m(A),T.next=A,A.previous=T}Ae(x.map(T=>T.start.viewCoordinates))<0?M.push(x):y.push(x)}return q()&&w(M.length===1),E.forEach(g=>{const m=n.getAdjacentLocations(g.logicalCoordinates),x=c(m[0],g.logicalCoordinates);let A=x;const T=[x];for(;A.reversed.previous!==x;)q()&&w(A.reversed.previous),A=A.reversed.previous,T.push(A);g.incomingHalfEdges=T,g.outgoingHalfEdges=T.map(v=>v.reversed),g.edges=T.map(v=>v.edge),g.faces=T.map(v=>v.face).filter(v=>v!==null)}),{edges:d,vertices:E,faces:u,halfEdges:p,outerBoundary:M[0],innerBoundaries:y}},Aa=(t,a)=>{const e=F.sortBy(t),n=[];let r=[];for(let h=0;h<e.length;h++){const o=e[h];r.length===0||Math.abs(r[r.length-1]-o)<=a?r.push(o):(n.push(r),r=[o])}r.length>0&&n.push(r);const i=new Map;return n.forEach(h=>{const o=F.sum(h)/h.length;h.forEach(f=>i.set(f,o))}),i};class or extends ca{constructor(a,e){const n=a.flatMap(E=>E.map(u=>u.x)),r=a.flatMap(E=>E.map(u=>u.y)),i=Aa(n,1e-4),h=Aa(r,1e-4),o=[],f=new Map,l=E=>{const u=i.get(E.x),d=h.get(E.y);q()&&w(u!==void 0&&d!==void 0);const p=`${u},${d}`;if(!f.has(p)){const k={logicalCoordinates:new s(0,f.size),viewCoordinates:new s(u,d).timesScalar(e)};f.set(p,k),o.push(k)}return f.get(p)},c=a.map((E,u)=>({logicalCoordinates:new s(u,0),vertices:E.map(l)}));super(fa(sr({vertices:o,faces:c},e))),this.polygons=a,this.scale=e}}const Oe=new Map;class da extends or{constructor(a,e){const n=a.generate(e);super(n,a.scale??1),this.generator=a,this.parameters=e}static get(a,e){const n=a.name+"/"+JSON.stringify(e);return Oe.has(n)||Oe.set(n,new da(a,e)),Oe.get(n)}}const ot=(t,a)=>({name:t.name,parameters:{width:{label:"Width",type:"integer",range:new qa(2,50)},height:{label:"Height",type:"integer",range:new qa(2,50)},squareRegion:{label:"Square",type:"boolean"}},defaultParameterValues:{width:(a==null?void 0:a.width)??10,height:(a==null?void 0:a.height)??10,squareRegion:(a==null?void 0:a.squareRegion)??!1},scale:t.scale,generate:e=>{const n=t.polygons,r=t.basisA,i=t.basisB,h=[],o=new Fe(-e.width/2,-e.height/2,e.width/2,e.height/2),f=Fe.NOTHING.copy();n.forEach(p=>{p.forEach(k=>{f.addPoint(k)})});const l=Math.max(Math.abs(o.minX),Math.abs(o.maxX),Math.abs(o.minY),Math.abs(o.maxY))*20,c=Fe.NOTHING.copy(),E=new s(0,0),u=new s(0,0),d=new s(0,0);return F.range(-l,l).forEach(p=>{E.set(r).multiplyScalar(p),F.range(-l,l).forEach(k=>{u.set(i).multiplyScalar(k),d.set(E).add(u),c.set(f).shift(d),o.intersectsBounds(c)&&n.forEach(M=>{const y=M.map(A=>A.plus(d)),g=Mn(y),m=g.x*2/e.width,x=g.y*2/e.height;if(e.squareRegion){if(Math.abs(m)>=1||Math.abs(x)>=1-1e-6)return}else if(Math.sqrt(m*m+x*x)>=1-1e-6)return;h.push(y)})})}),h}}),En=t=>{q()&&(t.edges.forEach(a=>{const e=a.forwardHalf,n=a.reversedHalf;w(e.edge===a),w(n.edge===a),w(!e.isReversed),w(n.isReversed),w(e.reversed===n),w(n.reversed===e),w(e.start===a.start),w(e.end===a.end),w(n.start===a.end),w(n.end===a.start),w(e.next.previous===e),w(e.previous.next===e),w(n.next.previous===n),w(n.previous.next===n),w(e.next!==e),w(e.previous!==e),w(n.next!==n),w(n.previous!==n),w(e.next.face===e.face),w(e.previous.face===e.face),w(n.next.face===n.face),w(n.previous.face===n.face),w(e.face===a.forwardFace),w(n.face===a.reversedFace)}),t.vertices.forEach(a=>{a.incomingHalfEdges.forEach(r=>{w(r.end===a)}),a.outgoingHalfEdges.forEach(r=>{w(r.start===a)});const e=r=>a.incomingHalfEdges[(r+a.incomingHalfEdges.length)%a.incomingHalfEdges.length],n=r=>a.outgoingHalfEdges[(r+a.outgoingHalfEdges.length)%a.outgoingHalfEdges.length];F.range(0,a.incomingHalfEdges.length).forEach(r=>{const i=e(r),h=n(r);w(i.reversed===h),w(i.next===n(r-1)),w(h.previous===e(r+1))}),a.edges.forEach(r=>{w(r.start===a||r.end===a),w(a.incomingHalfEdges.includes(r.forwardHalf)||a.outgoingHalfEdges.includes(r.forwardHalf)),w(a.incomingHalfEdges.includes(r.reversedHalf)||a.outgoingHalfEdges.includes(r.reversedHalf)),r.forwardFace&&(w(r.forwardFace.vertices.includes(a)),w(a.faces.includes(r.forwardFace))),r.reversedFace&&(w(r.reversedFace.vertices.includes(a)),w(a.faces.includes(r.reversedFace)))}),a.faces.forEach(r=>{w(r.vertices.includes(a))})}))};class lr extends ca{constructor(e,n,r,i=0){let h,o;r?(h=new s(Math.sqrt(3),0).timesScalar(n),o=new s(Math.sqrt(3)/2,3/2).timesScalar(n)):(h=new s(3/2,Math.sqrt(3)/2).timesScalar(n),o=new s(0,Math.sqrt(3)).timesScalar(n));const f=[new s(1,0),new s(1,-1),new s(0,-1),new s(-1,0),new s(-1,1),new s(0,1)],l=F.range(0,6).map(M=>f[M].plus(f[(M+1)%6])),c=M=>l.map(y=>y.plus(M.timesScalar(3))),E=(M,y)=>(Math.abs(M.x-y.x)+Math.abs(M.x+M.y-y.x-y.y)+Math.abs(M.y-y.y))/2,u=[];for(let M=-e;M<=e;M++)for(let y=Math.max(-e,-M-e);y<=Math.min(e,-M+e);y++){const g=new s(M,y);E(g,new s(0,0))>=i&&u.push(g)}const p=F.uniqWith(u.flatMap(c),(M,y)=>M.equals(y)).map(M=>({logicalCoordinates:M,viewCoordinates:h.timesScalar(M.x).plus(o.timesScalar(M.y)).timesScalar(1/3)})),k=u.map(M=>({logicalCoordinates:M,vertices:c(M).map(y=>{const g=p.find(m=>m.logicalCoordinates.equals(y));return q()&&w(g),g})}));super(fa(nr({vertices:p,faces:k},n)));C(this,"isHexagonal",!0);this.radius=e,this.scale=n,this.isPointyTop=r,this.holeRadius=i,q()&&En(this)}static enumeratePointyFaceCoordinates(e){const n=[];for(let r=-e;r<=e;r++)for(let i=Math.max(-e,-r-e);i<=Math.min(e,-r+e);i++)n.push(new s(i,r));return n}}class hr extends ca{constructor(e,n){const r=[],i=new Map,h=(f,l)=>{const c=`${f},${l}`;if(!i.has(c)){const E={logicalCoordinates:new s(f,l),viewCoordinates:new s(f,l)};r.push(E),i.set(c,E)}return i.get(c)},o=F.range(0,n).flatMap(f=>F.range(0,e).map(l=>({logicalCoordinates:new s(l,f),vertices:[h(l,f),h(l+1,f),h(l+1,f+1),h(l,f+1)]})));super(fa({vertices:r,faces:o}));C(this,"isSquare",!0);this.width=e,this.height=n,q()&&En(this)}}/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */const cr=4,ka=0,Ba=1,fr=2;function Jt(t){let a=t.length;for(;--a>=0;)t[a]=0}const dr=0,vn=1,ur=2,gr=3,wr=258,ua=29,ge=256,ie=ge+1+ua,Gt=30,ga=19,qn=2*ie+1,St=15,Ne=16,pr=7,wa=256,bn=16,_n=17,yn=18,ea=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),_e=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),xr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),An=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Mr=512,xt=new Array((ie+2)*2);Jt(xt);const ne=new Array(Gt*2);Jt(ne);const oe=new Array(Mr);Jt(oe);const le=new Array(wr-gr+1);Jt(le);const pa=new Array(ua);Jt(pa);const ke=new Array(Gt);Jt(ke);function Ze(t,a,e,n,r){this.static_tree=t,this.extra_bits=a,this.extra_base=e,this.elems=n,this.max_length=r,this.has_stree=t&&t.length}let kn,Bn,Sn;function Le(t,a){this.dyn_tree=t,this.max_code=0,this.stat_desc=a}const Tn=t=>t<256?oe[t]:oe[256+(t>>>7)],he=(t,a)=>{t.pending_buf[t.pending++]=a&255,t.pending_buf[t.pending++]=a>>>8&255},K=(t,a,e)=>{t.bi_valid>Ne-e?(t.bi_buf|=a<<t.bi_valid&65535,he(t,t.bi_buf),t.bi_buf=a>>Ne-t.bi_valid,t.bi_valid+=e-Ne):(t.bi_buf|=a<<t.bi_valid&65535,t.bi_valid+=e)},ft=(t,a,e)=>{K(t,e[a*2],e[a*2+1])},Cn=(t,a)=>{let e=0;do e|=t&1,t>>>=1,e<<=1;while(--a>0);return e>>>1},mr=t=>{t.bi_valid===16?(he(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=t.bi_buf&255,t.bi_buf>>=8,t.bi_valid-=8)},Er=(t,a)=>{const e=a.dyn_tree,n=a.max_code,r=a.stat_desc.static_tree,i=a.stat_desc.has_stree,h=a.stat_desc.extra_bits,o=a.stat_desc.extra_base,f=a.stat_desc.max_length;let l,c,E,u,d,p,k=0;for(u=0;u<=St;u++)t.bl_count[u]=0;for(e[t.heap[t.heap_max]*2+1]=0,l=t.heap_max+1;l<qn;l++)c=t.heap[l],u=e[e[c*2+1]*2+1]+1,u>f&&(u=f,k++),e[c*2+1]=u,!(c>n)&&(t.bl_count[u]++,d=0,c>=o&&(d=h[c-o]),p=e[c*2],t.opt_len+=p*(u+d),i&&(t.static_len+=p*(r[c*2+1]+d)));if(k!==0){do{for(u=f-1;t.bl_count[u]===0;)u--;t.bl_count[u]--,t.bl_count[u+1]+=2,t.bl_count[f]--,k-=2}while(k>0);for(u=f;u!==0;u--)for(c=t.bl_count[u];c!==0;)E=t.heap[--l],!(E>n)&&(e[E*2+1]!==u&&(t.opt_len+=(u-e[E*2+1])*e[E*2],e[E*2+1]=u),c--)}},In=(t,a,e)=>{const n=new Array(St+1);let r=0,i,h;for(i=1;i<=St;i++)r=r+e[i-1]<<1,n[i]=r;for(h=0;h<=a;h++){let o=t[h*2+1];o!==0&&(t[h*2]=Cn(n[o]++,o))}},vr=()=>{let t,a,e,n,r;const i=new Array(St+1);for(e=0,n=0;n<ua-1;n++)for(pa[n]=e,t=0;t<1<<ea[n];t++)le[e++]=n;for(le[e-1]=n,r=0,n=0;n<16;n++)for(ke[n]=r,t=0;t<1<<_e[n];t++)oe[r++]=n;for(r>>=7;n<Gt;n++)for(ke[n]=r<<7,t=0;t<1<<_e[n]-7;t++)oe[256+r++]=n;for(a=0;a<=St;a++)i[a]=0;for(t=0;t<=143;)xt[t*2+1]=8,t++,i[8]++;for(;t<=255;)xt[t*2+1]=9,t++,i[9]++;for(;t<=279;)xt[t*2+1]=7,t++,i[7]++;for(;t<=287;)xt[t*2+1]=8,t++,i[8]++;for(In(xt,ie+1,i),t=0;t<Gt;t++)ne[t*2+1]=5,ne[t*2]=Cn(t,5);kn=new Ze(xt,ea,ge+1,ie,St),Bn=new Ze(ne,_e,0,Gt,St),Sn=new Ze(new Array(0),xr,0,ga,pr)},zn=t=>{let a;for(a=0;a<ie;a++)t.dyn_ltree[a*2]=0;for(a=0;a<Gt;a++)t.dyn_dtree[a*2]=0;for(a=0;a<ga;a++)t.bl_tree[a*2]=0;t.dyn_ltree[wa*2]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},Rn=t=>{t.bi_valid>8?he(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},Sa=(t,a,e,n)=>{const r=a*2,i=e*2;return t[r]<t[i]||t[r]===t[i]&&n[a]<=n[e]},Pe=(t,a,e)=>{const n=t.heap[e];let r=e<<1;for(;r<=t.heap_len&&(r<t.heap_len&&Sa(a,t.heap[r+1],t.heap[r],t.depth)&&r++,!Sa(a,n,t.heap[r],t.depth));)t.heap[e]=t.heap[r],e=r,r<<=1;t.heap[e]=n},Ta=(t,a,e)=>{let n,r,i=0,h,o;if(t.sym_next!==0)do n=t.pending_buf[t.sym_buf+i++]&255,n+=(t.pending_buf[t.sym_buf+i++]&255)<<8,r=t.pending_buf[t.sym_buf+i++],n===0?ft(t,r,a):(h=le[r],ft(t,h+ge+1,a),o=ea[h],o!==0&&(r-=pa[h],K(t,r,o)),n--,h=Tn(n),ft(t,h,e),o=_e[h],o!==0&&(n-=ke[h],K(t,n,o)));while(i<t.sym_next);ft(t,wa,a)},aa=(t,a)=>{const e=a.dyn_tree,n=a.stat_desc.static_tree,r=a.stat_desc.has_stree,i=a.stat_desc.elems;let h,o,f=-1,l;for(t.heap_len=0,t.heap_max=qn,h=0;h<i;h++)e[h*2]!==0?(t.heap[++t.heap_len]=f=h,t.depth[h]=0):e[h*2+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=f<2?++f:0,e[l*2]=1,t.depth[l]=0,t.opt_len--,r&&(t.static_len-=n[l*2+1]);for(a.max_code=f,h=t.heap_len>>1;h>=1;h--)Pe(t,e,h);l=i;do h=t.heap[1],t.heap[1]=t.heap[t.heap_len--],Pe(t,e,1),o=t.heap[1],t.heap[--t.heap_max]=h,t.heap[--t.heap_max]=o,e[l*2]=e[h*2]+e[o*2],t.depth[l]=(t.depth[h]>=t.depth[o]?t.depth[h]:t.depth[o])+1,e[h*2+1]=e[o*2+1]=l,t.heap[1]=l++,Pe(t,e,1);while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],Er(t,a),In(e,f,t.bl_count)},Ca=(t,a,e)=>{let n,r=-1,i,h=a[0*2+1],o=0,f=7,l=4;for(h===0&&(f=138,l=3),a[(e+1)*2+1]=65535,n=0;n<=e;n++)i=h,h=a[(n+1)*2+1],!(++o<f&&i===h)&&(o<l?t.bl_tree[i*2]+=o:i!==0?(i!==r&&t.bl_tree[i*2]++,t.bl_tree[bn*2]++):o<=10?t.bl_tree[_n*2]++:t.bl_tree[yn*2]++,o=0,r=i,h===0?(f=138,l=3):i===h?(f=6,l=3):(f=7,l=4))},Ia=(t,a,e)=>{let n,r=-1,i,h=a[0*2+1],o=0,f=7,l=4;for(h===0&&(f=138,l=3),n=0;n<=e;n++)if(i=h,h=a[(n+1)*2+1],!(++o<f&&i===h)){if(o<l)do ft(t,i,t.bl_tree);while(--o!==0);else i!==0?(i!==r&&(ft(t,i,t.bl_tree),o--),ft(t,bn,t.bl_tree),K(t,o-3,2)):o<=10?(ft(t,_n,t.bl_tree),K(t,o-3,3)):(ft(t,yn,t.bl_tree),K(t,o-11,7));o=0,r=i,h===0?(f=138,l=3):i===h?(f=6,l=3):(f=7,l=4)}},qr=t=>{let a;for(Ca(t,t.dyn_ltree,t.l_desc.max_code),Ca(t,t.dyn_dtree,t.d_desc.max_code),aa(t,t.bl_desc),a=ga-1;a>=3&&t.bl_tree[An[a]*2+1]===0;a--);return t.opt_len+=3*(a+1)+5+5+4,a},br=(t,a,e,n)=>{let r;for(K(t,a-257,5),K(t,e-1,5),K(t,n-4,4),r=0;r<n;r++)K(t,t.bl_tree[An[r]*2+1],3);Ia(t,t.dyn_ltree,a-1),Ia(t,t.dyn_dtree,e-1)},_r=t=>{let a=4093624447,e;for(e=0;e<=31;e++,a>>>=1)if(a&1&&t.dyn_ltree[e*2]!==0)return ka;if(t.dyn_ltree[9*2]!==0||t.dyn_ltree[10*2]!==0||t.dyn_ltree[13*2]!==0)return Ba;for(e=32;e<ge;e++)if(t.dyn_ltree[e*2]!==0)return Ba;return ka};let za=!1;const yr=t=>{za||(vr(),za=!0),t.l_desc=new Le(t.dyn_ltree,kn),t.d_desc=new Le(t.dyn_dtree,Bn),t.bl_desc=new Le(t.bl_tree,Sn),t.bi_buf=0,t.bi_valid=0,zn(t)},Fn=(t,a,e,n)=>{K(t,(dr<<1)+(n?1:0),3),Rn(t),he(t,e),he(t,~e),e&&t.pending_buf.set(t.window.subarray(a,a+e),t.pending),t.pending+=e},Ar=t=>{K(t,vn<<1,3),ft(t,wa,xt),mr(t)},kr=(t,a,e,n)=>{let r,i,h=0;t.level>0?(t.strm.data_type===fr&&(t.strm.data_type=_r(t)),aa(t,t.l_desc),aa(t,t.d_desc),h=qr(t),r=t.opt_len+3+7>>>3,i=t.static_len+3+7>>>3,i<=r&&(r=i)):r=i=e+5,e+4<=r&&a!==-1?Fn(t,a,e,n):t.strategy===cr||i===r?(K(t,(vn<<1)+(n?1:0),3),Ta(t,xt,ne)):(K(t,(ur<<1)+(n?1:0),3),br(t,t.l_desc.max_code+1,t.d_desc.max_code+1,h+1),Ta(t,t.dyn_ltree,t.dyn_dtree)),zn(t),n&&Rn(t)},Br=(t,a,e)=>(t.pending_buf[t.sym_buf+t.sym_next++]=a,t.pending_buf[t.sym_buf+t.sym_next++]=a>>8,t.pending_buf[t.sym_buf+t.sym_next++]=e,a===0?t.dyn_ltree[e*2]++:(t.matches++,a--,t.dyn_ltree[(le[e]+ge+1)*2]++,t.dyn_dtree[Tn(a)*2]++),t.sym_next===t.sym_end);var Sr=yr,Tr=Fn,Cr=kr,Ir=Br,zr=Ar,Rr={_tr_init:Sr,_tr_stored_block:Tr,_tr_flush_block:Cr,_tr_tally:Ir,_tr_align:zr};const Fr=(t,a,e,n)=>{let r=t&65535|0,i=t>>>16&65535|0,h=0;for(;e!==0;){h=e>2e3?2e3:e,e-=h;do r=r+a[n++]|0,i=i+r|0;while(--h);r%=65521,i%=65521}return r|i<<16|0};var ce=Fr;const Hr=()=>{let t,a=[];for(var e=0;e<256;e++){t=e;for(var n=0;n<8;n++)t=t&1?3988292384^t>>>1:t>>>1;a[e]=t}return a},Dr=new Uint32Array(Hr()),Or=(t,a,e,n)=>{const r=Dr,i=n+e;t^=-1;for(let h=n;h<i;h++)t=t>>>8^r[(t^a[h])&255];return t^-1};var G=Or,It={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},Ft={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:Nr,_tr_stored_block:na,_tr_flush_block:Zr,_tr_tally:bt,_tr_align:Lr}=Rr,{Z_NO_FLUSH:_t,Z_PARTIAL_FLUSH:Pr,Z_FULL_FLUSH:Gr,Z_FINISH:st,Z_BLOCK:Ra,Z_OK:U,Z_STREAM_END:Fa,Z_STREAM_ERROR:dt,Z_DATA_ERROR:Ur,Z_BUF_ERROR:Ge,Z_DEFAULT_COMPRESSION:Yr,Z_FILTERED:Vr,Z_HUFFMAN_ONLY:me,Z_RLE:Jr,Z_FIXED:jr,Z_DEFAULT_STRATEGY:Wr,Z_UNKNOWN:Xr,Z_DEFLATED:Ce}=Ft,Kr=9,Qr=15,$r=8,ti=29,ei=256,sa=ei+1+ti,ai=30,ni=19,si=2*sa+1,ri=15,z=3,qt=258,ut=qt+z+1,ii=32,Ut=42,xa=57,ra=69,ia=73,oa=91,la=103,Tt=113,te=666,X=1,jt=2,zt=3,Wt=4,oi=3,Ct=(t,a)=>(t.msg=It[a],a),Ha=t=>t*2-(t>4?9:0),vt=t=>{let a=t.length;for(;--a>=0;)t[a]=0},li=t=>{let a,e,n,r=t.w_size;a=t.hash_size,n=a;do e=t.head[--n],t.head[n]=e>=r?e-r:0;while(--a);a=r,n=a;do e=t.prev[--n],t.prev[n]=e>=r?e-r:0;while(--a)};let hi=(t,a,e)=>(a<<t.hash_shift^e)&t.hash_mask,yt=hi;const Q=t=>{const a=t.state;let e=a.pending;e>t.avail_out&&(e=t.avail_out),e!==0&&(t.output.set(a.pending_buf.subarray(a.pending_out,a.pending_out+e),t.next_out),t.next_out+=e,a.pending_out+=e,t.total_out+=e,t.avail_out-=e,a.pending-=e,a.pending===0&&(a.pending_out=0))},$=(t,a)=>{Zr(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,a),t.block_start=t.strstart,Q(t.strm)},H=(t,a)=>{t.pending_buf[t.pending++]=a},$t=(t,a)=>{t.pending_buf[t.pending++]=a>>>8&255,t.pending_buf[t.pending++]=a&255},ha=(t,a,e,n)=>{let r=t.avail_in;return r>n&&(r=n),r===0?0:(t.avail_in-=r,a.set(t.input.subarray(t.next_in,t.next_in+r),e),t.state.wrap===1?t.adler=ce(t.adler,a,r,e):t.state.wrap===2&&(t.adler=G(t.adler,a,r,e)),t.next_in+=r,t.total_in+=r,r)},Hn=(t,a)=>{let e=t.max_chain_length,n=t.strstart,r,i,h=t.prev_length,o=t.nice_match;const f=t.strstart>t.w_size-ut?t.strstart-(t.w_size-ut):0,l=t.window,c=t.w_mask,E=t.prev,u=t.strstart+qt;let d=l[n+h-1],p=l[n+h];t.prev_length>=t.good_match&&(e>>=2),o>t.lookahead&&(o=t.lookahead);do if(r=a,!(l[r+h]!==p||l[r+h-1]!==d||l[r]!==l[n]||l[++r]!==l[n+1])){n+=2,r++;do;while(l[++n]===l[++r]&&l[++n]===l[++r]&&l[++n]===l[++r]&&l[++n]===l[++r]&&l[++n]===l[++r]&&l[++n]===l[++r]&&l[++n]===l[++r]&&l[++n]===l[++r]&&n<u);if(i=qt-(u-n),n=u-qt,i>h){if(t.match_start=a,h=i,i>=o)break;d=l[n+h-1],p=l[n+h]}}while((a=E[a&c])>f&&--e!==0);return h<=t.lookahead?h:t.lookahead},Yt=t=>{const a=t.w_size;let e,n,r;do{if(n=t.window_size-t.lookahead-t.strstart,t.strstart>=a+(a-ut)&&(t.window.set(t.window.subarray(a,a+a-n),0),t.match_start-=a,t.strstart-=a,t.block_start-=a,t.insert>t.strstart&&(t.insert=t.strstart),li(t),n+=a),t.strm.avail_in===0)break;if(e=ha(t.strm,t.window,t.strstart+t.lookahead,n),t.lookahead+=e,t.lookahead+t.insert>=z)for(r=t.strstart-t.insert,t.ins_h=t.window[r],t.ins_h=yt(t,t.ins_h,t.window[r+1]);t.insert&&(t.ins_h=yt(t,t.ins_h,t.window[r+z-1]),t.prev[r&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=r,r++,t.insert--,!(t.lookahead+t.insert<z)););}while(t.lookahead<ut&&t.strm.avail_in!==0)},Dn=(t,a)=>{let e=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,n,r,i,h=0,o=t.strm.avail_in;do{if(n=65535,i=t.bi_valid+42>>3,t.strm.avail_out<i||(i=t.strm.avail_out-i,r=t.strstart-t.block_start,n>r+t.strm.avail_in&&(n=r+t.strm.avail_in),n>i&&(n=i),n<e&&(n===0&&a!==st||a===_t||n!==r+t.strm.avail_in)))break;h=a===st&&n===r+t.strm.avail_in?1:0,na(t,0,0,h),t.pending_buf[t.pending-4]=n,t.pending_buf[t.pending-3]=n>>8,t.pending_buf[t.pending-2]=~n,t.pending_buf[t.pending-1]=~n>>8,Q(t.strm),r&&(r>n&&(r=n),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+r),t.strm.next_out),t.strm.next_out+=r,t.strm.avail_out-=r,t.strm.total_out+=r,t.block_start+=r,n-=r),n&&(ha(t.strm,t.strm.output,t.strm.next_out,n),t.strm.next_out+=n,t.strm.avail_out-=n,t.strm.total_out+=n)}while(h===0);return o-=t.strm.avail_in,o&&(o>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=o&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-o,t.strm.next_in),t.strstart),t.strstart+=o,t.insert+=o>t.w_size-t.insert?t.w_size-t.insert:o),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),h?Wt:a!==_t&&a!==st&&t.strm.avail_in===0&&t.strstart===t.block_start?jt:(i=t.window_size-t.strstart,t.strm.avail_in>i&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,i+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),i>t.strm.avail_in&&(i=t.strm.avail_in),i&&(ha(t.strm,t.window,t.strstart,i),t.strstart+=i,t.insert+=i>t.w_size-t.insert?t.w_size-t.insert:i),t.high_water<t.strstart&&(t.high_water=t.strstart),i=t.bi_valid+42>>3,i=t.pending_buf_size-i>65535?65535:t.pending_buf_size-i,e=i>t.w_size?t.w_size:i,r=t.strstart-t.block_start,(r>=e||(r||a===st)&&a!==_t&&t.strm.avail_in===0&&r<=i)&&(n=r>i?i:r,h=a===st&&t.strm.avail_in===0&&n===r?1:0,na(t,t.block_start,n,h),t.block_start+=n,Q(t.strm)),h?zt:X)},Ue=(t,a)=>{let e,n;for(;;){if(t.lookahead<ut){if(Yt(t),t.lookahead<ut&&a===_t)return X;if(t.lookahead===0)break}if(e=0,t.lookahead>=z&&(t.ins_h=yt(t,t.ins_h,t.window[t.strstart+z-1]),e=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),e!==0&&t.strstart-e<=t.w_size-ut&&(t.match_length=Hn(t,e)),t.match_length>=z)if(n=bt(t,t.strstart-t.match_start,t.match_length-z),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=z){t.match_length--;do t.strstart++,t.ins_h=yt(t,t.ins_h,t.window[t.strstart+z-1]),e=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart;while(--t.match_length!==0);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=yt(t,t.ins_h,t.window[t.strstart+1]);else n=bt(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(n&&($(t,!1),t.strm.avail_out===0))return X}return t.insert=t.strstart<z-1?t.strstart:z-1,a===st?($(t,!0),t.strm.avail_out===0?zt:Wt):t.sym_next&&($(t,!1),t.strm.avail_out===0)?X:jt},Ot=(t,a)=>{let e,n,r;for(;;){if(t.lookahead<ut){if(Yt(t),t.lookahead<ut&&a===_t)return X;if(t.lookahead===0)break}if(e=0,t.lookahead>=z&&(t.ins_h=yt(t,t.ins_h,t.window[t.strstart+z-1]),e=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=z-1,e!==0&&t.prev_length<t.max_lazy_match&&t.strstart-e<=t.w_size-ut&&(t.match_length=Hn(t,e),t.match_length<=5&&(t.strategy===Vr||t.match_length===z&&t.strstart-t.match_start>4096)&&(t.match_length=z-1)),t.prev_length>=z&&t.match_length<=t.prev_length){r=t.strstart+t.lookahead-z,n=bt(t,t.strstart-1-t.prev_match,t.prev_length-z),t.lookahead-=t.prev_length-1,t.prev_length-=2;do++t.strstart<=r&&(t.ins_h=yt(t,t.ins_h,t.window[t.strstart+z-1]),e=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart);while(--t.prev_length!==0);if(t.match_available=0,t.match_length=z-1,t.strstart++,n&&($(t,!1),t.strm.avail_out===0))return X}else if(t.match_available){if(n=bt(t,0,t.window[t.strstart-1]),n&&$(t,!1),t.strstart++,t.lookahead--,t.strm.avail_out===0)return X}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(n=bt(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<z-1?t.strstart:z-1,a===st?($(t,!0),t.strm.avail_out===0?zt:Wt):t.sym_next&&($(t,!1),t.strm.avail_out===0)?X:jt},ci=(t,a)=>{let e,n,r,i;const h=t.window;for(;;){if(t.lookahead<=qt){if(Yt(t),t.lookahead<=qt&&a===_t)return X;if(t.lookahead===0)break}if(t.match_length=0,t.lookahead>=z&&t.strstart>0&&(r=t.strstart-1,n=h[r],n===h[++r]&&n===h[++r]&&n===h[++r])){i=t.strstart+qt;do;while(n===h[++r]&&n===h[++r]&&n===h[++r]&&n===h[++r]&&n===h[++r]&&n===h[++r]&&n===h[++r]&&n===h[++r]&&r<i);t.match_length=qt-(i-r),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=z?(e=bt(t,1,t.match_length-z),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(e=bt(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),e&&($(t,!1),t.strm.avail_out===0))return X}return t.insert=0,a===st?($(t,!0),t.strm.avail_out===0?zt:Wt):t.sym_next&&($(t,!1),t.strm.avail_out===0)?X:jt},fi=(t,a)=>{let e;for(;;){if(t.lookahead===0&&(Yt(t),t.lookahead===0)){if(a===_t)return X;break}if(t.match_length=0,e=bt(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,e&&($(t,!1),t.strm.avail_out===0))return X}return t.insert=0,a===st?($(t,!0),t.strm.avail_out===0?zt:Wt):t.sym_next&&($(t,!1),t.strm.avail_out===0)?X:jt};function ct(t,a,e,n,r){this.good_length=t,this.max_lazy=a,this.nice_length=e,this.max_chain=n,this.func=r}const ee=[new ct(0,0,0,0,Dn),new ct(4,4,8,4,Ue),new ct(4,5,16,8,Ue),new ct(4,6,32,32,Ue),new ct(4,4,16,16,Ot),new ct(8,16,32,32,Ot),new ct(8,16,128,128,Ot),new ct(8,32,128,256,Ot),new ct(32,128,258,1024,Ot),new ct(32,258,258,4096,Ot)],di=t=>{t.window_size=2*t.w_size,vt(t.head),t.max_lazy_match=ee[t.level].max_lazy,t.good_match=ee[t.level].good_length,t.nice_match=ee[t.level].nice_length,t.max_chain_length=ee[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=z-1,t.match_available=0,t.ins_h=0};function ui(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Ce,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(si*2),this.dyn_dtree=new Uint16Array((2*ai+1)*2),this.bl_tree=new Uint16Array((2*ni+1)*2),vt(this.dyn_ltree),vt(this.dyn_dtree),vt(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(ri+1),this.heap=new Uint16Array(2*sa+1),vt(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*sa+1),vt(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const we=t=>{if(!t)return 1;const a=t.state;return!a||a.strm!==t||a.status!==Ut&&a.status!==xa&&a.status!==ra&&a.status!==ia&&a.status!==oa&&a.status!==la&&a.status!==Tt&&a.status!==te?1:0},On=t=>{if(we(t))return Ct(t,dt);t.total_in=t.total_out=0,t.data_type=Xr;const a=t.state;return a.pending=0,a.pending_out=0,a.wrap<0&&(a.wrap=-a.wrap),a.status=a.wrap===2?xa:a.wrap?Ut:Tt,t.adler=a.wrap===2?0:1,a.last_flush=-2,Nr(a),U},Nn=t=>{const a=On(t);return a===U&&di(t.state),a},gi=(t,a)=>we(t)||t.state.wrap!==2?dt:(t.state.gzhead=a,U),Zn=(t,a,e,n,r,i)=>{if(!t)return dt;let h=1;if(a===Yr&&(a=6),n<0?(h=0,n=-n):n>15&&(h=2,n-=16),r<1||r>Kr||e!==Ce||n<8||n>15||a<0||a>9||i<0||i>jr||n===8&&h!==1)return Ct(t,dt);n===8&&(n=9);const o=new ui;return t.state=o,o.strm=t,o.status=Ut,o.wrap=h,o.gzhead=null,o.w_bits=n,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=r+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+z-1)/z),o.window=new Uint8Array(o.w_size*2),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<r+6,o.pending_buf_size=o.lit_bufsize*4,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=(o.lit_bufsize-1)*3,o.level=a,o.strategy=i,o.method=e,Nn(t)},wi=(t,a)=>Zn(t,a,Ce,Qr,$r,Wr),pi=(t,a)=>{if(we(t)||a>Ra||a<0)return t?Ct(t,dt):dt;const e=t.state;if(!t.output||t.avail_in!==0&&!t.input||e.status===te&&a!==st)return Ct(t,t.avail_out===0?Ge:dt);const n=e.last_flush;if(e.last_flush=a,e.pending!==0){if(Q(t),t.avail_out===0)return e.last_flush=-1,U}else if(t.avail_in===0&&Ha(a)<=Ha(n)&&a!==st)return Ct(t,Ge);if(e.status===te&&t.avail_in!==0)return Ct(t,Ge);if(e.status===Ut&&e.wrap===0&&(e.status=Tt),e.status===Ut){let r=Ce+(e.w_bits-8<<4)<<8,i=-1;if(e.strategy>=me||e.level<2?i=0:e.level<6?i=1:e.level===6?i=2:i=3,r|=i<<6,e.strstart!==0&&(r|=ii),r+=31-r%31,$t(e,r),e.strstart!==0&&($t(e,t.adler>>>16),$t(e,t.adler&65535)),t.adler=1,e.status=Tt,Q(t),e.pending!==0)return e.last_flush=-1,U}if(e.status===xa){if(t.adler=0,H(e,31),H(e,139),H(e,8),e.gzhead)H(e,(e.gzhead.text?1:0)+(e.gzhead.hcrc?2:0)+(e.gzhead.extra?4:0)+(e.gzhead.name?8:0)+(e.gzhead.comment?16:0)),H(e,e.gzhead.time&255),H(e,e.gzhead.time>>8&255),H(e,e.gzhead.time>>16&255),H(e,e.gzhead.time>>24&255),H(e,e.level===9?2:e.strategy>=me||e.level<2?4:0),H(e,e.gzhead.os&255),e.gzhead.extra&&e.gzhead.extra.length&&(H(e,e.gzhead.extra.length&255),H(e,e.gzhead.extra.length>>8&255)),e.gzhead.hcrc&&(t.adler=G(t.adler,e.pending_buf,e.pending,0)),e.gzindex=0,e.status=ra;else if(H(e,0),H(e,0),H(e,0),H(e,0),H(e,0),H(e,e.level===9?2:e.strategy>=me||e.level<2?4:0),H(e,oi),e.status=Tt,Q(t),e.pending!==0)return e.last_flush=-1,U}if(e.status===ra){if(e.gzhead.extra){let r=e.pending,i=(e.gzhead.extra.length&65535)-e.gzindex;for(;e.pending+i>e.pending_buf_size;){let o=e.pending_buf_size-e.pending;if(e.pending_buf.set(e.gzhead.extra.subarray(e.gzindex,e.gzindex+o),e.pending),e.pending=e.pending_buf_size,e.gzhead.hcrc&&e.pending>r&&(t.adler=G(t.adler,e.pending_buf,e.pending-r,r)),e.gzindex+=o,Q(t),e.pending!==0)return e.last_flush=-1,U;r=0,i-=o}let h=new Uint8Array(e.gzhead.extra);e.pending_buf.set(h.subarray(e.gzindex,e.gzindex+i),e.pending),e.pending+=i,e.gzhead.hcrc&&e.pending>r&&(t.adler=G(t.adler,e.pending_buf,e.pending-r,r)),e.gzindex=0}e.status=ia}if(e.status===ia){if(e.gzhead.name){let r=e.pending,i;do{if(e.pending===e.pending_buf_size){if(e.gzhead.hcrc&&e.pending>r&&(t.adler=G(t.adler,e.pending_buf,e.pending-r,r)),Q(t),e.pending!==0)return e.last_flush=-1,U;r=0}e.gzindex<e.gzhead.name.length?i=e.gzhead.name.charCodeAt(e.gzindex++)&255:i=0,H(e,i)}while(i!==0);e.gzhead.hcrc&&e.pending>r&&(t.adler=G(t.adler,e.pending_buf,e.pending-r,r)),e.gzindex=0}e.status=oa}if(e.status===oa){if(e.gzhead.comment){let r=e.pending,i;do{if(e.pending===e.pending_buf_size){if(e.gzhead.hcrc&&e.pending>r&&(t.adler=G(t.adler,e.pending_buf,e.pending-r,r)),Q(t),e.pending!==0)return e.last_flush=-1,U;r=0}e.gzindex<e.gzhead.comment.length?i=e.gzhead.comment.charCodeAt(e.gzindex++)&255:i=0,H(e,i)}while(i!==0);e.gzhead.hcrc&&e.pending>r&&(t.adler=G(t.adler,e.pending_buf,e.pending-r,r))}e.status=la}if(e.status===la){if(e.gzhead.hcrc){if(e.pending+2>e.pending_buf_size&&(Q(t),e.pending!==0))return e.last_flush=-1,U;H(e,t.adler&255),H(e,t.adler>>8&255),t.adler=0}if(e.status=Tt,Q(t),e.pending!==0)return e.last_flush=-1,U}if(t.avail_in!==0||e.lookahead!==0||a!==_t&&e.status!==te){let r=e.level===0?Dn(e,a):e.strategy===me?fi(e,a):e.strategy===Jr?ci(e,a):ee[e.level].func(e,a);if((r===zt||r===Wt)&&(e.status=te),r===X||r===zt)return t.avail_out===0&&(e.last_flush=-1),U;if(r===jt&&(a===Pr?Lr(e):a!==Ra&&(na(e,0,0,!1),a===Gr&&(vt(e.head),e.lookahead===0&&(e.strstart=0,e.block_start=0,e.insert=0))),Q(t),t.avail_out===0))return e.last_flush=-1,U}return a!==st?U:e.wrap<=0?Fa:(e.wrap===2?(H(e,t.adler&255),H(e,t.adler>>8&255),H(e,t.adler>>16&255),H(e,t.adler>>24&255),H(e,t.total_in&255),H(e,t.total_in>>8&255),H(e,t.total_in>>16&255),H(e,t.total_in>>24&255)):($t(e,t.adler>>>16),$t(e,t.adler&65535)),Q(t),e.wrap>0&&(e.wrap=-e.wrap),e.pending!==0?U:Fa)},xi=t=>{if(we(t))return dt;const a=t.state.status;return t.state=null,a===Tt?Ct(t,Ur):U},Mi=(t,a)=>{let e=a.length;if(we(t))return dt;const n=t.state,r=n.wrap;if(r===2||r===1&&n.status!==Ut||n.lookahead)return dt;if(r===1&&(t.adler=ce(t.adler,a,e,0)),n.wrap=0,e>=n.w_size){r===0&&(vt(n.head),n.strstart=0,n.block_start=0,n.insert=0);let f=new Uint8Array(n.w_size);f.set(a.subarray(e-n.w_size,e),0),a=f,e=n.w_size}const i=t.avail_in,h=t.next_in,o=t.input;for(t.avail_in=e,t.next_in=0,t.input=a,Yt(n);n.lookahead>=z;){let f=n.strstart,l=n.lookahead-(z-1);do n.ins_h=yt(n,n.ins_h,n.window[f+z-1]),n.prev[f&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=f,f++;while(--l);n.strstart=f,n.lookahead=z-1,Yt(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=z-1,n.match_available=0,t.next_in=h,t.input=o,t.avail_in=i,n.wrap=r,U};var mi=wi,Ei=Zn,vi=Nn,qi=On,bi=gi,_i=pi,yi=xi,Ai=Mi,ki="pako deflate (from Nodeca project)",se={deflateInit:mi,deflateInit2:Ei,deflateReset:vi,deflateResetKeep:qi,deflateSetHeader:bi,deflate:_i,deflateEnd:yi,deflateSetDictionary:Ai,deflateInfo:ki};const Bi=(t,a)=>Object.prototype.hasOwnProperty.call(t,a);var Si=function(t){const a=Array.prototype.slice.call(arguments,1);for(;a.length;){const e=a.shift();if(e){if(typeof e!="object")throw new TypeError(e+"must be non-object");for(const n in e)Bi(e,n)&&(t[n]=e[n])}}return t},Ti=t=>{let a=0;for(let n=0,r=t.length;n<r;n++)a+=t[n].length;const e=new Uint8Array(a);for(let n=0,r=0,i=t.length;n<i;n++){let h=t[n];e.set(h,r),r+=h.length}return e},Ie={assign:Si,flattenChunks:Ti};let Ln=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{Ln=!1}const fe=new Uint8Array(256);for(let t=0;t<256;t++)fe[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;fe[254]=fe[254]=1;var Ci=t=>{if(typeof TextEncoder=="function"&&TextEncoder.prototype.encode)return new TextEncoder().encode(t);let a,e,n,r,i,h=t.length,o=0;for(r=0;r<h;r++)e=t.charCodeAt(r),(e&64512)===55296&&r+1<h&&(n=t.charCodeAt(r+1),(n&64512)===56320&&(e=65536+(e-55296<<10)+(n-56320),r++)),o+=e<128?1:e<2048?2:e<65536?3:4;for(a=new Uint8Array(o),i=0,r=0;i<o;r++)e=t.charCodeAt(r),(e&64512)===55296&&r+1<h&&(n=t.charCodeAt(r+1),(n&64512)===56320&&(e=65536+(e-55296<<10)+(n-56320),r++)),e<128?a[i++]=e:e<2048?(a[i++]=192|e>>>6,a[i++]=128|e&63):e<65536?(a[i++]=224|e>>>12,a[i++]=128|e>>>6&63,a[i++]=128|e&63):(a[i++]=240|e>>>18,a[i++]=128|e>>>12&63,a[i++]=128|e>>>6&63,a[i++]=128|e&63);return a};const Ii=(t,a)=>{if(a<65534&&t.subarray&&Ln)return String.fromCharCode.apply(null,t.length===a?t:t.subarray(0,a));let e="";for(let n=0;n<a;n++)e+=String.fromCharCode(t[n]);return e};var zi=(t,a)=>{const e=a||t.length;if(typeof TextDecoder=="function"&&TextDecoder.prototype.decode)return new TextDecoder().decode(t.subarray(0,a));let n,r;const i=new Array(e*2);for(r=0,n=0;n<e;){let h=t[n++];if(h<128){i[r++]=h;continue}let o=fe[h];if(o>4){i[r++]=65533,n+=o-1;continue}for(h&=o===2?31:o===3?15:7;o>1&&n<e;)h=h<<6|t[n++]&63,o--;if(o>1){i[r++]=65533;continue}h<65536?i[r++]=h:(h-=65536,i[r++]=55296|h>>10&1023,i[r++]=56320|h&1023)}return Ii(i,r)},Ri=(t,a)=>{a=a||t.length,a>t.length&&(a=t.length);let e=a-1;for(;e>=0&&(t[e]&192)===128;)e--;return e<0||e===0?a:e+fe[t[e]]>a?e:a},de={string2buf:Ci,buf2string:zi,utf8border:Ri};function Fi(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var Pn=Fi;const Gn=Object.prototype.toString,{Z_NO_FLUSH:Hi,Z_SYNC_FLUSH:Di,Z_FULL_FLUSH:Oi,Z_FINISH:Ni,Z_OK:Be,Z_STREAM_END:Zi,Z_DEFAULT_COMPRESSION:Li,Z_DEFAULT_STRATEGY:Pi,Z_DEFLATED:Gi}=Ft;function pe(t){this.options=Ie.assign({level:Li,method:Gi,chunkSize:16384,windowBits:15,memLevel:8,strategy:Pi},t||{});let a=this.options;a.raw&&a.windowBits>0?a.windowBits=-a.windowBits:a.gzip&&a.windowBits>0&&a.windowBits<16&&(a.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Pn,this.strm.avail_out=0;let e=se.deflateInit2(this.strm,a.level,a.method,a.windowBits,a.memLevel,a.strategy);if(e!==Be)throw new Error(It[e]);if(a.header&&se.deflateSetHeader(this.strm,a.header),a.dictionary){let n;if(typeof a.dictionary=="string"?n=de.string2buf(a.dictionary):Gn.call(a.dictionary)==="[object ArrayBuffer]"?n=new Uint8Array(a.dictionary):n=a.dictionary,e=se.deflateSetDictionary(this.strm,n),e!==Be)throw new Error(It[e]);this._dict_set=!0}}pe.prototype.push=function(t,a){const e=this.strm,n=this.options.chunkSize;let r,i;if(this.ended)return!1;for(a===~~a?i=a:i=a===!0?Ni:Hi,typeof t=="string"?e.input=de.string2buf(t):Gn.call(t)==="[object ArrayBuffer]"?e.input=new Uint8Array(t):e.input=t,e.next_in=0,e.avail_in=e.input.length;;){if(e.avail_out===0&&(e.output=new Uint8Array(n),e.next_out=0,e.avail_out=n),(i===Di||i===Oi)&&e.avail_out<=6){this.onData(e.output.subarray(0,e.next_out)),e.avail_out=0;continue}if(r=se.deflate(e,i),r===Zi)return e.next_out>0&&this.onData(e.output.subarray(0,e.next_out)),r=se.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===Be;if(e.avail_out===0){this.onData(e.output);continue}if(i>0&&e.next_out>0){this.onData(e.output.subarray(0,e.next_out)),e.avail_out=0;continue}if(e.avail_in===0)break}return!0};pe.prototype.onData=function(t){this.chunks.push(t)};pe.prototype.onEnd=function(t){t===Be&&(this.result=Ie.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};function Ma(t,a){const e=new pe(a);if(e.push(t,!0),e.err)throw e.msg||It[e.err];return e.result}function Ui(t,a){return a=a||{},a.raw=!0,Ma(t,a)}function Yi(t,a){return a=a||{},a.gzip=!0,Ma(t,a)}var Vi=pe,Ji=Ma,ji=Ui,Wi=Yi,Xi=Ft,Ki={Deflate:Vi,deflate:Ji,deflateRaw:ji,gzip:Wi,constants:Xi};const Ee=16209,Qi=16191;var $i=function(a,e){let n,r,i,h,o,f,l,c,E,u,d,p,k,M,y,g,m,x,A,T,v,I,B,S;const b=a.state;n=a.next_in,B=a.input,r=n+(a.avail_in-5),i=a.next_out,S=a.output,h=i-(e-a.avail_out),o=i+(a.avail_out-257),f=b.dmax,l=b.wsize,c=b.whave,E=b.wnext,u=b.window,d=b.hold,p=b.bits,k=b.lencode,M=b.distcode,y=(1<<b.lenbits)-1,g=(1<<b.distbits)-1;t:do{p<15&&(d+=B[n++]<<p,p+=8,d+=B[n++]<<p,p+=8),m=k[d&y];e:for(;;){if(x=m>>>24,d>>>=x,p-=x,x=m>>>16&255,x===0)S[i++]=m&65535;else if(x&16){A=m&65535,x&=15,x&&(p<x&&(d+=B[n++]<<p,p+=8),A+=d&(1<<x)-1,d>>>=x,p-=x),p<15&&(d+=B[n++]<<p,p+=8,d+=B[n++]<<p,p+=8),m=M[d&g];a:for(;;){if(x=m>>>24,d>>>=x,p-=x,x=m>>>16&255,x&16){if(T=m&65535,x&=15,p<x&&(d+=B[n++]<<p,p+=8,p<x&&(d+=B[n++]<<p,p+=8)),T+=d&(1<<x)-1,T>f){a.msg="invalid distance too far back",b.mode=Ee;break t}if(d>>>=x,p-=x,x=i-h,T>x){if(x=T-x,x>c&&b.sane){a.msg="invalid distance too far back",b.mode=Ee;break t}if(v=0,I=u,E===0){if(v+=l-x,x<A){A-=x;do S[i++]=u[v++];while(--x);v=i-T,I=S}}else if(E<x){if(v+=l+E-x,x-=E,x<A){A-=x;do S[i++]=u[v++];while(--x);if(v=0,E<A){x=E,A-=x;do S[i++]=u[v++];while(--x);v=i-T,I=S}}}else if(v+=E-x,x<A){A-=x;do S[i++]=u[v++];while(--x);v=i-T,I=S}for(;A>2;)S[i++]=I[v++],S[i++]=I[v++],S[i++]=I[v++],A-=3;A&&(S[i++]=I[v++],A>1&&(S[i++]=I[v++]))}else{v=i-T;do S[i++]=S[v++],S[i++]=S[v++],S[i++]=S[v++],A-=3;while(A>2);A&&(S[i++]=S[v++],A>1&&(S[i++]=S[v++]))}}else if(x&64){a.msg="invalid distance code",b.mode=Ee;break t}else{m=M[(m&65535)+(d&(1<<x)-1)];continue a}break}}else if(x&64)if(x&32){b.mode=Qi;break t}else{a.msg="invalid literal/length code",b.mode=Ee;break t}else{m=k[(m&65535)+(d&(1<<x)-1)];continue e}break}}while(n<r&&i<o);A=p>>3,n-=A,p-=A<<3,d&=(1<<p)-1,a.next_in=n,a.next_out=i,a.avail_in=n<r?5+(r-n):5-(n-r),a.avail_out=i<o?257+(o-i):257-(i-o),b.hold=d,b.bits=p};const Nt=15,Da=852,Oa=592,Na=0,Ye=1,Za=2,to=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),eo=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),ao=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),no=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),so=(t,a,e,n,r,i,h,o)=>{const f=o.bits;let l=0,c=0,E=0,u=0,d=0,p=0,k=0,M=0,y=0,g=0,m,x,A,T,v,I=null,B;const S=new Uint16Array(Nt+1),b=new Uint16Array(Nt+1);let P=null,mt,V,O;for(l=0;l<=Nt;l++)S[l]=0;for(c=0;c<n;c++)S[a[e+c]]++;for(d=f,u=Nt;u>=1&&S[u]===0;u--);if(d>u&&(d=u),u===0)return r[i++]=1<<24|64<<16|0,r[i++]=1<<24|64<<16|0,o.bits=1,0;for(E=1;E<u&&S[E]===0;E++);for(d<E&&(d=E),M=1,l=1;l<=Nt;l++)if(M<<=1,M-=S[l],M<0)return-1;if(M>0&&(t===Na||u!==1))return-1;for(b[1]=0,l=1;l<Nt;l++)b[l+1]=b[l]+S[l];for(c=0;c<n;c++)a[e+c]!==0&&(h[b[a[e+c]]++]=c);if(t===Na?(I=P=h,B=20):t===Ye?(I=to,P=eo,B=257):(I=ao,P=no,B=0),g=0,c=0,l=E,v=i,p=d,k=0,A=-1,y=1<<d,T=y-1,t===Ye&&y>Da||t===Za&&y>Oa)return 1;for(;;){mt=l-k,h[c]+1<B?(V=0,O=h[c]):h[c]>=B?(V=P[h[c]-B],O=I[h[c]-B]):(V=96,O=0),m=1<<l-k,x=1<<p,E=x;do x-=m,r[v+(g>>k)+x]=mt<<24|V<<16|O|0;while(x!==0);for(m=1<<l-1;g&m;)m>>=1;if(m!==0?(g&=m-1,g+=m):g=0,c++,--S[l]===0){if(l===u)break;l=a[e+h[c]]}if(l>d&&(g&T)!==A){for(k===0&&(k=d),v+=E,p=l-k,M=1<<p;p+k<u&&(M-=S[p+k],!(M<=0));)p++,M<<=1;if(y+=1<<p,t===Ye&&y>Da||t===Za&&y>Oa)return 1;A=g&T,r[A]=d<<24|p<<16|v-i|0}}return g!==0&&(r[v+g]=l-k<<24|64<<16|0),o.bits=d,0};var re=so;const ro=0,Un=1,Yn=2,{Z_FINISH:La,Z_BLOCK:io,Z_TREES:ve,Z_OK:Rt,Z_STREAM_END:oo,Z_NEED_DICT:lo,Z_STREAM_ERROR:rt,Z_DATA_ERROR:Vn,Z_MEM_ERROR:Jn,Z_BUF_ERROR:ho,Z_DEFLATED:Pa}=Ft,ze=16180,Ga=16181,Ua=16182,Ya=16183,Va=16184,Ja=16185,ja=16186,Wa=16187,Xa=16188,Ka=16189,Se=16190,pt=16191,Ve=16192,Qa=16193,Je=16194,$a=16195,tn=16196,en=16197,an=16198,qe=16199,be=16200,nn=16201,sn=16202,rn=16203,on=16204,ln=16205,je=16206,hn=16207,cn=16208,N=16209,jn=16210,Wn=16211,co=852,fo=592,uo=15,go=uo,fn=t=>(t>>>24&255)+(t>>>8&65280)+((t&65280)<<8)+((t&255)<<24);function wo(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const Ht=t=>{if(!t)return 1;const a=t.state;return!a||a.strm!==t||a.mode<ze||a.mode>Wn?1:0},Xn=t=>{if(Ht(t))return rt;const a=t.state;return t.total_in=t.total_out=a.total=0,t.msg="",a.wrap&&(t.adler=a.wrap&1),a.mode=ze,a.last=0,a.havedict=0,a.flags=-1,a.dmax=32768,a.head=null,a.hold=0,a.bits=0,a.lencode=a.lendyn=new Int32Array(co),a.distcode=a.distdyn=new Int32Array(fo),a.sane=1,a.back=-1,Rt},Kn=t=>{if(Ht(t))return rt;const a=t.state;return a.wsize=0,a.whave=0,a.wnext=0,Xn(t)},Qn=(t,a)=>{let e;if(Ht(t))return rt;const n=t.state;return a<0?(e=0,a=-a):(e=(a>>4)+5,a<48&&(a&=15)),a&&(a<8||a>15)?rt:(n.window!==null&&n.wbits!==a&&(n.window=null),n.wrap=e,n.wbits=a,Kn(t))},$n=(t,a)=>{if(!t)return rt;const e=new wo;t.state=e,e.strm=t,e.window=null,e.mode=ze;const n=Qn(t,a);return n!==Rt&&(t.state=null),n},po=t=>$n(t,go);let dn=!0,We,Xe;const xo=t=>{if(dn){We=new Int32Array(512),Xe=new Int32Array(32);let a=0;for(;a<144;)t.lens[a++]=8;for(;a<256;)t.lens[a++]=9;for(;a<280;)t.lens[a++]=7;for(;a<288;)t.lens[a++]=8;for(re(Un,t.lens,0,288,We,0,t.work,{bits:9}),a=0;a<32;)t.lens[a++]=5;re(Yn,t.lens,0,32,Xe,0,t.work,{bits:5}),dn=!1}t.lencode=We,t.lenbits=9,t.distcode=Xe,t.distbits=5},ts=(t,a,e,n)=>{let r;const i=t.state;return i.window===null&&(i.wsize=1<<i.wbits,i.wnext=0,i.whave=0,i.window=new Uint8Array(i.wsize)),n>=i.wsize?(i.window.set(a.subarray(e-i.wsize,e),0),i.wnext=0,i.whave=i.wsize):(r=i.wsize-i.wnext,r>n&&(r=n),i.window.set(a.subarray(e-n,e-n+r),i.wnext),n-=r,n?(i.window.set(a.subarray(e-n,e),0),i.wnext=n,i.whave=i.wsize):(i.wnext+=r,i.wnext===i.wsize&&(i.wnext=0),i.whave<i.wsize&&(i.whave+=r))),0},Mo=(t,a)=>{let e,n,r,i,h,o,f,l,c,E,u,d,p,k,M=0,y,g,m,x,A,T,v,I;const B=new Uint8Array(4);let S,b;const P=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(Ht(t)||!t.output||!t.input&&t.avail_in!==0)return rt;e=t.state,e.mode===pt&&(e.mode=Ve),h=t.next_out,r=t.output,f=t.avail_out,i=t.next_in,n=t.input,o=t.avail_in,l=e.hold,c=e.bits,E=o,u=f,I=Rt;t:for(;;)switch(e.mode){case ze:if(e.wrap===0){e.mode=Ve;break}for(;c<16;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if(e.wrap&2&&l===35615){e.wbits===0&&(e.wbits=15),e.check=0,B[0]=l&255,B[1]=l>>>8&255,e.check=G(e.check,B,2,0),l=0,c=0,e.mode=Ga;break}if(e.head&&(e.head.done=!1),!(e.wrap&1)||(((l&255)<<8)+(l>>8))%31){t.msg="incorrect header check",e.mode=N;break}if((l&15)!==Pa){t.msg="unknown compression method",e.mode=N;break}if(l>>>=4,c-=4,v=(l&15)+8,e.wbits===0&&(e.wbits=v),v>15||v>e.wbits){t.msg="invalid self size",e.mode=N;break}e.dmax=1<<e.wbits,e.flags=0,t.adler=e.check=1,e.mode=l&512?Ka:pt,l=0,c=0;break;case Ga:for(;c<16;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if(e.flags=l,(e.flags&255)!==Pa){t.msg="unknown compression method",e.mode=N;break}if(e.flags&57344){t.msg="unknown header flags set",e.mode=N;break}e.head&&(e.head.text=l>>8&1),e.flags&512&&e.wrap&4&&(B[0]=l&255,B[1]=l>>>8&255,e.check=G(e.check,B,2,0)),l=0,c=0,e.mode=Ua;case Ua:for(;c<32;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}e.head&&(e.head.time=l),e.flags&512&&e.wrap&4&&(B[0]=l&255,B[1]=l>>>8&255,B[2]=l>>>16&255,B[3]=l>>>24&255,e.check=G(e.check,B,4,0)),l=0,c=0,e.mode=Ya;case Ya:for(;c<16;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}e.head&&(e.head.xflags=l&255,e.head.os=l>>8),e.flags&512&&e.wrap&4&&(B[0]=l&255,B[1]=l>>>8&255,e.check=G(e.check,B,2,0)),l=0,c=0,e.mode=Va;case Va:if(e.flags&1024){for(;c<16;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}e.length=l,e.head&&(e.head.extra_len=l),e.flags&512&&e.wrap&4&&(B[0]=l&255,B[1]=l>>>8&255,e.check=G(e.check,B,2,0)),l=0,c=0}else e.head&&(e.head.extra=null);e.mode=Ja;case Ja:if(e.flags&1024&&(d=e.length,d>o&&(d=o),d&&(e.head&&(v=e.head.extra_len-e.length,e.head.extra||(e.head.extra=new Uint8Array(e.head.extra_len)),e.head.extra.set(n.subarray(i,i+d),v)),e.flags&512&&e.wrap&4&&(e.check=G(e.check,n,d,i)),o-=d,i+=d,e.length-=d),e.length))break t;e.length=0,e.mode=ja;case ja:if(e.flags&2048){if(o===0)break t;d=0;do v=n[i+d++],e.head&&v&&e.length<65536&&(e.head.name+=String.fromCharCode(v));while(v&&d<o);if(e.flags&512&&e.wrap&4&&(e.check=G(e.check,n,d,i)),o-=d,i+=d,v)break t}else e.head&&(e.head.name=null);e.length=0,e.mode=Wa;case Wa:if(e.flags&4096){if(o===0)break t;d=0;do v=n[i+d++],e.head&&v&&e.length<65536&&(e.head.comment+=String.fromCharCode(v));while(v&&d<o);if(e.flags&512&&e.wrap&4&&(e.check=G(e.check,n,d,i)),o-=d,i+=d,v)break t}else e.head&&(e.head.comment=null);e.mode=Xa;case Xa:if(e.flags&512){for(;c<16;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if(e.wrap&4&&l!==(e.check&65535)){t.msg="header crc mismatch",e.mode=N;break}l=0,c=0}e.head&&(e.head.hcrc=e.flags>>9&1,e.head.done=!0),t.adler=e.check=0,e.mode=pt;break;case Ka:for(;c<32;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}t.adler=e.check=fn(l),l=0,c=0,e.mode=Se;case Se:if(e.havedict===0)return t.next_out=h,t.avail_out=f,t.next_in=i,t.avail_in=o,e.hold=l,e.bits=c,lo;t.adler=e.check=1,e.mode=pt;case pt:if(a===io||a===ve)break t;case Ve:if(e.last){l>>>=c&7,c-=c&7,e.mode=je;break}for(;c<3;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}switch(e.last=l&1,l>>>=1,c-=1,l&3){case 0:e.mode=Qa;break;case 1:if(xo(e),e.mode=qe,a===ve){l>>>=2,c-=2;break t}break;case 2:e.mode=tn;break;case 3:t.msg="invalid block type",e.mode=N}l>>>=2,c-=2;break;case Qa:for(l>>>=c&7,c-=c&7;c<32;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if((l&65535)!==(l>>>16^65535)){t.msg="invalid stored block lengths",e.mode=N;break}if(e.length=l&65535,l=0,c=0,e.mode=Je,a===ve)break t;case Je:e.mode=$a;case $a:if(d=e.length,d){if(d>o&&(d=o),d>f&&(d=f),d===0)break t;r.set(n.subarray(i,i+d),h),o-=d,i+=d,f-=d,h+=d,e.length-=d;break}e.mode=pt;break;case tn:for(;c<14;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if(e.nlen=(l&31)+257,l>>>=5,c-=5,e.ndist=(l&31)+1,l>>>=5,c-=5,e.ncode=(l&15)+4,l>>>=4,c-=4,e.nlen>286||e.ndist>30){t.msg="too many length or distance symbols",e.mode=N;break}e.have=0,e.mode=en;case en:for(;e.have<e.ncode;){for(;c<3;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}e.lens[P[e.have++]]=l&7,l>>>=3,c-=3}for(;e.have<19;)e.lens[P[e.have++]]=0;if(e.lencode=e.lendyn,e.lenbits=7,S={bits:e.lenbits},I=re(ro,e.lens,0,19,e.lencode,0,e.work,S),e.lenbits=S.bits,I){t.msg="invalid code lengths set",e.mode=N;break}e.have=0,e.mode=an;case an:for(;e.have<e.nlen+e.ndist;){for(;M=e.lencode[l&(1<<e.lenbits)-1],y=M>>>24,g=M>>>16&255,m=M&65535,!(y<=c);){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if(m<16)l>>>=y,c-=y,e.lens[e.have++]=m;else{if(m===16){for(b=y+2;c<b;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if(l>>>=y,c-=y,e.have===0){t.msg="invalid bit length repeat",e.mode=N;break}v=e.lens[e.have-1],d=3+(l&3),l>>>=2,c-=2}else if(m===17){for(b=y+3;c<b;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}l>>>=y,c-=y,v=0,d=3+(l&7),l>>>=3,c-=3}else{for(b=y+7;c<b;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}l>>>=y,c-=y,v=0,d=11+(l&127),l>>>=7,c-=7}if(e.have+d>e.nlen+e.ndist){t.msg="invalid bit length repeat",e.mode=N;break}for(;d--;)e.lens[e.have++]=v}}if(e.mode===N)break;if(e.lens[256]===0){t.msg="invalid code -- missing end-of-block",e.mode=N;break}if(e.lenbits=9,S={bits:e.lenbits},I=re(Un,e.lens,0,e.nlen,e.lencode,0,e.work,S),e.lenbits=S.bits,I){t.msg="invalid literal/lengths set",e.mode=N;break}if(e.distbits=6,e.distcode=e.distdyn,S={bits:e.distbits},I=re(Yn,e.lens,e.nlen,e.ndist,e.distcode,0,e.work,S),e.distbits=S.bits,I){t.msg="invalid distances set",e.mode=N;break}if(e.mode=qe,a===ve)break t;case qe:e.mode=be;case be:if(o>=6&&f>=258){t.next_out=h,t.avail_out=f,t.next_in=i,t.avail_in=o,e.hold=l,e.bits=c,$i(t,u),h=t.next_out,r=t.output,f=t.avail_out,i=t.next_in,n=t.input,o=t.avail_in,l=e.hold,c=e.bits,e.mode===pt&&(e.back=-1);break}for(e.back=0;M=e.lencode[l&(1<<e.lenbits)-1],y=M>>>24,g=M>>>16&255,m=M&65535,!(y<=c);){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if(g&&!(g&240)){for(x=y,A=g,T=m;M=e.lencode[T+((l&(1<<x+A)-1)>>x)],y=M>>>24,g=M>>>16&255,m=M&65535,!(x+y<=c);){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}l>>>=x,c-=x,e.back+=x}if(l>>>=y,c-=y,e.back+=y,e.length=m,g===0){e.mode=ln;break}if(g&32){e.back=-1,e.mode=pt;break}if(g&64){t.msg="invalid literal/length code",e.mode=N;break}e.extra=g&15,e.mode=nn;case nn:if(e.extra){for(b=e.extra;c<b;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}e.length+=l&(1<<e.extra)-1,l>>>=e.extra,c-=e.extra,e.back+=e.extra}e.was=e.length,e.mode=sn;case sn:for(;M=e.distcode[l&(1<<e.distbits)-1],y=M>>>24,g=M>>>16&255,m=M&65535,!(y<=c);){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if(!(g&240)){for(x=y,A=g,T=m;M=e.distcode[T+((l&(1<<x+A)-1)>>x)],y=M>>>24,g=M>>>16&255,m=M&65535,!(x+y<=c);){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}l>>>=x,c-=x,e.back+=x}if(l>>>=y,c-=y,e.back+=y,g&64){t.msg="invalid distance code",e.mode=N;break}e.offset=m,e.extra=g&15,e.mode=rn;case rn:if(e.extra){for(b=e.extra;c<b;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}e.offset+=l&(1<<e.extra)-1,l>>>=e.extra,c-=e.extra,e.back+=e.extra}if(e.offset>e.dmax){t.msg="invalid distance too far back",e.mode=N;break}e.mode=on;case on:if(f===0)break t;if(d=u-f,e.offset>d){if(d=e.offset-d,d>e.whave&&e.sane){t.msg="invalid distance too far back",e.mode=N;break}d>e.wnext?(d-=e.wnext,p=e.wsize-d):p=e.wnext-d,d>e.length&&(d=e.length),k=e.window}else k=r,p=h-e.offset,d=e.length;d>f&&(d=f),f-=d,e.length-=d;do r[h++]=k[p++];while(--d);e.length===0&&(e.mode=be);break;case ln:if(f===0)break t;r[h++]=e.length,f--,e.mode=be;break;case je:if(e.wrap){for(;c<32;){if(o===0)break t;o--,l|=n[i++]<<c,c+=8}if(u-=f,t.total_out+=u,e.total+=u,e.wrap&4&&u&&(t.adler=e.check=e.flags?G(e.check,r,u,h-u):ce(e.check,r,u,h-u)),u=f,e.wrap&4&&(e.flags?l:fn(l))!==e.check){t.msg="incorrect data check",e.mode=N;break}l=0,c=0}e.mode=hn;case hn:if(e.wrap&&e.flags){for(;c<32;){if(o===0)break t;o--,l+=n[i++]<<c,c+=8}if(e.wrap&4&&l!==(e.total&4294967295)){t.msg="incorrect length check",e.mode=N;break}l=0,c=0}e.mode=cn;case cn:I=oo;break t;case N:I=Vn;break t;case jn:return Jn;case Wn:default:return rt}return t.next_out=h,t.avail_out=f,t.next_in=i,t.avail_in=o,e.hold=l,e.bits=c,(e.wsize||u!==t.avail_out&&e.mode<N&&(e.mode<je||a!==La))&&ts(t,t.output,t.next_out,u-t.avail_out),E-=t.avail_in,u-=t.avail_out,t.total_in+=E,t.total_out+=u,e.total+=u,e.wrap&4&&u&&(t.adler=e.check=e.flags?G(e.check,r,u,t.next_out-u):ce(e.check,r,u,t.next_out-u)),t.data_type=e.bits+(e.last?64:0)+(e.mode===pt?128:0)+(e.mode===qe||e.mode===Je?256:0),(E===0&&u===0||a===La)&&I===Rt&&(I=ho),I},mo=t=>{if(Ht(t))return rt;let a=t.state;return a.window&&(a.window=null),t.state=null,Rt},Eo=(t,a)=>{if(Ht(t))return rt;const e=t.state;return e.wrap&2?(e.head=a,a.done=!1,Rt):rt},vo=(t,a)=>{const e=a.length;let n,r,i;return Ht(t)||(n=t.state,n.wrap!==0&&n.mode!==Se)?rt:n.mode===Se&&(r=1,r=ce(r,a,e,0),r!==n.check)?Vn:(i=ts(t,a,e,e),i?(n.mode=jn,Jn):(n.havedict=1,Rt))};var qo=Kn,bo=Qn,_o=Xn,yo=po,Ao=$n,ko=Mo,Bo=mo,So=Eo,To=vo,Co="pako inflate (from Nodeca project)",Mt={inflateReset:qo,inflateReset2:bo,inflateResetKeep:_o,inflateInit:yo,inflateInit2:Ao,inflate:ko,inflateEnd:Bo,inflateGetHeader:So,inflateSetDictionary:To,inflateInfo:Co};function Io(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var zo=Io;const es=Object.prototype.toString,{Z_NO_FLUSH:Ro,Z_FINISH:Fo,Z_OK:ue,Z_STREAM_END:Ke,Z_NEED_DICT:Qe,Z_STREAM_ERROR:Ho,Z_DATA_ERROR:un,Z_MEM_ERROR:Do}=Ft;function xe(t){this.options=Ie.assign({chunkSize:1024*64,windowBits:15,to:""},t||{});const a=this.options;a.raw&&a.windowBits>=0&&a.windowBits<16&&(a.windowBits=-a.windowBits,a.windowBits===0&&(a.windowBits=-15)),a.windowBits>=0&&a.windowBits<16&&!(t&&t.windowBits)&&(a.windowBits+=32),a.windowBits>15&&a.windowBits<48&&(a.windowBits&15||(a.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Pn,this.strm.avail_out=0;let e=Mt.inflateInit2(this.strm,a.windowBits);if(e!==ue)throw new Error(It[e]);if(this.header=new zo,Mt.inflateGetHeader(this.strm,this.header),a.dictionary&&(typeof a.dictionary=="string"?a.dictionary=de.string2buf(a.dictionary):es.call(a.dictionary)==="[object ArrayBuffer]"&&(a.dictionary=new Uint8Array(a.dictionary)),a.raw&&(e=Mt.inflateSetDictionary(this.strm,a.dictionary),e!==ue)))throw new Error(It[e])}xe.prototype.push=function(t,a){const e=this.strm,n=this.options.chunkSize,r=this.options.dictionary;let i,h,o;if(this.ended)return!1;for(a===~~a?h=a:h=a===!0?Fo:Ro,es.call(t)==="[object ArrayBuffer]"?e.input=new Uint8Array(t):e.input=t,e.next_in=0,e.avail_in=e.input.length;;){for(e.avail_out===0&&(e.output=new Uint8Array(n),e.next_out=0,e.avail_out=n),i=Mt.inflate(e,h),i===Qe&&r&&(i=Mt.inflateSetDictionary(e,r),i===ue?i=Mt.inflate(e,h):i===un&&(i=Qe));e.avail_in>0&&i===Ke&&e.state.wrap>0&&t[e.next_in]!==0;)Mt.inflateReset(e),i=Mt.inflate(e,h);switch(i){case Ho:case un:case Qe:case Do:return this.onEnd(i),this.ended=!0,!1}if(o=e.avail_out,e.next_out&&(e.avail_out===0||i===Ke))if(this.options.to==="string"){let f=de.utf8border(e.output,e.next_out),l=e.next_out-f,c=de.buf2string(e.output,f);e.next_out=l,e.avail_out=n-l,l&&e.output.set(e.output.subarray(f,f+l),0),this.onData(c)}else this.onData(e.output.length===e.next_out?e.output:e.output.subarray(0,e.next_out));if(!(i===ue&&o===0)){if(i===Ke)return i=Mt.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,!0;if(e.avail_in===0)break}}return!0};xe.prototype.onData=function(t){this.chunks.push(t)};xe.prototype.onEnd=function(t){t===ue&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Ie.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};function ma(t,a){const e=new xe(a);if(e.push(t),e.err)throw e.msg||It[e.err];return e.result}function Oo(t,a){return a=a||{},a.raw=!0,ma(t,a)}var No=xe,Zo=ma,Lo=Oo,Po=ma,Go=Ft,Uo={Inflate:No,inflate:Zo,inflateRaw:Lo,ungzip:Po,constants:Go};const{Deflate:Yo,deflate:Vo,deflateRaw:Jo,gzip:jo}=Ki,{Inflate:Wo,inflate:Xo,inflateRaw:Ko,ungzip:Qo}=Uo;var $o=Yo,tl=Vo,el=Jo,al=jo,nl=Wo,sl=Xo,rl=Ko,il=Qo,ol=Ft,Re={Deflate:$o,deflate:tl,deflateRaw:el,gzip:al,Inflate:nl,inflate:sl,inflateRaw:rl,ungzip:il,constants:ol};const ll=t=>new TextDecoder().decode(t.subarray(0,t.length)),oh=t=>{const a=new Uint8Array(t.split("").map(n=>n.charCodeAt(0))),e=Re.deflate(a);return btoa(String.fromCharCode.apply(null,[...e]))},hl=t=>{try{const a=new Uint8Array(atob(t).split("").map(n=>n.charCodeAt(0))),e=Re.inflate(a);return ll(e)}catch(a){return console.log(`${a}`),null}},lh=t=>{const a=Re.deflate(t);let e="";for(let n=0;n<a.length;n++)e+=String.fromCharCode(a[n]);return btoa(e)},hh=t=>{try{const a=new Uint8Array(atob(t).split("").map(e=>e.charCodeAt(0)));return Re.inflate(a)}catch(a){return console.log(`${a}`),null}},ye=JSON.parse(hl(""));class Zt{constructor(a,e,n=null){C(this,"vertices");C(this,"sectors",[]);C(this,"faces",[]);this.index=a,this.isExit=e,this.exitVertex=n,this.vertices=n?[n]:[]}}class nt{constructor(a,e,n,r,i){this.index=a,this.isExit=e,this.vertices=n,this.edges=r,this.sectors=i}}class $e{constructor(a,e,n){C(this,"face");this.index=a,this.vertex=e,this.edges=n}}class gn{constructor(a,e){C(this,"exitEdge",null);C(this,"edges",[]);C(this,"sectors",[]);C(this,"faces",[]);this.index=a,this.isExit=e}}const cl=(t,a)=>{if(t.numNonExitVertices!==a.numNonExitVertices||t.numExitVertices!==a.numExitVertices||t.type!==a.type)return!1;if(t.type==="faces"&&a.type==="faces"){if(t.vertexLists.length!==a.vertexLists.length)return!1;for(let e=0;e<t.vertexLists.length;e++){if(t.vertexLists[e].length!==a.vertexLists[e].length)return!1;for(let n=0;n<t.vertexLists[e].length;n++)if(t.vertexLists[e][n]!==a.vertexLists[e][n])return!1}}if(t.type==="non-exit-vertex"&&a.type==="non-exit-vertex"&&t.edgeCount!==a.edgeCount)return!1;if(t.type==="exit-vertex"&&a.type==="exit-vertex"){if(t.edgeCount!==a.edgeCount||t.spans.length!==a.spans.length)return!1;for(let e=0;e<t.spans.length;e++)if(t.spans[e]!==a.spans[e])return!1}return!0},as=t=>{const a=[];a.push(t.numNonExitVertices),a.push(t.numExitVertices),a.push(t.type),t.type==="faces"?a.push(t.vertexLists):(t.type==="non-exit-vertex"||t.type==="exit-vertex")&&(a.push(t.edgeCount),t.type==="exit-vertex"&&a.push(t.spans));const e=JSON.stringify(a);return q()&&w(cl(Ea(e),t)),e},Ea=t=>{const a=JSON.parse(t),e=a.shift(),n=a.shift(),r=a.shift();return r==="faces"?{numNonExitVertices:e,numExitVertices:n,type:r,vertexLists:a.shift()}:r==="non-exit-vertex"?{numNonExitVertices:e,numExitVertices:n,type:r,edgeCount:a.shift()}:r==="exit-vertex"?{numNonExitVertices:e,numExitVertices:n,type:r,edgeCount:a.shift(),spans:a.shift()}:{numNonExitVertices:e,numExitVertices:n,type:r}};class va{constructor(a,e){C(this,"name");C(this,"vertices");C(this,"edges");C(this,"sectors");C(this,"faces");this.descriptor=a;const n=[...F.range(0,a.numNonExitVertices).map(o=>new gn(o,!1)),...F.range(0,a.numExitVertices).map(o=>new gn(o+a.numNonExitVertices,!0))];let r=[],i=[],h=[];if(a.type==="faces"){for(const o of a.vertexLists){const f=o.map(u=>n[u]),l=f.map((u,d)=>{const p=f[(d+1)%f.length],k=u.edges.find(M=>M.vertices.includes(p));if(k)return k;{const M=new Zt(r.length,!1),y=u.index<p.index?u:p,g=u.index<p.index?p:u;return M.vertices.push(y),M.vertices.push(g),r.push(M),u.edges.push(M),p.edges.push(M),M}}),c=l.map((u,d)=>{const p=l[(d+1)%l.length],k=u.vertices.find(y=>p.vertices.includes(y));q()&&w(k);const M=new $e(i.length,k,[u,p]);return i.push(M),u.sectors.push(M),p.sectors.push(M),k.sectors.push(M),M}),E=new nt(h.length,!1,f,l,c);h.push(E),f.forEach(u=>{u.faces.push(E)}),c.forEach(u=>{u.face=E}),l.forEach(u=>{u.faces.push(E)})}r.forEach(o=>{if(o.faces.length<2){q()&&w(o.faces.length===1);const f=new nt(h.length,!0,o.vertices,[o],[]);h.push(f),o.faces.push(f),o.vertices.forEach(l=>{l.faces.push(f)})}}),n.forEach(o=>{if(o.isExit){const f=new Zt(r.length,!0,o);r.push(f),o.edges.push(f),o.exitEdge=f}})}else if(a.type==="edge"){q()&&w(n.length===0);const o=new Zt(0,!1,null);r.push(o);const f=new nt(0,!0,[],[o],[]);h.push(f);const l=new nt(1,!0,[],[o],[]);h.push(l),o.faces.push(f),o.faces.push(l)}else if(a.type==="non-exit-vertex"){q()&&w(n.length===1&&!n[0].isExit);const o=n[0];r.push(...F.range(0,a.edgeCount).map(f=>{const l=new Zt(f,!1);return o.edges.push(l),l.vertices.push(o),l})),i.push(...F.range(0,a.edgeCount).map(f=>{const l=new $e(f,o,[r[f],r[(f+1)%a.edgeCount]]);return l.edges.forEach(c=>{c.sectors.push(l)}),o.sectors.push(l),l})),h.push(...F.range(0,a.edgeCount).map(f=>{const l=i[f],c=new nt(f,!0,[o],[r[f],r[(f+1)%a.edgeCount]],[l]);return o.faces.push(c),c.edges.forEach(E=>{E.faces.push(c)}),l.face=c,c}))}else if(a.type==="exit-vertex"){q()&&w(n.length===1&&n[0].isExit);const o=n[0];r.push(...F.range(0,a.edgeCount).map(l=>{const c=new Zt(l,!1);return o.edges.push(c),c.vertices.push(o),c}));const f=new Zt(r.length,!0,o);if(r.push(f),o.edges.push(f),o.exitEdge=f,a.spans.length){const l=[];let c=0;a.spans.forEach((E,u)=>{const d=c,p=d+E;c=p+1,l.push(F.range(d,p+1).map(k=>r[k]))}),q()&&w(c===a.edgeCount),l.forEach(E=>{for(let u=0;u<E.length-1;u++){const d=E[u],p=E[u+1],k=new $e(i.length,o,[d,p]);i.push(k),d.sectors.push(k),p.sectors.push(k),o.sectors.push(k);const M=new nt(h.length,!0,[o],[d,p],[k]);h.push(M),o.faces.push(M),d.faces.push(M),p.faces.push(M),k.face=M}}),l.forEach(E=>{const u=E[0],d=E[E.length-1],p=new nt(h.length,!0,[o],[u],[]);h.push(p),u.faces.push(p),o.faces.push(p);const k=new nt(h.length,!0,[o],[d],[]);h.push(k),d.faces.push(k),o.faces.push(k)})}else{q()&&w(a.edgeCount===2);const l=r[0],c=r[1],E=new nt(h.length,!0,[o],[l],[]);h.push(E),l.faces.push(E),o.faces.push(E);const u=new nt(h.length,!0,[o],[l],[]);h.push(u),l.faces.push(u),o.faces.push(u);const d=new nt(h.length,!0,[o],[c],[]);h.push(d),c.faces.push(d),o.faces.push(d);const p=new nt(h.length,!0,[o],[c],[]);h.push(p),c.faces.push(p),o.faces.push(p)}}else throw new Error(`Invalid descriptor: ${a}`);this.vertices=n,this.edges=r,this.sectors=i,this.faces=h,e&&(this.name=e)}serialize(){return as(this.descriptor)}static deserialize(a){return new va(Ea(a))}}const fl=(t,a)=>t.vertices.length!==a.vertices.length||t.edges.length!==a.edges.length||t.faces.length!==a.faces.length||t.sectors.length!==a.sectors.length||t.vertices.filter(e=>e.isExit).length!==a.vertices.filter(e=>e.isExit).length||t.edges.filter(e=>e.isExit).length!==a.edges.filter(e=>e.isExit).length||t.faces.filter(e=>e.isExit).length!==a.faces.filter(e=>e.isExit).length?!1:ya(t,a).length>0&&ya(a,t).length>0,dl=t=>{if(q()){const f=l=>{w(l.every(c=>c.index<l.length))};f([...t.vertexMap.keys()]),f([...t.edgeMap.keys()]),f([...t.sectorMap.keys()]),f([...t.faceMap.keys()])}const a=F.sortBy([...t.vertexMap.keys()],f=>f.index),e=F.sortBy([...t.edgeMap.keys()],f=>f.index),n=F.sortBy([...t.sectorMap.keys()],f=>f.index),r=F.sortBy([...t.faceMap.keys()],f=>f.index),i=f=>[f.x,f.y],h=f=>{for(let l=0;l<a.length;l++)if(t.vertexMap.get(a[l]).equals(f))return l;return i(f)},o=JSON.stringify([a.map(f=>i(t.vertexMap.get(f))),e.map(f=>t.edgeMap.get(f).map(h)),n.map(f=>t.sectorMap.get(f).map(i)),r.map(f=>t.faceMap.get(f).map(i))]);if(q()){const f=ns(o,{vertices:a,edges:e,sectors:n,faces:r,descriptor:{}}),l=(c,E)=>{if(c.length!==E.length)return!1;for(let u=0;u<c.length;u++)if(!c[u].equals(E[u]))return!1;return!0};a.forEach(c=>w(t.vertexMap.get(c).equals(f.vertexMap.get(c)))),e.forEach(c=>w(l(t.edgeMap.get(c),f.edgeMap.get(c)))),n.forEach(c=>w(l(t.sectorMap.get(c),f.sectorMap.get(c)))),r.forEach(c=>w(l(t.faceMap.get(c),f.faceMap.get(c))))}return o},ns=(t,a)=>{const e=JSON.parse(t),n=e[0],r=e[1],i=e[2],h=e[3],o=new Map,f=new Map,l=new Map,c=new Map;n.forEach((u,d)=>{o.set(a.vertices[d],new s(u[0],u[1]))});const E=u=>typeof u=="number"?o.get(a.vertices[u]):new s(u[0],u[1]);return r.forEach((u,d)=>{f.set(a.edges[d],[E(u[0]),E(u[1])])}),i.forEach((u,d)=>{l.set(a.sectors[d],[E(u[0]),E(u[1]),E(u[2])])}),h.forEach((u,d)=>{c.set(a.faces[d],u.map(p=>new s(p[0],p[1])))}),{vertexMap:o,edgeMap:f,sectorMap:l,faceMap:c}},ss=new WeakMap,Vt=[],ul=t=>Vt.find(a=>F.isEqual(a.descriptor,t))??null,gl=t=>{const a=ul(t.descriptor);return a||(Vt.find(e=>fl(t,e))??null)},rs=t=>Vt.find(a=>a.name===t)??null,wl=(t,a)=>{const e=gl(t);return e||(Vt.push(t),ss.set(t,a),t)},ch=()=>({standardPatternBoards:F.fromPairs(Vt.map(t=>[t.name,as(t.descriptor)])),planarPatternMaps:F.fromPairs(Vt.map(t=>[t.name,dl(ss.get(t))])),standardSquareBoardGenerations:Fl.map(t=>t.map(a=>a.name)),standardHexagonalBoardGenerations:Hl.map(t=>t.map(a=>a.name)),standardTriangularBoardGenerations:Dl.map(t=>t.map(a=>a.name)),standardCairoBoardGenerations:Ol.map(t=>t.map(a=>a.name)),standardRhombilleBoardGenerations:Nl.map(t=>t.map(a=>a.name)),standardSnubSquareBoardGenerations:Zl.map(t=>t.map(a=>a.name)),standardTrihexagonalBoardGenerations:Ll.map(t=>t.map(a=>a.name)),standardFloretPentagonalBoardGenerations:Pl.map(t=>t.map(a=>a.name)),standardDeltoidalTrihexagonalBoardGenerations:Gl.map(t=>t.map(a=>a.name)),standardPortugalBoardGenerations:Ul.map(t=>t.map(a=>a.name)),standardRhombitrihexagonalBoardGenerations:Yl.map(t=>t.map(a=>a.name)),standardPrismaticPentagonalBoardGenerations:Vl.map(t=>t.map(a=>a.name)),standardElongatedTriangularBoardGenerations:Jl.map(t=>t.map(a=>a.name))});{const t=Object.keys(ye.standardPatternBoards);for(const a of t){let e=new va(Ea(ye.standardPatternBoards[a]),a);const n=ns(ye.planarPatternMaps[a],e);wl(e,n)}}const Y=(t,a)=>{{const e=rs(t);return q()&&w(e),e}},pl=Y("single-edge"),xl=Y("vertex-2-exit-none"),Ml=Y("vertex-2-exit-one"),ml=Y("vertex-3-exit-two-adjacent"),El=Y("vertex-4-exit-two-opposite"),vl=Y("vertex-4-exit-three-adjacent"),ql=Y("vertex-5-exit-two-one"),bl=Y("vertex-5-exit-four"),_l=Y("vertex-6-exit-triple"),yl=Y("vertex-6-exit-two-two"),Al=Y("vertex-6-exit-three-one"),kl=Y("vertex-6-exit-five"),Bl=Y("vertex-2"),Sl=Y("vertex-3"),Tl=Y("vertex-4"),Cl=Y("vertex-5"),Il=Y("vertex-6"),zl=[xl,Ml,ml,El,vl,ql,bl,_l,yl,Al,kl],Rl=[Bl,Sl,Tl,Cl,Il],fh=[pl,...zl,...Rl],lt=t=>da.get(t,{width:20,height:20}),dh=lt(ot(Ls)),uh=new hr(20,20),gh=lt(ot(js)),wh=new lr(10,1,!0),ph=lt(ot(Vs)),xh=lt(ot(Us)),Mh=lt(ot(Ps)),mh=lt(ot(Xs)),Eh=lt(ot(Js)),vh=lt(ot(Ks)),qh=lt(ot(Gs)),bh=lt(ot(Ws)),_h=lt(ot(Ys)),tt=(t,a,e)=>ye[a].map(n=>n.map(r=>{const i=rs(r);return q()&&w(i),i})),Fl=tt("square","standardSquareBoardGenerations"),Hl=tt("hexagonal","standardHexagonalBoardGenerations"),Dl=tt("triangular","standardTriangularBoardGenerations"),Ol=tt("cairo","standardCairoBoardGenerations"),Nl=tt("rhombille","standardRhombilleBoardGenerations"),Zl=tt("snub-square","standardSnubSquareBoardGenerations"),Ll=tt("trihexagonal","standardTrihexagonalBoardGenerations"),Pl=tt("floret-pentagonal","standardFloretPentagonalBoardGenerations"),Gl=tt("deltoidal-trihexagonal","standardDeltoidalTrihexagonalBoardGenerations"),Ul=tt("portugal","standardPortugalBoardGenerations"),Yl=tt("rhombitrihexagonal","standardRhombitrihexagonalBoardGenerations"),Vl=tt("prismatic-pentagonal","standardPrismaticPentagonalBoardGenerations"),Jl=tt("elongated-triangular","standardElongatedTriangularBoardGenerations");export{th as $,vh as A,tr as B,qh as C,bh as D,_h as E,Aa as F,ot as G,lr as H,Vs as I,js as J,Us as K,Ls as L,Ps as M,eh as N,Xs as O,da as P,Js as Q,nh as R,hr as S,sh as T,ah as U,Ks as V,Ql as W,rh as X,$l as Y,Gs as Z,F as _,Qs as a,Ws as a0,Ys as a1,Xl as a2,Kl as a3,ws as a4,oh as a5,va as a6,fl as a7,as as a8,fh as a9,Es as aA,ae as aB,pl as aC,xl as aD,Ml as aE,ml as aF,El as aG,vl as aH,Bl as aI,Sl as aJ,rs as aK,ul as aL,Pl as aM,Gl as aN,Ul as aO,Yl as aP,Vl as aQ,Jl as aR,ya as aa,Lt as ab,Dl as ac,pn as ad,Hl as ae,Nl as af,Ol as ag,Zl as ah,Ll as ai,dl as aj,Ea as ak,ns as al,xs as am,qs as an,bs as ao,xn as ap,ch as aq,lh as ar,hh as as,cs as at,fs as au,us as av,gs as aw,ps as ax,ms as ay,Ms as az,$s as b,er as c,q as d,w as e,ih as f,Mn as g,Ae as h,ca as i,En as j,ds as k,fa as l,hl as m,_s as n,uh as o,ss as p,wh as q,gh as r,Fl as s,dh as t,ph as u,Tl as v,xh as w,Mh as x,mh as y,Eh as z};
