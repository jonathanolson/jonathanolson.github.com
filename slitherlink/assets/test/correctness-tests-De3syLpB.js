import"../Vector2Property-95p6aBvi.js";import{Q as d,s as m,e as q,f as p,h as S,i as f,g as y,a as z,b as U,c as E,d as A}from"../square-only-all-unrestricted-twqtrshS.js";import{B as r}from"../BinaryRuleSequence-D4-WD2l2.js";import{g as B,i as O}from"../BinaryRuleCollection-ji_RLyUt.js";import{s as h}from"../PatternRule-BA2nP0w7.js";import"../generalPatternBoardGenerations-BAr_gTbc.js";import"../patternBoards-DyfRjV5l.js";import"../getCoordinateClusteredMap-DnTHDDo2.js";import"../getPeriodicTilingGenerator-BAI_tkyR.js";import"../FeatureSet-CMNix-co.js";import"../FaceColorDualFeature-B3Jbv5ZG.js";import"../operations-CXBIDRbn.js";import"../logic-solver-DfLyjx-d.js";import"../PatternBoardSolver-D30pPXgS.js";import"../RichSolution-Cj_kfC3b.js";import"../Highlander-qeHSI-Wz.js";d.module("pattern rule correctness",()=>{const e=(s,i)=>{i.patternBoards.forEach(l=>{const n=h(l);d.test(`${s} ${n}`,u=>{let a=0;const g=B(l,!1);let t=!0,c=null;i.forEachRule(o=>{t&&o.patternBoard===l&&(++a%50===1&&console.log(s,n,a-1),O(o,!0,g)||(t=!1,c=o.toCanonicalString()))}),u.ok(t,c??"all rules passed")})})};e("square-only-color-unrestricted",r.deserialize(m).collection),e("square-only-edge-sector",r.deserialize(q).collection),e("square-only-edge-sector-unrestricted",r.deserialize(p).collection),e("square-only-all",r.deserialize(S).collection),e("square-only-all-unrestricted",r.deserialize(f).collection),e("general-color-unrestricted",r.deserialize(y).collection),e("general-edge-sector",r.deserialize(z).collection),e("general-edge-sector-unrestricted",r.deserialize(U).collection),e("general-all",r.deserialize(E).collection),e("general-all-unrestricted",r.deserialize(A).collection)});window.assertions.enableAssert();
