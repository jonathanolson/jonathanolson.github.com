import"./UnivariatePolynomial-1rLpyqfN.js";import{N as U,P as ne,R as ve,L as oe,T as j,D as Ve,V as se,H,e as X}from"./PhetioControlledVisibilityProperty-CzTgKbkx.js";import{P as ae,F as Ce}from"./PatternBoardSolver-vRQRWARQ.js";import{l as Ne,T as Y}from"./operations-BMyV0DHx.js";import{B as a,n as F,o as ye,p as Pe,q as Fe,r as re,F as z}from"./patternBoards-CVo-HFgJ.js";import{B as be}from"./BasicPuzzle-DGsxIJRd.js";import{B as ie}from"./BoardPatternBoard-C6phJJV1.js";import{S as R,_ as Z,j as O,H as Be,e as Me,f as Se}from"./getCoordinateClusteredMap-Bd_wM-c0.js";import{P as k}from"./Theme-DMXUyWiP.js";import{P as J}from"./PlanarMappedPatternBoardNode-Ck9prdrP.js";import{g as T,P as qe,r as Ge,h as Le,t as He,s as ze,i as Te}from"./getPeriodicTilingGenerator-zRiID_iR.js";import{d as ce,s as We}from"./TPlanarMappedPatternBoard-D2zZqQwd.js";import{d as I,F as b,B as De,R as B,S as je}from"./SectorOnlyOneFeature-B1Nn5A2g.js";import{a as Re,F as W,g as Oe,f as ke}from"./FeatureSet-RmLjQa6B.js";import{P as D}from"./PatternNode-Dqp5oWZV.js";import"./logic-solver-DfsVuGQ5.js";import"./TextPushButton-Coq2A-51.js";class Je extends U{constructor(v,l,r){super(),this.pattern=v,this.targetBoard=l,this.embedding=r;const t=new U({scale:30});this.addChild(t),l.board.faces.forEach(i=>{t.addChild(new ne(R.polygon(i.vertices.map(o=>o.viewCoordinates)),{stroke:"#888",lineWidth:.02}))});const c=t.localBounds;this.addChild(ve.bounds(t.bounds.dilated(5)));for(const[i,o]of r.getExitEdgeMap()){const n=i.index;for(const h of o){const m=l.getEdge(h),V=new oe(m.vertices[0].viewCoordinates,m.vertices[1].viewCoordinates,{stroke:"#066",lineWidth:.03});t.addChild(V);const x=new j(n,{font:k,maxWidth:.4,maxHeight:.4,center:m.vertices[0].viewCoordinates.average(m.vertices[1].viewCoordinates),fill:"rgba(128,255,255,0.5)"});t.addChild(x)}}for(const[i,o]of r.getNonExitEdgeMap()){const n=l.getEdge(o),h=i.index,m=new oe(n.vertices[0].viewCoordinates,n.vertices[1].viewCoordinates,{stroke:"#f00",lineWidth:.03});t.addChild(m);const V=new j(h,{font:k,maxWidth:.4,maxHeight:.4,center:n.vertices[0].viewCoordinates.average(n.vertices[1].viewCoordinates),fill:"#fff"});t.addChild(V)}for(const[i,o]of r.getFaceMap()){const n=l.getFace(o),h=i.index,m=i.isExit,V=n?R.polygon(n.vertices.map(g=>g.viewCoordinates)):R.bounds(c.dilated(.13)).shapeDifference(R.bounds(c)),x=new ne(V,{fill:m?"rgba(0,0,0,0.2)":"rgba(50,0,0,0.5)"});if(t.addChild(x),n){const g=()=>{const N=l.getEdge(r.getNonExitEdgeMap().get(i.edges[0])).vertices.map(d=>d.viewCoordinates);return n.viewCoordinates.average(N[0].average(N[1]))},s=new j(h,{font:k,maxWidth:.4,maxHeight:.4,center:m?g():n.viewCoordinates,fill:m?"#f88":"#8f8"});t.addChild(s)}}for(const[i,o]of r.getVertexMap()){const n=l.getVertex(o),h=i.index,m=i.isExit,V=new j(h,{font:k,maxWidth:.4,maxHeight:.4,center:n.viewCoordinates,fill:m?"#0ff":"#88f"});t.addChild(V)}}}const $=E=>{const v=new Map,l=Re.get(E).connectedComponents,r=o=>l.findIndex(n=>n.includes(o)),t=(o,n)=>{const h=o.length>n.length||o.length===n.length&&o[0]<n[0],m=h?o:n,V=h?n:o,x=`${m.join(",")}-${V.join(",")}`;if(v.has(x))return v.get(x);{const g=I.fromPrimarySecondaryFaces(o.map(s=>E.faces[s]),n.map(s=>E.faces[s]));return v.set(x,g),g}},c=E.faces.length,i=le(c).flatMap(o=>{const n=[];if(o.some(x=>{const g=x.map(s=>r(E.faces[s]));return g.some(s=>s!==g[0])}))return n;const h=o.map(x=>de(x.length).map(g=>{const s=g[0].map(d=>x[d]),N=g[1].map(d=>x[d]);return t(s,N)})),m=[],V=x=>{if(x===h.length){n.push(m.slice());return}else for(let g=0;g<h[x].length;g++)m.push(h[x][g]),V(x+1),m.pop()};return V(0),n});return Z.sortBy(i,o=>o.length*1e4+o.reduce((n,h)=>n+h.allFaces.size,0))},$e=E=>{let v=[];const l=(r,t,c)=>{if(t===r.length){v.push(c.map(i=>i.slice()));return}l(r,t+1,c),l(r,t+1,[...c,[r[t]]]);for(let i=0;i<c.length;i++)c[i].push(r[t]),l(r,t+1,c),c[i].pop()};return l(Array.from({length:E},(r,t)=>t),0,[]),v},le=E=>$e(E).filter(v=>v.every(l=>l.length>1)),de=E=>{const v=[],l=(r,t,c)=>{if(r===E){(t.length===0||c.length===0||Math.min(...t)<Math.min(...c))&&t.length&&v.push([t.slice(),c.slice()]);return}t.push(r),l(r+1,t,c),t.pop(),c.push(r),l(r+1,t,c),c.pop()};return l(0,[],[]),v};window.assertions.enableAssert();const _=new U,_e=new U({renderer:"svg",children:[_]}),A=new Ve(_e,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(A.domElement);A.setWidthHeight(window.innerWidth,window.innerHeight);console.log("test");(async()=>{const E=new Ce,v=new Y("a","a"),l=new Y("b","b"),r=new Y("c","c");E.addFormula(Ne([v,l,r]));let t;do t=E.getNextSolution(),console.log(t);while(t!==null);const c=new a({numNonExitVertices:0,numExitVertices:0,type:"edge"});console.log("edgeBoard",c),console.log(F(c.descriptor));const i=new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:3});console.log("nonExitVertexBoard",i),console.log(F(i.descriptor));const o=new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:4,spans:[1,1]});console.log("exitVertexBoard",o),console.log(F(o.descriptor));const n=new a({numNonExitVertices:0,numExitVertices:3,type:"faces",vertexLists:[[0,1,2]]});console.log("facesBoard",n),console.log(F(n.descriptor));const h=new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2],[0,1,3]]});console.log("facesBoard2",h),console.log(F(h.descriptor));const m=be.loadDefaultPuzzle(),V=new ie(m.board);console.log("boardPatternBoard",V),console.log(F(V.descriptor));const x=new O(2,3),g=new ie(x);console.log("simplePatternBoard",g),console.log(F(g.descriptor));const s=new se({x:10,y:10,align:"left"});_.addChild(s);const N=P=>{s.addChild(new X(P,{margin:5}))},d=(P,C)=>{console.log("----------"),console.log(P),console.log("pattern",F(C.descriptor),C);const M=re(C,g);console.log("embeddings",M),s.addChild(new H({children:M.map(q=>new Je(C,g,q))}))};d("edge pattern",new a({numNonExitVertices:0,numExitVertices:0,type:"edge"})),d("2-count exit-vertex no sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:2,spans:[]})),d("2-count exit-vertex one sector",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:2,spans:[1]})),d("3-count exit-vertex two adjacent sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:3,spans:[2]})),d("4-count exit-vertex two opposite sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:4,spans:[1,1]})),d("4-count exit-vertex three-adjacent sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:4,spans:[3]})),d("2-count non-exit-vertex",new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:2})),d("3-count non-exit-vertex",new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:3})),d("4-count non-exit-vertex",new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:4})),d("square pattern",new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2,3]]})),d("2 adjacent squares pattern",new a({numNonExitVertices:0,numExitVertices:6,type:"faces",vertexLists:[[0,1,4,3],[1,2,5,4]]})),d("2 diagonal squares pattern",new a({numNonExitVertices:0,numExitVertices:7,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6]]})),d("L square pattern",new a({numNonExitVertices:0,numExitVertices:8,type:"faces",vertexLists:[[0,1,2,3],[0,3,4,5],[0,5,6,7]]})),d("4-square pattern",new a({numNonExitVertices:1,numExitVertices:8,type:"faces",vertexLists:[[0,1,2,3],[0,3,4,5],[0,5,6,7],[0,7,8,1]]})),d("3 diagonal squares pattern",new a({numNonExitVertices:0,numExitVertices:10,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6],[5,7,8,9]]})),d("3 semi-diagonal squares pattern",new a({numNonExitVertices:0,numExitVertices:10,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6],[4,7,8,9]]}));{N(new H({spacing:10,align:"origin",children:ye.map(P=>new J({patternBoard:P,planarPatternMap:Pe.get(P)}))}));{const P=e=>new X(new H({spacing:10,children:e.map(u=>new J(u))}),{margin:5}),C=e=>new se({spacing:10,align:"left",children:e.map(u=>P(u))}),M=e=>{const u=Z.uniq(e.faces.map(f=>f.vertices.length)),p=e.vertices.map(f=>f.viewCoordinates).reduce((f,w)=>f.plus(w)).timesScalar(1/e.vertices.length);return u.map(f=>{const w=Z.minBy(e.faces.filter(y=>y.vertices.length===f),y=>y.viewCoordinates.distanceSquared(p));return Me()&&Se(w),new z(e,[w])})},q=(e,u)=>{const f=[M(e)];for(let w=0;w<u-1;w++)f.push(z.getNextGeneration(f[f.length-1]));return f},G=(e,u)=>{const p=e.generate({width:15,height:15}),f=new qe(p,e.scale??1);return q(f,u)};console.log("---- square ----");const ee=ce('{"patternBoard":"[0,9,\\"faces\\",[[0,1,2,3],[4,5,0,6],[1,7,8,2]]]","planarPatternMap":"[[[9,9],[10,9],[10,10],[9,10],[8,8],[9,8],[8,9],[11,9],[11,10]],[[0,1],[1,2],[2,3],[0,3],[4,5],[0,5],[0,6],[4,6],[1,7],[7,8],[2,8]],[[[9,9],[10,9],[10,10]],[[10,9],[10,10],[9,10]],[[10,10],[9,10],[9,9]],[[9,10],[9,9],[10,9]],[[8,8],[9,8],[9,9]],[[9,8],[9,9],[8,9]],[[9,9],[8,9],[8,8]],[[8,9],[8,8],[9,8]],[[10,9],[11,9],[11,10]],[[11,9],[11,10],[10,10]],[[11,10],[10,10],[10,9]],[[10,10],[10,9],[11,9]]],[[[9,9],[10,9],[10,10],[9,10]],[[8,8],[9,8],[9,9],[8,9]],[[10,9],[11,9],[11,10],[10,10]],[[9,9],[10,9],[9.5,8.75]],[[10,10],[9,10],[9.5,10.25]],[[9,9],[9,10],[8.75,9.5]],[[8,8],[9,8],[8.5,7.75]],[[9,9],[9,8],[9.25,8.5]],[[9,9],[8,9],[8.5,9.25]],[[8,8],[8,9],[7.75,8.5]],[[10,9],[11,9],[10.5,8.75]],[[11,9],[11,10],[11.25,9.5]],[[10,10],[11,10],[10.5,10.25]]]]"}'),te=ce('{"patternBoard":"[0,9,\\"faces\\",[[0,1,2,3],[4,5,0,6],[3,2,7,8]]]","planarPatternMap":"[[[9,9],[10,9],[10,10],[9,10],[8,8],[9,8],[8,9],[10,11],[9,11]],[[0,1],[1,2],[2,3],[0,3],[4,5],[0,5],[0,6],[4,6],[2,7],[7,8],[3,8]],[[[9,9],[10,9],[10,10]],[[10,9],[10,10],[9,10]],[[10,10],[9,10],[9,9]],[[9,10],[9,9],[10,9]],[[8,8],[9,8],[9,9]],[[9,8],[9,9],[8,9]],[[9,9],[8,9],[8,8]],[[8,9],[8,8],[9,8]],[[9,10],[10,10],[10,11]],[[10,10],[10,11],[9,11]],[[10,11],[9,11],[9,10]],[[9,11],[9,10],[10,10]]],[[[9,9],[10,9],[10,10],[9,10]],[[8,8],[9,8],[9,9],[8,9]],[[9,10],[10,10],[10,11],[9,11]],[[9,9],[10,9],[9.5,8.75]],[[10,9],[10,10],[10.25,9.5]],[[9,9],[9,10],[8.75,9.5]],[[8,8],[9,8],[8.5,7.75]],[[9,9],[9,8],[9.25,8.5]],[[9,9],[8,9],[8.5,9.25]],[[8,8],[8,9],[7.75,8.5]],[[10,10],[10,11],[10.25,10.5]],[[10,11],[9,11],[9.5,11.25]],[[9,10],[9,11],[8.75,10.5]]]]"}');s.addChild(new H({spacing:10,children:[new J(ee,{labels:!0}),new J(te,{labels:!0})]})),console.log(Fe(ee.patternBoard,te.patternBoard));const K=q(new O(20,20),5);s.addChild(C(K)),K.forEach((e,u)=>{console.log(`-- ${u} --`),e.forEach(p=>{console.log(JSON.stringify(We(p)))})}),console.log("---- hex ----");const ge=q(new Be(5,1,!0),4);s.addChild(C(ge)),console.log("---- rhombille ----");const ue=G(T(Ge,{width:8,height:8}),4);s.addChild(C(ue)),console.log("---- cairo ----");const pe=G(T(Le,{width:8,height:8,squareRegion:!0}),4);s.addChild(C(pe)),console.log("---- triangular ----");const me=G(T(He,{width:6,height:5}),4);s.addChild(C(me)),console.log("---- snub square ----");const xe=G(T(ze,{width:5,height:6,squareRegion:!0}),4);s.addChild(C(xe)),console.log("---- trihexagonal ----");const he=G(T(Te,{width:9,height:9}),4);s.addChild(C(he)),console.log(le(5).map(e=>JSON.stringify(e))),console.log(de(5).map(e=>JSON.stringify(e))),console.log($(new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2,3]]})).map(e=>e.map(u=>u.toCanonicalString()))),console.log($(new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2,3]]}))),console.log($(new a({numNonExitVertices:0,numExitVertices:7,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6]]})));const Q=new a({numNonExitVertices:0,numExitVertices:7,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6]]}),fe=re(Q,Q);console.log($(Q).filter(e=>I.areCanonicalWith(e,fe)));{const e=M(new O(20,20))[0],u=z.getNextGeneration(z.getNextGeneration(z.getNextGeneration(M(new O(20,20)))))[0];s.addChild(new D(e,W.fromSolution(e,[e.edges[0],e.edges[1],e.edges[4]]),e.planarPatternMap)),[[],[new b(e.faces[0],2)],[new De(e.edges[0])],[new B(e.edges[0])],[I.fromPrimarySecondaryFaces([e.faces[0],e.faces[1]],[e.faces[2]])],[new je(e.sectors[3])]].forEach(w=>{const y=new ae(e);w.forEach(S=>y.addFeature(S));const L=y.getRemainingSolutions();console.log(L),s.addChild(new X(new H({spacing:10,children:L.map(S=>new D(e,W.fromSolution(e,S),e.planarPatternMap))}),{margin:5}))}),N(new D(u,W.fromFeatures(u,[new b(u.faces[0],3),new b(u.faces[1],3),new B(u.edges.filter(w=>w.isExit)[1]),new B(u.edges.filter(w=>w.isExit)[3])]),u.planarPatternMap));const p=K[4][7],f=[new b(p.faces[0],null),new b(p.faces[1],null),new b(p.faces[2],2),new b(p.faces[3],null),new b(p.faces[4],null),new B(p.edges[1]),new B(p.edges[12]),new B(p.edges[17]),new B(p.edges[21])];N(new D(p,W.fromFeatures(p,f),p.planarPatternMap,{labels:!0})),N(new D(e,W.empty(e),e.planarPatternMap,{labels:!0}));{const w=new ae(p),y=f;y.forEach(Ee=>w.addFeature(Ee));const L=w.getRemainingSolutions();console.log(L);const S=Oe(p,y);console.log(S);const we=ke(L,S);console.log(we)}}}}A.setWidthHeight(Math.ceil(_.right+10),Math.ceil(_.bottom+10)),A.updateDisplay()})();
