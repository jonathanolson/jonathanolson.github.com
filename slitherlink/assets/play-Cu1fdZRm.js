var N3=Object.defineProperty;var R3=(a,o,e)=>o in a?N3(a,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[o]=e;var v=(a,o,e)=>(R3(a,typeof o!="symbol"?o+"":o,e),e);import{c as Q,a as D,V as c2,D as E2,M as h1,S as B3,b as Q1,o as w2,B as r1,E as j1,d as $1,e as O3,P as d2,f as C1,T as H2,g as X2,h as I3}from"./UnivariatePolynomial-1rLpyqfN.js";import{s as H3}from"./scanURL-BvHaY8Fc.js";import{B as V3,a as M3,b as D3,c as q3,d as U3,e as x,f as k,v as g1,g as k2,_ as C2,h as E1,i as W3,S as U,p as G3}from"./getCoordinateClusteredMap-Bd_wM-c0.js";import{N,L as e3,T as K,S as X3,R as Z,A as K3,M as T1,a as J3,b as Z3,c as _,d as s1,e as e1,V as G,H as Y,P as t2,f as Y3,G as H1,B as D2,g as b1,I as V1,h as V2,D as _3,i as Q3}from"./PhetioControlledVisibilityProperty-B_Gl7maC.js";import{L as a1,a as i1,P as t3,C as j3,V as $3,T as t1,O as ee,R as te,b as oe,c as b2}from"./TextPushButton-BlKBVbG9.js";import{s as re,S as l1,g as se,a as F1}from"./SATSolver-wbkWyjXX.js";import{P as F2,s as B2,i as ne,h as ae,e as g2,f as p2,j as O,U as J,p as o3,k as r3,l as s3,m as n3,n as a3,o as i3,q as l3,v as x1,r as k1,t as c3,V as ie,F as le,u as d3,w as l2}from"./DisplayEmbedding-CtbnXw0U.js";import{A as u3,C as M1,s as p3,p as K2,g as ce,a as de,i as ue,w as pe}from"./polygonGenerators-BeK8PMg3.js";import{E as T,C as h3,a as z1,b as he,U as f1,s as g3,c as D1,B as u2}from"./BasicPuzzle-BvzExADk.js";import{c as y,o as ge,s as f3,u as e2,a as A1,r as O2,b as z2,d as q1,t as fe,p as ye,e as U1,f as we,g as Se,h as y1,i as me,j as ve,v as W1,k as Pe,m as Ce,w as Ee,n as G1,q as be,x as Fe,y as xe,z as ke,A as ze,B as Ae,C as Le,D as Te,E as Ne,F as Re,G as Be,H as Oe,I as Ie,J as He,K as Ve,L as Me,M as w1,N as S1}from"./Theme-Bm_Rw3jP.js";import{A as De,N as J2}from"./ShadedSphereNode-DjM1OiL_.js";import{t as qe,a as y3,p as w3}from"./TPuzzle-CIy5N78U.js";import{i as n1,I as j,S as I2,F as S3,g as f2,a as m3,A as Ue,C as We,b as Ge,c as Xe,d as Ke,e as Je,f as o1,w as X1,h as Ze,j as Ye,k as _e,l as Qe,m as je,n as $e,o as et,p as tt,q as ot,r as rt,s as st,t as nt,u as at,v as it,x as lt,y as ct,z as dt,B as ut,D as pt,E as ht,G as gt,H as ft,J as yt,K as wt,L as St,M as mt,N as vt}from"./autoSolver-Bsgd1vdv.js";import{B as Pt}from"./BoardPatternBoard-DaZtb2ww.js";import{B as Z2,R as m1,S as Y2,a as _2,b as Q2,c as j2,F as v1,d as P1}from"./SectorOnlyOneFeature-B6gNVzOk.js";import{g as c1,a as N1,b as v3,c as P3,d as Ct,U as Et}from"./UIAquaRadioButtonGroup-DCjA-ada.js";import{P as bt}from"./getPeriodicTilingGenerator-zRiID_iR.js";import"./logic-solver-DfsVuGQ5.js";import"./compression-CFlaLHJe.js";import"./patternBoards-C9AJudHo.js";import"./operations-BMyV0DHx.js";import"./BinaryMixedRuleGroup-BtO90Zn9.js";import"./BinaryRuleCollection-BStHuDJq.js";import"./PatternRule-I4DPfHDP.js";import"./FeatureSet-DlqxrGj9.js";import"./PatternBoardSolver-vRQRWARQ.js";import"./Highlander-3djJERbj.js";class Ft extends N{constructor(o,e){const t=new F2(o.puzzle,{edgePressListener:(i,s)=>{o.onUserEdgePress(i,s)},edgeHoverListener:(i,s)=>{o.onUserEdgeHover(i,s)},facePressListener:(i,s)=>{o.onUserFacePress(i,s)},faceHoverListener:(i,s)=>{o.onUserFaceHover(i,s)},sectorPressListener:(i,s)=>{o.onUserSectorPress(i,s)},sectorHoverListener:(i,s)=>{o.onUserSectorHover(i,s)},sectorSetListener:(i,s)=>{o.onUserSectorSet(i,s)},hoverHighlightProperty:o.hoverHighlightProperty,selectedFaceColorHighlightProperty:o.selectedFaceColorHighlightProperty,selectedSectorEditProperty:o.selectedSectorEditProperty,style:o.style});super(Q({children:[t]},e)),this.puzzleModel=o,this.disposeEmitter.addListener(()=>t.dispose());let r=null;const n=i=>{if(t.clearAnnotationNodes(),r&&(r.dispose(),r=null),i){const s=new u3(o.puzzle.board,i,o.style,t.getBackgroundBounds());t.addAnnotationNode(s),r=s}};this.disposeEmitter.addListener(()=>{r&&(r.dispose(),r=null)}),o.displayedAnnotationProperty.link(n),this.disposeEmitter.addListener(()=>o.displayedAnnotationProperty.unlink(n))}}const R1=new a1("showLayoutTestProperty",!1);class $2 extends V3{constructor(o,e,t){super(o,e,t)}}class K1 extends M3{constructor(e,t){super(e,t);v(this,"originalEdges",new Set)}}class J1 extends D3{constructor(e,t){super(e.copy(),t.copy());v(this,"originalFace",null)}}class xt extends q3{constructor(o,e){super(o.copy(),e.copy())}}class Z1{constructor(o,e){this.faces=o,this.boundaryHalfEdges=e}}class kt{constructor(o,e,t){this.faces=o,this.boundaryHalfEdges=e,this.boundarySegments=t}}class zt extends U3{constructor(e,t){const r=new Map,n=new Map,i=new Map,s=new Map,l=new Map,c=new Map,d=new Map,u=new Map,C=p=>{const m=r.get(p);return x()&&k(m),m},A=p=>{const m=n.get(p);return x()&&k(m),m},F=p=>{const m=i.get(p);return x()&&k(m),m},S=p=>{const m=s.get(p);return x()&&k(m),m},g=p=>{const m=l.get(p);return x()&&k(m),m},f=p=>{const m=c.get(p);return x()&&k(m),m},w=p=>{const m=d.get(p);return x()&&k(m),m},b=p=>{const m=u.get(p);return x()&&k(m),m},P=e.vertices.map(p=>{const m=new xt(p.logicalCoordinates,p.viewCoordinates);return r.set(p,m),l.set(m,p),m}),E=e.faces.map(p=>{const m=new J1(p.logicalCoordinates,p.viewCoordinates);return n.set(p,m),c.set(m,p),m.originalFace=p,m}),L=[],R=e.edges.map(p=>{const m=r.get(p.start),s2=r.get(p.end);x()&&k(m),x()&&k(s2);const o2=new K1(m,s2);o2.originalEdges.add(p),i.set(p,o2),d.set(o2,p);const V=new $2(m,s2,!1);s.set(p.forwardHalf,V),u.set(V,p.forwardHalf),L.push(V);const M=new $2(s2,m,!0);return s.set(p.reversedHalf,M),u.set(M,p.reversedHalf),L.push(M),o2});P.forEach(p=>{const m=g(p);p.incomingHalfEdges=m.incomingHalfEdges.map(S),p.outgoingHalfEdges=m.outgoingHalfEdges.map(S),p.edges=m.edges.map(F),p.faces=m.faces.map(A)}),E.forEach(p=>{const m=f(p);p.halfEdges=m.halfEdges.map(S),p.edges=m.edges.map(F),p.vertices=m.vertices.map(C)}),R.forEach(p=>{const m=w(p);p.forwardHalf=S(m.forwardHalf),p.reversedHalf=S(m.reversedHalf),p.forwardFace=m.forwardFace?A(m.forwardFace):null,p.reversedFace=m.reversedFace?A(m.reversedFace):null,p.vertices=m.vertices.map(C),p.faces=m.faces.map(A)}),L.forEach(p=>{const m=b(p);p.edge=F(m.edge),p.reversed=S(m.reversed),p.next=S(m.next),p.previous=S(m.previous),p.face=m.face?A(m.face):null});super({edges:R,vertices:P,faces:E,halfEdges:L,outerBoundary:e.outerBoundary.map(S),innerBoundaries:e.innerBoundaries.map(p=>p.map(S))});v(this,"edgeStateMap",new Map);v(this,"faceValueMap",new Map);this.originalBoard=e,this.originalState=t,R.forEach(p=>{this.edgeStateMap.set(p,t.getEdgeState(w(p)))}),E.forEach(p=>{this.faceValueMap.set(p,t.getFaceValue(f(p)))}),x()&&g1(this)}getFaceValue(e){const t=this.faceValueMap.get(e);return x()&&k(t!==void 0),t}getEdgeState(e){const t=this.edgeStateMap.get(e);return x()&&k(t!==void 0),t}clearSatisfiedFaces(){this.faces.forEach(e=>{const t=this.getFaceValue(e);if(t===null)return;let r=0,n=0;e.edges.forEach(i=>{const s=this.getEdgeState(i);s===T.WHITE?r++:s===T.BLACK&&n++}),r===0&&n===t&&this.faceValueMap.set(e,null)})}removeDeadRedEdges(){const e=new Set(this.edges.filter(s=>this.getEdgeState(s)===T.RED&&s.faces.every(l=>l===null||this.getFaceValue(l)===null))),t=new Set(this.vertices.filter(s=>s.edges.every(l=>e.has(l)))),r=new Set(this.faces.filter(s=>s.edges.some(l=>e.has(l)))),n=[],i=new Set(r);for(;i.size;){const s=i.values().next().value;i.delete(s);const l=[s];let c=!1;for(let f=0;f<l.length;f++){const w=l[f];w.edges.forEach(b=>{e.has(b)&&[b.forwardFace,b.reversedFace].forEach(P=>{if(P!==w){if(P===null){c=!0;return}i.has(P)&&(i.delete(P),l.push(P))}})})}const d=new Set(l.flatMap(f=>f.halfEdges)),u=new Set(l.flatMap(f=>f.halfEdges.map(w=>w.reversed))),C=new Set([...d].filter(f=>!u.has(f))),A=f=>{let w=f.next;for(;w!==f&&!C.has(w);)w=w.reversed.next;return x()&&k(w!==f),w},F=C.values().next().value,S=[F];let g=A(F);for(;g!==F;)S.push(g),g=A(g);if(x()&&k(S.length===C.size),c){const f=[];for(let w=0;w<S.length;w++){const b=S[w],P=S[(w+S.length-1)%S.length];if(x()&&k(P.end===b.start),!e.has(b.edge)&&e.has(P.edge)){const E=[b];for(let L=w+1;;L++){const R=S[L%S.length];if(e.has(R.edge))break;E.push(R)}f.push(E)}}n.push(new kt(l,S,f))}else n.push(new Z1(l,S))}n.forEach(s=>{if(s instanceof Z1){const l=s.boundaryHalfEdges.map(u=>u.start),c=s.boundaryHalfEdges.map(u=>u.edge),d=new J1(k2(l.map(u=>u.viewCoordinates)),k2(l.map(u=>u.logicalCoordinates)));this.faces.push(d),this.faceValueMap.set(d,null),d.halfEdges=s.boundaryHalfEdges,d.edges=c,d.vertices=l;for(let u=0;u<s.boundaryHalfEdges.length;u++){const C=s.boundaryHalfEdges[u],A=C.face;C.face=d;const F=C.edge;C.isReversed?F.reversedFace=d:F.forwardFace=d,x()&&k(A),A&&D(F.faces,A),F.faces.push(d)}}else s.boundarySegments.forEach(l=>{l.forEach(c=>{const d=c.edge,u=c.face;u&&(c.face=null,D(d.faces,u)),c.isReversed?d.reversedFace=null:d.forwardFace=null})})}),e.forEach(s=>{D(this.edges,s),D(this.halfEdges,s.forwardHalf),D(this.halfEdges,s.reversedHalf)}),t.forEach(s=>{D(this.vertices,s)}),r.forEach(s=>{D(this.faces,s)}),this.vertices.forEach(s=>{s.edges=s.edges.filter(l=>!e.has(l)),s.incomingHalfEdges=s.incomingHalfEdges.filter(l=>!e.has(l.edge)),s.outgoingHalfEdges=s.outgoingHalfEdges.filter(l=>!e.has(l.edge)),s.faces=s.incomingHalfEdges.map(l=>l.face).filter(l=>l!==null);for(let l=0;l<s.incomingHalfEdges.length;l++){const c=s.outgoingHalfEdges[l],d=s.incomingHalfEdges[(l+1)%s.incomingHalfEdges.length];d.next=c,c.previous=d}}),x()&&g1(this)}removeSimpleForced(){this.vertices.slice().forEach(e=>{if(e.edges.length!==2||C2.uniq(e.edges.flatMap(b=>b.faces)).some(b=>this.getFaceValue(b)!==null))return;const r=e.edges[0],n=e.edges[1],i=this.getEdgeState(r),s=this.getEdgeState(n);if(i!==s)return;const l=r.getOtherVertex(e),c=n.getOtherVertex(e);if(l===c)return;const d=r.forwardHalf.end===e?r.forwardHalf:r.reversedHalf,u=r.forwardHalf.end===e?r.reversedHalf:r.forwardHalf,C=n.forwardHalf.start===e?n.forwardHalf:n.reversedHalf,A=n.forwardHalf.start===e?n.reversedHalf:n.forwardHalf,F=d.face,S=u.face,g=new K1(l,c);r.originalEdges.forEach(b=>g.originalEdges.add(b)),n.originalEdges.forEach(b=>g.originalEdges.add(b)),this.edgeStateMap.set(g,i),this.edges.push(g);const f=new $2(l,c,!1);this.halfEdges.push(f);const w=new $2(c,l,!0);if(this.halfEdges.push(w),g.forwardHalf=f,g.reversedHalf=w,g.forwardFace=F,g.reversedFace=S,g.vertices=[l,c],g.faces=[F,S].filter(b=>b!==null),f.edge=g,f.reversed=w,f.next=C.next,f.previous=d.previous,f.face=F,w.edge=g,w.reversed=f,w.next=u.next,w.previous=A.previous,w.face=S,F){const b=F.halfEdges.indexOf(d),P=F.edges.indexOf(r);x()&&k(b!==-1),x()&&k(P!==-1),F.halfEdges[b]=f,D(F.halfEdges,C),F.edges[P]=g,D(F.edges,n),D(F.vertices,e)}if(S){const b=S.halfEdges.indexOf(A),P=S.edges.indexOf(n);x()&&k(b!==-1),x()&&k(P!==-1),S.halfEdges[b]=w,D(S.halfEdges,u),S.edges[P]=g,D(S.edges,r),D(S.vertices,e)}{const b=l.incomingHalfEdges.indexOf(u),P=l.outgoingHalfEdges.indexOf(d),E=l.edges.indexOf(r);x()&&k(b!==-1),x()&&k(P!==-1),x()&&k(E!==-1),l.incomingHalfEdges[b]=w,l.outgoingHalfEdges[P]=f,l.edges[E]=g}{const b=c.incomingHalfEdges.indexOf(C),P=c.outgoingHalfEdges.indexOf(A),E=c.edges.indexOf(n);x()&&k(b!==-1),x()&&k(P!==-1),x()&&k(E!==-1),c.incomingHalfEdges[b]=f,c.outgoingHalfEdges[P]=w,c.edges[E]=g}f.previous.next=f,f.next.previous=f,w.previous.next=w,w.next.previous=w,D(this.edges,r),D(this.edges,n),D(this.halfEdges,r.forwardHalf),D(this.halfEdges,r.reversedHalf),D(this.halfEdges,n.forwardHalf),D(this.halfEdges,n.reversedHalf),D(this.vertices,e)}),x()&&g1(this)}simplify(){this.clearSatisfiedFaces(),this.removeDeadRedEdges(),this.removeSimpleForced()}fixOuterBoundary(){const e=new Set(this.halfEdges.filter(n=>n.face===null)),t=[],r=[];for(;e.size;){const n=e.values().next().value;e.delete(n);const i=[n];let s=n.next;for(;s!==n;)i.push(s),e.delete(s),s=s.next;E1(i.map(l=>l.start.viewCoordinates))<0?t.push(i):r.push(i)}x()&&k(t.length===1),this.outerBoundary.length=0,this.outerBoundary.push(...t[0]),this.innerBoundaries.length=0,this.innerBoundaries.push(...r)}getCompleteState(){this.fixOuterBoundary();const e=h3.fromFacesEdges(this,t=>this.getFaceValue(t),t=>this.getEdgeState(t));return B2(this,e),e}getCompletePuzzle(){return{board:this,state:this.getCompleteState()}}getSignedArea(){let e=0;return this.faces.forEach(t=>{e+=E1(t.vertices.map(r=>r.viewCoordinates))}),e}getCentroid(){let e=0,t=0,r=0;return this.halfEdges.forEach(n=>{if(n.face===null){const i=n.end.viewCoordinates,s=n.start.viewCoordinates;e+=(s.x+i.x)*(s.y-i.y);const l=i.x*(2*i.y+s.y)+s.x*(i.y+2*s.y);t+=(i.x-s.x)*l,r+=(s.y-i.y)*l}}),e*=.5,new c2(t,r).timesScalar(1/(6*e))}applyDerivative(e){this.vertices.forEach(t=>{const r=e.derivatives.get(t);x()&&k(r),x()&&k(r.isFinite()),t.viewCoordinates.add(r)}),this.fixFaceCoordinates()}fixFaceCoordinates(){this.faces.forEach(e=>{e.viewCoordinates.set(k2(e.halfEdges.map(t=>t.start.viewCoordinates)))})}getDebugNode(){const e=new N;return this.edges.forEach(t=>{const r=t.start.viewCoordinates,n=t.end.viewCoordinates;let i,s;const l=this.edgeStateMap.get(t);l===T.WHITE?(i=y.blackLineColorProperty,s=.02):l===T.BLACK?(i=ge(Math.random()*360,.7,.55),s=.1):(i=null,s=.02),e.addChild(new e3(r,n,{stroke:i,lineWidth:s,lineCap:"round"}))}),this.faces.forEach(t=>{const r=this.faceValueMap.get(t)??null;r!==null&&e.addChild(new K(r,{maxWidth:.9,maxHeight:.9,center:t.viewCoordinates,fill:y.faceValueColorProperty}))}),e}}class X{constructor(o,e){this.layoutPuzzle=o,this.derivatives=e}plus(o){const e=new Map;return this.derivatives.forEach((t,r)=>{e.set(r,t.plus(o.derivatives.get(r)))}),new X(this.layoutPuzzle,e)}minus(o){const e=new Map;return this.derivatives.forEach((t,r)=>{e.set(r,t.minus(o.derivatives.get(r)))}),new X(this.layoutPuzzle,e)}timesScalar(o){const e=new Map;return this.derivatives.forEach((t,r)=>{e.set(r,t.timesScalar(o))}),new X(this.layoutPuzzle,e)}getMaxMagnitude(){let o=0;return this.derivatives.forEach(e=>{o=Math.max(o,e.getMagnitude())}),o}getAreaCorrectedDerivative(){let o=this;for(let e=0;e<5;e++)o=o.getAreaCorrectedDerivativeOnce();return o}getAreaCorrectedDerivativeOnce(){return this.plus(X.getAreaScaledDeltas(this.layoutPuzzle,-this.getAreaDerivative()/this.layoutPuzzle.getSignedArea()))}getAreaDerivative(){let o=0;return this.layoutPuzzle.faces.forEach(e=>{o+=W3(e.vertices.map(t=>t.viewCoordinates),e.vertices.map(t=>this.derivatives.get(t)))}),o}getDebugNode(){const o=new N;return this.layoutPuzzle.vertices.forEach(e=>{const t=this.derivatives.get(e),r=e.viewCoordinates,n=new De(r.x,r.y,r.x+t.x,r.y+t.y,{lineWidth:.01,headHeight:.05,headWidth:.05,tailWidth:.005,fill:"green",stroke:"green"});o.addChild(n)}),o}static getAreaScaledDeltas(o,e){const t=o.getCentroid(),r=new Map;return o.vertices.forEach(n=>{const i=n.viewCoordinates.minus(t).timesScalar(e);x()&&k(i.isFinite()),r.set(n,i)}),new X(o,r)}static getHookesAttraction(o,e,t){const r=new Map;return o.vertices.forEach(n=>{r.set(n,c2.ZERO.copy())}),o.edges.forEach(n=>{const i=n.start.viewCoordinates,l=n.end.viewCoordinates.minus(i),c=l.getMagnitude(),d=l.timesScalar((c-e)*t/c);x()&&k(d.isFinite()),r.get(n.start).add(d),r.get(n.end).subtract(d)}),new X(o,r)}static getRegularPolygonDeltas(o,e,t,r){const n=new Map;o.vertices.forEach(s=>{n.set(s,c2.ZERO.copy())});const i=s=>e/(2*Math.sin(Math.PI/s));return o.faces.forEach(s=>{if(s.vertices.length<3)return;const l=.2,c=.3,d=s.vertices.map(P=>P.viewCoordinates);let u=0;const C=E1(d);C<0?u=1:C<l&&(u=Math.max(u,(l-C)/l));for(let P=0;P<d.length&&!(u>=1);P++){const E=P,L=(P+1)%d.length,R=d[E],p=d[L];for(let m=P+2;m<d.length-(P===0?1:0)&&!(u>=1);m++){const s2=m%d.length,o2=(m+1)%d.length,V=d[s2],M=d[o2];if(E2.lineSegmentIntersection(R.x,R.y,p.x,p.y,V.x,V.y,M.x,M.y))x()&&k(d.length>=4),u=1;else{const h=Math.min(E2.distToSegment(R,V,M),E2.distToSegment(p,V,M),E2.distToSegment(V,R,p),E2.distToSegment(M,R,p));h<c&&(u=Math.max(u,(c-h)/c))}}}if(u===0&&t&&o.getFaceValue(s)===null)return;const A=k2(d);x()&&k(A.isFinite());const F=i(d.length),S=d.map(P=>P.minus(A)),g=d.map((P,E)=>c2.createPolar(F,2*Math.PI*E/d.length)),f=X.getLeastSquares(S,g),w=r+(2-r)*u,b=d.map((P,E)=>f[E].minus(S[E]).timesScalar(w));s.vertices.forEach((P,E)=>{const L=b[E];x()&&k(L.isFinite()),n.get(P).add(L)})}),new X(o,n)}static getBarycentricDeltas(o){const e=new Map;return o.vertices.forEach(t=>{const r=t.edges.map(s=>s.getOtherVertex(t)),n=new c2(0,0);r.forEach(s=>n.add(s.viewCoordinates)),n.multiplyScalar(1/r.length);const i=n.subtract(t.viewCoordinates);x()&&k(i.isFinite()),e.set(t,i)}),new X(o,e)}static getAngularDeltas(o,e){const t=new Map;return o.vertices.forEach(r=>{t.set(r,c2.ZERO.copy())}),o.vertices.forEach(r=>{const n=r.edges.map(S=>S.getOtherVertex(r));let i=C2.sortBy(n,S=>S.viewCoordinates.minus(r.viewCoordinates).getAngle());if(i[0]!==n[0]){const S=i.indexOf(n[0]);i=[...i.slice(S),...i.slice(0,S)]}const s=C2.range(0,n.length).every(S=>i[S]===n[S]),l=n.map(S=>S.viewCoordinates.minus(r.viewCoordinates).normalized()),c=X.getUnitLeastSquares(l),d=Math.max(...C2.range(0,n.length).map(S=>c[S].dot(c[(S+1)%n.length]))),u=Math.max(...C2.range(0,n.length).map(S=>l[S].dot(l[(S+1)%n.length]))),C=(S,g)=>g<=.5?.5*Math.pow(2*g,S):1-C(S,1-g),A=s?E2.linear(d,1,0,1,u):1,F=.75;if(A>F){const S=(A-F)/(1-F),g=C(2,S),f=new c2(0,0);for(let w=0;w<n.length;w++){const b=n[w],P=l[w],E=c[w],L=E.minus(P.timesScalar(E.dot(P))).timesScalar(g*e);f.add(L),x()&&k(L.isFinite()),t.get(b).add(L)}f.multiplyScalar(1/n.length);for(const w of n)x()&&k(f),t.get(w).subtract(f)}}),new X(o,t)}static getUnitLeastSquares(o){const e=o.length,t=C2.range(0,e).map(r=>c2.createPolar(1,2*Math.PI*r/e));return X.getLeastSquares(o,t)}static getLeastSquares(o,e){const t=o.length,r=new h1(2,t,[...e.map(d=>d.x),...e.map(d=>d.y)]),n=new h1(2,t,[...o.map(d=>d.x),...o.map(d=>d.y)]),i=r.times(n.transpose()),s=new B3(i);let l=s.getV().times(s.getU().transpose());l.det()<0&&(l=s.getV().times(h1.diagonalMatrix([1,-1])).times(s.getU().transpose()));const c=new Q1().rowMajor(l.get(0,0),l.get(0,1),0,l.get(1,0),l.get(1,1),0,0,0,1);return e.map(d=>{const u=c.timesVector2(d);return x()&&k(u.isFinite()),u})}}class At extends N{constructor(o,e){const t=new N;let r=null;const n=()=>{const s=o.puzzle.board,l=o.puzzle.stateProperty.value;if(l.getSimpleRegions().some(g=>g.isSolved))return;const c=new zt(s,l);c.simplify();const d=()=>X.getAngularDeltas(c,.2).plus(X.getHookesAttraction(c,1,.1)).plus(X.getRegularPolygonDeltas(c,1,!0,.2));let u=.3;for(let g=0;g<40;g++){g%10===0&&(u*=.95);let f=d();{let w=f.getMaxMagnitude(),b=u;u*w>1.5&&(b=1.5/w),f=f.timesScalar(b)}if(c.applyDerivative(f),f.getMaxMagnitude()<.015)break}const C=c.getCompletePuzzle();r&&r.dispose();const A=new F2(qe(C),{edgePressListener:(g,f)=>{const w=g.originalEdges;w&&o.onUserEdgePress(w.values().next().value,f)},facePressListener:(g,f)=>{const w=g.originalFace;w&&o.onUserFacePress(w,f)}});r=A;const F=new N({children:[A]}),S=600;F.scale(Math.min(S/F.width,S/F.height)),F.left=20,F.top=130,t.children=[F]},i=()=>{t.children=[],n()};o.puzzle.stateProperty.link(i),super(Q({children:[t]},e)),this.puzzleModel=o,this.disposeEmitter.addListener(()=>o.puzzle.stateProperty.unlink(i)),this.disposeEmitter.addListener(()=>t.dispose()),this.disposeEmitter.addListener(()=>r&&r.dispose())}}class C3 extends X3(N){constructor(e,t=g2,r){const n=w2()({topological:!1},r);super(n);v(this,"backgroundRect");v(this,"rectangularGradientRect");v(this,"circularGradientRect");v(this,"puzzleWrapper");v(this,"puzzleNode",null);v(this,"zoomListener");this.puzzleModelProperty=e,this.style=t,this.backgroundRect=new Z({fill:t.theme.playAreaBackgroundColorProperty,pickableProperty:ne}),ae(null,this.backgroundRect,(s,l)=>{var c;(c=e.value)==null||c.onUserFacePress(s,l)},(s,l)=>{var c;(c=e.value)==null||c.onUserFaceHover(s,l)}),this.rectangularGradientRect=new Z({pickable:!1}),this.circularGradientRect=new Z({pickable:!1}),this.puzzleWrapper=new N({children:[this.backgroundRect,this.rectangularGradientRect,this.circularGradientRect]}),this.zoomListener=new K3(this.puzzleWrapper,{maxScale:10}),this.addInputListener(this.zoomListener),this.addChild(this.puzzleWrapper);const i=this.updateLayout.bind(this);this.localPreferredWidthProperty.lazyLink(i),this.localPreferredHeightProperty.lazyLink(i),n.topological&&this.puzzleWrapper.localBoundsProperty.lazyLink(i),T1.multilink([e,R1],(s,l)=>{this.puzzleNode&&(this.puzzleNode.dispose(),this.puzzleNode=null),s&&(n.topological?l&&(this.puzzleNode=new At(s)):this.puzzleNode=new Ft(s),this.puzzleNode&&(this.updatePuzzleNodeLayout(this.puzzleNode),this.puzzleWrapper.children=[this.backgroundRect,this.rectangularGradientRect,this.circularGradientRect,this.puzzleNode])),this.zoomListener.resetTransform(),this.updateLayout()})}step(e){this.zoomListener.step(e)}updateLayout(){const e=this.localPreferredWidth,t=this.localPreferredHeight;if(e!==null&&(this.backgroundRect.rectWidth=e,this.rectangularGradientRect.rectWidth=e,this.circularGradientRect.rectWidth=e),t!==null&&(this.backgroundRect.rectHeight=t,this.rectangularGradientRect.rectHeight=t,this.circularGradientRect.rectHeight=t),this.puzzleNode&&this.updatePuzzleNodeLayout(this.puzzleNode),e!==null&&t!==null&&e>0&&t>0){const r=new r1(0,0,e,t),n=r.center,i=n.getMagnitude();this.rectangularGradientRect.fill=new J3(0,0,0,t).addColorStop(0,this.style.theme.playAreaLinearTopColorProperty).addColorStop(.5,this.style.theme.playAreaLinearMiddleColorProperty).addColorStop(1,this.style.theme.playAreaLinearBottomColorProperty),this.circularGradientRect.fill=new Z3(n.x,n.y,i,n.x,n.y,0).addColorStop(0,this.style.theme.playAreaRadialOutsideColorProperty).addColorStop(1,this.style.theme.playAreaRadialInsideColorProperty),this.clipArea=U.bounds(r),this.zoomListener.setTargetBounds(r),this.zoomListener.setPanBounds(r)}else{const r=new r1(0,0,5,5);this.zoomListener.setTargetBounds(r),this.zoomListener.setPanBounds(r)}}updatePuzzleNodeLayout(e){const t=this.localPreferredWidth,r=this.localPreferredHeight;if(t!==null&&r!==null&&t>0&&r>0){const i=t-40,s=r-20*2;if(e.localBounds.isValid()){const l=e.localBounds.width,c=e.localBounds.height,d=Math.min(i/l,s/c);e.setScaleMagnitude(d),e.center=new c2(t/2,r/2)}}}}const W=class W extends j1{constructor(o,e,t){super(),this.fromWhite=o,this.fromBlack=e,this.fromRed=t}apply(o){return o===T.WHITE?this.fromWhite:o===T.BLACK?this.fromBlack:this.fromRed}};v(W,"CYCLE",new W(T.BLACK,T.RED,T.WHITE)),v(W,"REVERSE_CYCLE",new W(T.RED,T.WHITE,T.BLACK)),v(W,"WHITE_SET",new W(T.WHITE,T.WHITE,T.WHITE)),v(W,"BLACK_SET",new W(T.BLACK,T.BLACK,T.BLACK)),v(W,"RED_SET",new W(T.RED,T.RED,T.RED)),v(W,"BLACK_TOGGLE",new W(T.BLACK,T.WHITE,T.BLACK)),v(W,"RED_TOGGLE",new W(T.RED,T.RED,T.WHITE)),v(W,"enumeration",new $1(W));let M2=W;const Lt=new i1("pressStyle0",M2.CYCLE),Tt=new i1("pressStyle1",M2.WHITE_SET),Nt=new i1("pressStyle2",M2.REVERSE_CYCLE),Rt=a=>{switch(a){case 0:return Lt.value;case 1:return Tt.value;case 2:return Nt.value}},Bt=a=>a.type==="ForcedLine"||a.type==="AlmostEmptyToRed"||a.type==="JointToRed"||a.type==="FaceSatisfied"||a.type==="FaceAntiSatisfied"||a.type==="ForcedSolveLoop"||a.type==="PrematureForcedLoop"||a.type==="CompletingEdgesAfterSolve"||a.type==="FaceColorToBlack"||a.type==="FaceColorToRed"||a.type==="FaceColorNoTrivialLoop"||a.type==="FaceColorMatchToRed"||a.type==="FaceColorMatchToBlack"||a.type==="DoubleMinusOneFaces"||a.type==="ForcedSector"||a.type==="VertexStateToEdge"||a.type==="FaceStateToEdge"||a.type==="Pattern"&&a.affectedEdges.size>0,Ot=a=>a.type==="InvalidFaceColoring"||a.type==="GeneralFaceColoring"||a.type==="FaceColoringBlackEdge"||a.type==="FaceColoringRedEdge"||a.type==="FaceColorBalance"||a.type==="VertexStateToSameFaceColor"||a.type==="VertexStateToOppositeFaceColor"||a.type==="FaceStateToSameFaceColor"||a.type==="FaceStateToOppositeFaceColor"||a.type==="Pattern"&&a.affectedFaces.size>0,It=a=>a.type==="SingleEdgeToSector"||a.type==="DoubleEdgeToSector"||a.type==="StaticFaceSectors"||a.type==="VertexStateToSector"||a.type==="FaceStateToSector"||a.type==="Pattern"&&a.affectedSectors.size>0,Ht=a=>a.type==="VertexState"||a.type==="FaceStateToVertexState",Vt=a=>a.type==="FaceState",Mt=(a,o)=>!!(a.type==="Pattern"||Bt(a)||o.faceColorsVisibleProperty.value&&isFinite(o.faceColorThresholdProperty.value)&&Ot(a)||o.sectorsVisibleProperty.value&&It(a)||o.vertexStateVisibleProperty.value&&Ht(a)||o.faceStateVisibleProperty.value&&Vt(a)),Y1=(a,o,e)=>{n1(e,a,o,!0)};class Dt{constructor(o){this.hintAction=o}get annotation(){return this.hintAction.annotation}apply(o){this.hintAction.apply(o)}getUndo(o){throw new Error("unimplemented")}isEmpty(){return this.hintAction.isEmpty()}serializeAction(){throw new Error("unimplemented")}static deserializeAction(o,e){throw new Error("unimplemented")}}class qt{constructor(o,e){v(this,"faceValues",[]);v(this,"faceColors",[]);v(this,"oppositeFaceColors",[]);v(this,"redEdgeValues",[]);v(this,"blackEdgeValues",[]);v(this,"sectorNotZeroValues",[]);v(this,"sectorNotOneValues",[]);v(this,"sectorNotTwoValues",[]);v(this,"sectorOnlyOneValues",[]);this.boardPatternBoard=o,this.inputData=e;for(const t of o.faces){const r=o.getFace(t);r?this.faceValues.push(e.getFaceValue(r)):this.faceValues.push(null);const n=r?e.getFaceColor(r):e.getOutsideColor(),i=e.getOppositeFaceColor(n);this.faceColors.push(n),this.oppositeFaceColors.push(i)}for(const t of o.edges){const r=o.getEdge(t);x()&&k(r);const n=e.getEdgeState(r);this.redEdgeValues.push(n===T.RED),this.blackEdgeValues.push(n===T.BLACK)}for(const t of o.sectors){const r=o.getSector(t);x()&&k(r);const n=e.getSectorState(r);this.sectorNotZeroValues.push(!n.zero),this.sectorNotOneValues.push(!n.one),this.sectorNotTwoValues.push(!n.two),this.sectorOnlyOneValues.push(!n.zero&&n.one&&!n.two)}}}const Ut=(a,o,e,t,r)=>{const n=e.inputFeatureSet.getFeaturesArray(),i=e.outputFeatureSet.getFeaturesArray(),s=[],l=new Set,c=new Set,d=new Set;for(const h of i)if(h instanceof Z2||h instanceof m1){const I=h instanceof Z2,B=a.getEdge(h.edge),r2=o.getEdgeState(B);if(r2===T.WHITE)s.push(new z1(B,I?T.BLACK:T.RED)),l.add(B);else if(r2===T.BLACK!==I)throw new j("Edge is not in the correct state")}else if(h instanceof Y2||h instanceof _2||h instanceof Q2||h instanceof j2){const I=a.getSector(h.sector),B=o.getSectorState(I);if(h instanceof Y2){if(B.zero){if(!B.one&&!B.two)throw new j("Sector cannot be made impossible");s.push(new I2(I,B.withDisallowZero())),c.add(I)}}else if(h instanceof _2){if(B.one){if(!B.zero&&!B.two)throw new j("Sector cannot be made impossible");s.push(new I2(I,B.withDisallowOne())),c.add(I)}}else if(h instanceof Q2){if(B.two){if(!B.zero&&!B.one)throw new j("Sector cannot be made impossible");s.push(new I2(I,B.withDisallowTwo())),c.add(I)}}else if(h instanceof j2&&(B.zero||B.two)){if(!B.one)throw new j("Sector cannot be made impossible");s.push(new I2(I,B.withDisallowZero().withDisallowTwo())),c.add(I)}}else if(h instanceof v1){const I=H=>C2.uniq(H.map(S2=>{const m2=a.getFace(S2);return m2?o.getFaceColor(m2):o.getOutsideColor()})),B=I(h.primaryFaces),r2=I(h.secondaryFaces),T2=B.map(H=>o.getOppositeFaceColor(H)),G2=r2.map(H=>o.getOppositeFaceColor(H));for(const H of B){if(r2.includes(H))throw new j("Cannot make primary and secondary colors the same");if(T2.includes(H))throw new j("Cannot make primary and opposite colors the same")}for(const H of r2)if(G2.includes(H))throw new j("Cannot make secondary and opposite colors the same");const N2=(H,S2)=>{[...h.allFaces].forEach(m2=>{const v2=a.getFace(m2),I1=v2?o.getFaceColor(v2):o.getOutsideColor();v2&&(I1===H||I1===S2)&&d.add(v2)})};for(const H of[B,r2])if(H.length>1)for(let S2=1;S2<H.length;S2++){const m2=H[0],v2=H[S2];s.push(new S3(f2(o,m2),f2(o,v2))),N2(m2,v2)}r2.length&&B[0]!==G2[0]&&(s.push(new m3(f2(o,B[0]),f2(o,r2[0]))),N2(B[0],r2[0]))}else x()&&k(h instanceof P1);const u=n.filter(h=>h instanceof P1).map(h=>({face:a.getFace(h.face),value:h.value})),C=i.filter(h=>h instanceof P1).map(h=>({face:a.getFace(h.face),value:h.value})),A=n.filter(h=>h instanceof Z2).map(h=>a.getEdge(h.edge)),F=i.filter(h=>h instanceof Z2).map(h=>a.getEdge(h.edge)),S=n.filter(h=>h instanceof m1).map(h=>a.getEdge(h.edge)),g=i.filter(h=>h instanceof m1).map(h=>a.getEdge(h.edge)),f=n.filter(h=>h instanceof Y2).map(h=>a.getSector(h.sector)),w=i.filter(h=>h instanceof Y2).map(h=>a.getSector(h.sector)),b=n.filter(h=>h instanceof _2).map(h=>a.getSector(h.sector)),P=i.filter(h=>h instanceof _2).map(h=>a.getSector(h.sector)),E=n.filter(h=>h instanceof Q2).map(h=>a.getSector(h.sector)),L=i.filter(h=>h instanceof Q2).map(h=>a.getSector(h.sector)),R=n.filter(h=>h instanceof j2).map(h=>a.getSector(h.sector)),p=i.filter(h=>h instanceof j2).map(h=>a.getSector(h.sector)),m=n.filter(h=>h instanceof v1),s2=i.filter(h=>h instanceof v1),o2=h=>({primaryFaces:h.primaryFaces.map(I=>a.getFace(I)),secondaryFaces:h.secondaryFaces.map(I=>a.getFace(I))}),V=m.map(o2),M=s2.map(o2);return new Ue(new he(s),{type:"Pattern",rule:t,embedding:r,boardPatternBoard:a,input:{faceValues:u,blackEdges:A,redEdges:S,sectorsNotZero:f,sectorsNotOne:b,sectorsNotTwo:E,sectorsOnlyOne:R,faceColorDuals:V},output:{faceValues:C,blackEdges:F,redEdges:g,sectorsNotZero:w,sectorsNotOne:P,sectorsNotTwo:L,sectorsOnlyOne:p,faceColorDuals:M},affectedEdges:l,affectedSectors:c,affectedFaces:d})};class B1{constructor(o,e,t,r,n=0){v(this,"nextIndex");v(this,"dirtyListener");this.board=o,this.boardPatternBoard=e,this.state=t,this.binaryRuleCollection=r,this.nextIndex=n,this.dirtyListener=()=>{this.nextIndex=0},this.state.faceValueChangedEmitter.addListener(this.dirtyListener),this.state.edgeStateChangedEmitter.addListener(this.dirtyListener),this.state.sectorStateChangedEmitter.addListener(this.dirtyListener),this.state.faceColorsChangedEmitter.addListener(this.dirtyListener)}get dirty(){return this.nextIndex<this.binaryRuleCollection.size}nextAction(){if(!this.dirty)return null;const o=new qt(this.boardPatternBoard,this.state),e=this.binaryRuleCollection.findNextActionableEmbeddedRuleFromData(o.boardPatternBoard,o,this.nextIndex);return e?(this.nextIndex=e.ruleIndex+1,Ut(this.boardPatternBoard,this.state,e.embeddedRule,e.rule,e.embedding)):(this.nextIndex=this.binaryRuleCollection.size,null)}clone(o){return new B1(this.board,this.boardPatternBoard,o,this.binaryRuleCollection,this.nextIndex)}dispose(){this.state.faceValueChangedEmitter.removeListener(this.dirtyListener),this.state.edgeStateChangedEmitter.removeListener(this.dirtyListener),this.state.sectorStateChangedEmitter.removeListener(this.dirtyListener),this.state.faceColorsChangedEmitter.removeListener(this.dirtyListener)}}const q2=a=>(o,e,t)=>{const r=new Pt(o);return new We([new Ge(o,e),new Xe(o,e),new Ke(o,e),...a.map(n=>new B1(o,r,e,{size:n.size,findNextActionableEmbeddedRuleFromData:(i,s,l=0)=>n.collection.findNextActionableEmbeddedRuleFromData(i,s,l,c=>n.isRuleIndexHighlander(c))})),new Je(o,e,{solveToRed:!0,solveToBlack:!0,resolveAllRegions:!1})])},Wt=q2([c1]),Gt=q2([N1]),Xt=q2([v3,N1,c1]),Kt=q2([P3,c1]),Jt=q2([Ct,v3,P3,N1,c1]),E3=new a1("uiHintUsesBuiltInSolve",!1),L1=new a1("showUndoRedoAllProperty",!1);class b3 extends O3{constructor(e,t=g2){super();v(this,"stack");v(this,"stackLengthProperty",new s1(0));v(this,"stackPositionProperty",new s1(0));v(this,"undoPossibleProperty");v(this,"redoPossibleProperty");v(this,"currentSnapshotProperty");v(this,"hasErrorProperty");v(this,"isSolvedProperty");v(this,"pendingHintActionProperty",new d2(null));v(this,"displayedAnnotationProperty");v(this,"pendingActionFaceColorProperty",new d2(null));v(this,"pendingActionSectorProperty",new d2(null));v(this,"hoverEdgeProperty",new d2(null));v(this,"hoverFaceProperty",new d2(!1));v(this,"hoverSectorProperty",new d2(null));v(this,"hoverHighlightProperty");v(this,"selectedFaceColorHighlightProperty");v(this,"selectedSectorEditProperty");v(this,"autoSolverFactoryProperty");this.puzzle=e,this.style=t,this.autoSolverFactoryProperty=new _([o1,t.safeSolverFactoryProperty,t.autoSolverFactoryProperty],(i,s,l)=>i?l:s),this.displayedAnnotationProperty=new _([this.pendingHintActionProperty],i=>i?i.annotation:null);const r=()=>{this.pendingActionFaceColorProperty.value=null,this.pendingActionSectorProperty.value=null};this.stackPositionProperty.lazyLink(r),p2.lazyLink(r),this.disposeEmitter.addListener(()=>p2.unlink(r)),this.selectedFaceColorHighlightProperty=new _([e.stateProperty,p2,this.pendingActionFaceColorProperty],(i,s,l)=>{if((s===O.FACE_COLOR_MATCH||s===O.FACE_COLOR_OPPOSITE)&&l){const c=i.getFacesWithColor(l.color);return{faceColor:l.color,face:l.face,faces:c}}return null}),this.disposeEmitter.addListener(()=>this.selectedFaceColorHighlightProperty.dispose()),this.selectedSectorEditProperty=new _([e.stateProperty,p2,this.pendingActionSectorProperty],(i,s,l)=>s===O.SECTOR_STATE&&l?{sector:l,currentState:i.getSectorState(l)}:null),this.disposeEmitter.addListener(()=>this.selectedSectorEditProperty.dispose()),this.hoverHighlightProperty=new _([e.stateProperty,p2,this.hoverEdgeProperty,this.hoverFaceProperty,this.hoverSectorProperty,f3],(i,s,l,c,d,u)=>{if(s===O.EDGE_STATE||s===O.EDGE_STATE_REVERSED)if(l&&u){const C=i.getEdgeState(l),A=this.getNewEdgeState(C,s===O.EDGE_STATE_REVERSED?2:0);return{type:"edge-state",edge:l,simpleRegion:C===T.BLACK?i.getSimpleRegionWithEdge(l):null,potentialEdgeState:A}}else return null;else if(s===O.FACE_COLOR_MATCH||s===O.FACE_COLOR_OPPOSITE)if(c!==!1&&u){const C=c?this.puzzle.stateProperty.value.getFaceColor(c):this.puzzle.stateProperty.value.getOutsideColor(),A=this.puzzle.stateProperty.value.getFacesWithColor(C);return{type:"face-color",faceColor:C,face:c,faces:A}}else return null;else return s===O.SECTOR_STATE&&d&&u?{type:"sector",sector:d}:null}),this.disposeEmitter.addListener(()=>this.hoverHighlightProperty.dispose());{const i=e.stateProperty.value.clone();Y1(e.board,i,this.style.safeSolverFactoryProperty.value),e.stateProperty.value=i}this.stack=[new R2(this.puzzle.board,null,e.stateProperty.value)],this.stackLengthProperty.value=1,this.currentSnapshotProperty=new _([this.stackLengthProperty,this.stackPositionProperty],()=>this.stack[this.stackPositionProperty.value]),this.hasErrorProperty=new _([this.currentSnapshotProperty],i=>i.errorDetected),this.isSolvedProperty=new _([this.currentSnapshotProperty],i=>{if(i.state.getWeirdEdges().length||i.state.hasInvalidFaceColors())return!1;const s=i.state.getSimpleRegions();return s.length===1&&s[0].isSolved}),this.addAutoSolveDelta(),this.updateState(),this.undoPossibleProperty=new _([this.stackPositionProperty],i=>i>0),this.redoPossibleProperty=new _([this.stackPositionProperty,this.stackLengthProperty],(i,s)=>i<s-1);const n=()=>this.onAutoSolveChange();this.autoSolverFactoryProperty.lazyLink(n),this.style.safeSolverFactoryProperty.lazyLink(n),this.disposeEmitter.addListener(()=>{this.autoSolverFactoryProperty.unlink(n),this.style.safeSolverFactoryProperty.unlink(n)})}updateState(){this.pendingHintActionProperty.value=null,this.puzzle.stateProperty.value=this.stack[this.stackPositionProperty.value].state,setTimeout(()=>{localStorage.setItem("puzzleString",y3(this.puzzle))},0)}wipeStackTop(){for(;this.stack.length>this.stackPositionProperty.value+1;)this.stack.pop();this.stackLengthProperty.value=this.stack.length}pushTransitionAtCurrentPosition(e){this.wipeStackTop(),this.stack.push(e),this.stackLengthProperty.value=this.stack.length,this.stackPositionProperty.value++}applyUserActionToStack(e,t){const r=(t==null?void 0:t.forceDirty)||e instanceof f1,i=this.stack[this.stackPositionProperty.value].state;let s=!1;const l=new M1(this.puzzle.board,i,this.puzzle.solution.solvedState);try{e.apply(l)}catch{s=!0}let c=i.createDelta();try{if(X1(this.autoSolverFactoryProperty.value,this.puzzle.board,c,()=>{e.apply(c)},r),t!=null&&t.checkAutoSolve&&!(t!=null&&t.checkAutoSolve(c)))throw new j("Auto-solver did not respect user action")}catch(u){if(s=!0,u instanceof j)console.log("error"),c=i.createDelta(),X1(this.style.safeSolverFactoryProperty.value,this.puzzle.board,c,()=>{e.apply(c)},r);else throw u}const d=i.clone();c.apply(d),this.pushTransitionAtCurrentPosition(new R2(this.puzzle.board,e,d,s))}addAutoSolveDelta(){const e=this.puzzle.stateProperty.value.createDelta();try{if(n1(this.autoSolverFactoryProperty.value,this.puzzle.board,e,!0),!e.isEmpty()){const t=this.puzzle.stateProperty.value.clone();e.apply(t),this.pushTransitionAtCurrentPosition(new R2(this.puzzle.board,new f1,t))}}catch(t){if(!(t instanceof j))throw t}}onAutoSolveChange(){const e=this.stack[this.stackPositionProperty.value];e.action&&this.stackPositionProperty.value--,this.applyUserActionToStack(e.action||new f1,{forceDirty:!0}),this.updateState()}onUserUndo(){this.stackPositionProperty.value>0&&(this.stackPositionProperty.value--,this.updateState())}onUserRedo(){this.stackPositionProperty.value<this.stackLengthProperty.value-1&&(this.stackPositionProperty.value++,this.updateState())}onUserUndoAll(){this.stackPositionProperty.value>0&&(this.stackPositionProperty.value=0,this.updateState())}onUserRedoAll(){this.stackPositionProperty.value<this.stackLengthProperty.value-1&&(this.stackPositionProperty.value=this.stackLengthProperty.value-1,this.updateState())}onUserEscape(){this.pendingActionFaceColorProperty.value=null,this.pendingActionSectorProperty.value=null}getNewEdgeState(e,t){const r=p2.value===O.EDGE_STATE_REVERSED;return Rt(r?2-t:t).apply(e)}onUserEdgePress(e,t){const r=this.puzzle.stateProperty.value.getEdgeState(e),n=this.getNewEdgeState(r,t);if(r!==n){const i=this.stack[this.stackPositionProperty.value];i.action&&i.action instanceof z1&&i.action.edge===e&&this.stackPositionProperty.value--;const s=new z1(e,n);this.applyUserActionToStack(s,{checkAutoSolve:l=>l.getEdgeState(e)===n}),this.updateState()}}onUserFacePress(e,t){let r=p2.value===O.FACE_COLOR_MATCH;t===2&&(r=!r);const n=e?this.puzzle.stateProperty.value.getFaceColor(e):this.puzzle.stateProperty.value.getOutsideColor(),i=this.pendingActionFaceColorProperty.value;if(i){if(e!==i.face){const s=i.color;s!==n&&(r?this.applyUserActionToStack(new S3(f2(this.puzzle.stateProperty.value,n),f2(this.puzzle.stateProperty.value,s))):this.applyUserActionToStack(new m3(f2(this.puzzle.stateProperty.value,n),f2(this.puzzle.stateProperty.value,s))))}this.pendingActionFaceColorProperty.value=null,this.updateState()}else this.pendingActionFaceColorProperty.value={face:e,color:n}}onUserSectorPress(e,t){this.pendingActionSectorProperty.value=e}onUserSectorSet(e,t){this.applyUserActionToStack(new I2(e,t)),this.pendingActionSectorProperty.value=null,this.updateState()}onUserEdgeHover(e,t){t?this.hoverEdgeProperty.value=e:this.hoverEdgeProperty.value=null}onUserFaceHover(e,t){t?this.hoverFaceProperty.value=e:this.hoverFaceProperty.value=!1}onUserSectorHover(e,t){t?this.hoverSectorProperty.value=e:this.hoverSectorProperty.value=null}onUserRequestSolve(){const e=this.puzzle.stateProperty.value;if(!g3(e))if(E3.value){const t=e.clone();n1(p3,this.puzzle.board,t,!0),this.pushTransitionAtCurrentPosition(new R2(this.puzzle.board,new D1,t,!1)),this.updateState()}else{const t=re(this.puzzle.board,this.puzzle.stateProperty.value,{maxIterations:1e4,failOnMultipleSolutions:!0});if(t.length===1){const r=this.puzzle.stateProperty.value.clone();t[0].forEach(n=>{r.setEdgeState(n,T.BLACK)}),Y1(this.puzzle.board,r,this.style.safeSolverFactoryProperty.value),this.pushTransitionAtCurrentPosition(new R2(this.puzzle.board,new D1,r,!1)),this.updateState()}else t.length===0?console.log("No solution found"):console.log("Multiple solution found?!?")}}onUserRequestHint(){if(!this.isSolvedProperty.value)if(this.pendingHintActionProperty.value){const e=this.pendingHintActionProperty.value;this.pendingHintActionProperty.value=null,this.applyUserActionToStack(new Dt(e)),this.updateState()}else{const e=this.puzzle.stateProperty.value.clone(),t=g2.edgesVisibleProperty.value,r=g2.faceColorsVisibleProperty.value&&isFinite(g2.faceColorThresholdProperty.value),n=g2.sectorsVisibleProperty.value;let i;t&&!r&&!n?i=Wt:r&&!t&&!n?i=Gt:t&&r&&!n?i=Xt:t&&n&&!r?i=Kt:i=Jt;const s=i(this.puzzle.board,e,!0);try{let l=s.nextAction();for(;l;){const c=new M1(this.puzzle.board,e,this.puzzle.solution.solvedState);let d=!0;try{l.apply(c)}catch(u){if(u instanceof j)d=!1;else throw u}if(d||console.error("invalid action",l),Mt(l.annotation,this.style)){this.pendingHintActionProperty.value=l,console.log(l.annotation);break}else l.apply(e),l=s.nextAction()}}catch(l){if(l instanceof j)console.error(l);else throw l}}}}class R2{constructor(o,e,t,r=!1){this.board=o,this.action=e,this.state=t,this.errorDetected=r}}class d1 extends N{constructor(o,e,t,r){const n=w2()({allowBarrierClickToHide:!0,panelOptions:{xMargin:15,yMargin:15,fill:y.uiBackgroundColorProperty,stroke:y.uiForegroundColorProperty}},r);super(),this.content=o,this.glassPane=e,this.layoutBoundsProperty=t;const i=new Z({fill:y.barrierColorProperty});this.addChild(i),t.link(l=>{i.rectBounds=l}),n.allowBarrierClickToHide&&i.addInputListener({down:()=>{this.hide()}});const s=new t3(o,n.panelOptions);t.link(l=>{s.maxWidth=l.width*.9,s.maxHeight=l.height*.9}),this.addChild(new e1(s,{alignBoundsProperty:t,yAlign:"top",topMargin:50}))}show(){this.glassPane.hasChild(this)||(this.reset(),this.glassPane.addChild(this))}hide(){this.glassPane.hasChild(this)&&this.glassPane.removeChild(this)}reset(){}}class z extends j3{constructor(o,e,t){const r=w2()({advanced:!1,accessibleName:o,checkboxColor:y.uiForegroundColorProperty,checkboxColorBackground:y.uiBackgroundColorProperty},t),n=new K(o,{font:e2,fill:y.uiForegroundColorProperty});r.advanced&&(r.visibleProperty=q),r.boxWidth=n.height,super(e,n,r)}}const a2=(a,o,e,t)=>{const r=new $3(o,e,{spacing:8,radioButtonOptions:{selectedColor:y.uiButtonBaseColorProperty,deselectedColor:y.uiBackgroundColorProperty,stroke:y.uiForegroundColorProperty}}),n=w2()({stretch:!0,align:"left",spacing:10,children:[new K(a,{font:A1,fill:y.uiForegroundColorProperty}),r]},t);return new G(n)};class y2 extends t1{constructor(o,e){const t=w2()({advanced:!1,textFill:y.uiButtonForegroundProperty,baseColor:y.uiButtonBaseColorProperty,xMargin:5,yMargin:5,font:e2,buttonAppearanceStrategy:O2},e);t.advanced&&(t.visibleProperty=q),super(o,t)}}class Zt extends Y{constructor(o,e,t,r){const n=w2()({advanced:!1,onOffSwitchOptions:{size:new C1(40,20),trackFillLeft:y.uiButtonDisabledColorProperty,trackFillRight:y.uiButtonBaseColorProperty,accessibleName:e},spacing:10},r),i=new ee(o,n.onOffSwitchOptions);n.children=[t,i],n.advanced&&(n.visibleProperty=q),super(n)}}class n2 extends Zt{constructor(o,e,t){const r=w2()({textOptions:{}},t),n=new J(e,r.textOptions);super(o,e,n,r)}}class F3 extends te{constructor(o,e,t){super(o,e,Q({orientation:"horizontal",touchAreaYDilation:5,radioButtonOptions:{baseColor:y.uiButtonBaseColorProperty,disabledColor:y.uiButtonDisabledColorProperty,xMargin:8*1.3,yMargin:5*1.3,buttonAppearanceStrategyOptions:{selectedStroke:y.uiButtonSelectedStrokeColorProperty,deselectedStroke:y.uiButtonDeselectedStrokeColorProperty}}},t))}}const Yt=new U("M1024 640q0 106 -75 181t-181 75t-181 -75t-75 -181t75 -181t181 -75t181 75t75 181zM1536 749v-222q0 -12 -8 -23t-20 -13l-185 -28q-19 -54 -39 -91q35 -50 107 -138q10 -12 10 -25t-9 -23q-27 -37 -99 -108t-94 -71q-12 0 -26 9l-138 108q-44 -23 -91 -38q-16 -136 -29 -186q-7 -28 -36 -28h-222q-14 0 -24.5 8.5t-11.5 21.5l-28 184q-49 16 -90 37l-141 -107q-10 -9 -25 -9q-14 0 -25 11q-126 114 -165 168q-7 10 -7 23q0 12 8 23q15 21 51 66.5t54 70.5q-27 50 -41 99l-183 27q-13 2 -21 12.5t-8 23.5v222q0 12 8 23t19 13l186 28q14 46 39 92q-40 57 -107 138q-10 12 -10 24q0 10 9 23q26 36 98.5 107.5t94.5 71.5q13 0 26 -10l138 -107q44 23 91 38q16 136 29 186q7 28 36 28h222q14 0 24.5 -8.5t11.5 -21.5l28 -184q49 -16 90 -37l142 107q9 9 24 9q13 0 25 -10q129 -119 165 -170q7 -8 7 -22q0 -12 -8 -23q-15 -21 -51 -66.5t-54 -70.5q26 -50 41 -98l183 -28q13 -2 21 -12.5t8 -23.5z").makeImmutable(),_t=new U("M979 1395q19 19 32 13t13 -32v-1472q0 -26 -13 -32t-32 13l-710 710q-9 9 -13 19v-678q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v1408q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-678q4 10 13 19z").makeImmutable(),Qt=new U("M45 -115q-19 -19 -32 -13t-13 32v1472q0 26 13 32t32 -13l710 -710q9 -9 13 -19v678q0 26 19 45t45 19h128q26 0 45 -19t19 -45v-1408q0 -26 -19 -45t-45 -19h-128q-26 0 -45 19t-19 45v678q-4 -10 -13 -19z").makeImmutable(),jt=new U("M1619 1395q19 19 32 13t13 -32v-1472q0 -26 -13 -32t-32 13l-710 710q-9 9 -13 19v-710q0 -26 -13 -32t-32 13l-710 710q-19 19 -19 45t19 45l710 710q19 19 32 13t13 -32v-710q4 10 13 19z").makeImmutable(),$t=new U("M45 -115q-19 -19 -32 -13t-13 32v1472q0 26 13 32t32 -13l710 -710q9 -9 13 -19v710q0 26 13 32t32 -13l710 -710q19 -19 19 -45t-19 -45l-710 -710q-19 -19 -32 -13t-13 32v710q-4 -10 -13 -19z").makeImmutable(),eo=new U("M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z").makeImmutable(),to=new U("M363 0l91 91l-235 235l-91 -91v-107h128v-128h107zM886 928q0 22 -22 22q-10 0 -17 -7l-542 -542q-7 -7 -7 -17q0 -22 22 -22q10 0 17 7l542 542q7 7 7 17zM832 1120l416 -416l-832 -832h-416v416zM1515 1024q0 -53 -37 -90l-166 -166l-416 416l166 165q36 38 90 38q53 0 91 -38l235 -234q37 -39 37 -91z").makeImmutable(),P2=(a,o)=>new t2(a,Q({maxWidth:20,maxHeight:20,fill:"black"},o));class u1 extends F3{constructor(o){const{basicLinesIcon:e,basicFaceColoringIcon:t,pureFaceColoringIcon:r,classicIcon:n,basicSectorsIcon:i,sectorsWithColorsIcon:s,vertexStateIcon:l,faceStateIcon:c,customIcon:d}=u1.getIcons();super(o3,[{value:r3,createNode:()=>e,labelContent:"Basic Lines"},{value:s3,createNode:()=>t,labelContent:"Basic Face Colors"},{value:n3,createNode:()=>r,labelContent:"Pure Face Colors"},{value:a3,createNode:()=>n,labelContent:"Classic"},{value:i3,createNode:()=>i,labelContent:"Basic Sectors",options:{visibleProperty:q}},{value:l3,createNode:()=>s,labelContent:"Sectors With Colors",options:{visibleProperty:q}},{value:x1,createNode:()=>l,labelContent:"Sectors With Colors",options:{visibleProperty:q}},{value:k1,createNode:()=>c,labelContent:"Sectors With Colors",options:{visibleProperty:q}},{value:c3,createNode:()=>d,labelContent:"Custom",options:{visibleProperty:q}}]),o.layoutBoundsProperty.link(u=>{this.maxWidth=Math.max(1,u.width-2*z2)})}static getIcons(){const o=new Z(0,0,15,15,{stroke:y.whiteLineColorProperty,fill:y.faceColorDefaultColorProperty}),e=new Z(0,0,15,15,{stroke:y.whiteLineColorProperty,fill:new _([y.faceColorBasicTargetColorProperty],E=>E.withAlpha(1))}),t=new t2(new U().moveTo(0,15).lineTo(0,0).lineTo(15,0).makeImmutable(),{stroke:new _([y.simpleRegionTargetColorProperty],E=>E.withAlpha(1)),lineWidth:4,lineCap:"round",lineJoin:"round"}),r=new t2(new U().moveTo(0,15).lineTo(0,0).lineTo(15,0).makeImmutable(),{stroke:y.blackLineColorProperty,lineWidth:4,lineCap:"round",lineJoin:"round"}),n=new t2(new U().arc(0,0,9,0,Math.PI/2,!1),{stroke:y.sectorOnlyOneColorProperty}),i=new N({children:[o,t]}),s=new N({children:[e,r]}),l=new N({children:[new Z(0,0,15,15,{fill:y.uiForegroundColorProperty})]}),c=3,d=new U().moveTo(-c,-c).lineTo(c,c).moveTo(-c,c).lineTo(c,-c),u=new N({children:[new Z(0,0,15,15,{fill:y.puzzleBackgroundColorProperty}),new t2(new U().moveTo(0,15).lineTo(0,0).lineTo(15,0).makeImmutable(),{stroke:y.blackLineColorProperty,lineWidth:3,lineCap:"square",lineJoin:"miter"}),new t2(d,{stroke:y.xColorProperty,lineWidth:2,x:15,y:7.5})]}),C=new N({children:[o,n,t]}),A=new N({children:[e,n,r]}),F=w3("eJytV11v2jAU/S9+9oOvv4PUh7VQqS+dNtZK08RDVlwUjQIiKWuF8t9nJw2JjWGJygtKfE7OuR/Oxdmjndnm2XqFRoDR73W6naPRHhXvG4NG6DrNzXW1hh2vyJ5Mjka/9ugNjQhG79Xvrr7ZubsSdzCoMYhh1MPAw5in6WO8xmhMU3iY/5ysMRZ7TnmY/5z24qQelnhx+hgQL5gABM8xAP3SMB/0axOAfnECUHierJxh9JxG+9k2mmDAFLPZhxJEKIA5Fpg2FBqhcCyxwqKhsAiFWRuNk4bCIxRqbWxVdcMREY6wPra4QBqSjJAS62SLDIe0VISknZctKBwy07HkSWVnA+Oz0hJRXqSF6bxAN+uXzdIUZpwWKaoL/pguX+v7lnbrrXcb464csW1Q61Lt1A5BhAQWEFRIoAFBHyu4rMx8YaZuIQh7Ytc/InYUF3FVhMwl/d0s7FgJnpiGkM+uFDD6a7LtfNJRdCHerJfrbaRu7TpGT+66Llxm5xiTIhESGNdaccnZB2Fa54a+PvyY3o0nnXpb7/Vms86zwhyk76yQ1QBOOFeESZ0w5cqWRdYDg7v7nvphoI0+EEEJIcIaJIoyCPQf7seTG+swRvF3uTzlt3pdLhsPRmXCtdAEEkpUfw8Y4KEp1ZpwpaWQjBHR14MOyQMEkTQhYK2EpL092AAPxaRilJKEckbFUb9PevAhHoqDtG2XTNreJ737IYb0I1ECqOBCJMDtzu3rIQd4cHBdUEwntlCgeuehhtTKblhCpSB2byXWp6+H7uNhwWy1S5fZ/ICh0XO6zI2bceap+DAKR1yANNzavL52dDtht8XRaDerubcGZTuMpUv7nABEBOgQARoRYEMEWESADBEQEQHVEeD/rUGsimKIgoq1AQbFEGsEkE+nMTAK/vkoookMqibEOmpD60q4v3h3qjJvsRfqMUCCT5H6wVNnJPTty9UVckFGeNDh5Wd4tMNji9M81lNPdPXO8FSHx8/l0U2YniNCX0Xel9jNZVERmwNbrJe33nrfg+6+PThX546XtNhmloh+OkM7pvMvq/dmNgdHWjgr5gZ9R6/VKravR1L0clLsclL8clJHHxCeFOutIy8X0tEniydFe+scfdmcTO1PbE/NyrL8B0eOKVk=");x()&&k(F);const S=new ie(F.board.vertices[5],F.stateProperty,new H2(!1),{...x1,allVertexStateVisibleProperty:new H2(!0)}),g=new N({children:[S],scale:60}),f=new le(F.board.faces[5],F.stateProperty,new H2(!1),k1),w=new N({children:[f],scale:30}),b=P2(to,{fill:y.uiForegroundColorProperty,matrix:new Q1().rowMajor(.75,0,0,0,-.75,0,0,0,1)}),P=new Y3;return{basicLinesIcon:P.createBox(i),basicFaceColoringIcon:P.createBox(s),pureFaceColoringIcon:P.createBox(l),classicIcon:P.createBox(u),basicSectorsIcon:P.createBox(C),sectorsWithColorsIcon:P.createBox(A),vertexStateIcon:P.createBox(g),faceStateIcon:P.createBox(w),customIcon:P.createBox(b)}}}const q=new a1("advancedSettingsVisibleProperty",!1);class oo extends d1{constructor(o,e){const t=new G({stretch:!0,align:"left",spacing:8,children:[new K("Solve After Every Move",{font:A1,fill:y.uiForegroundColorProperty}),new H1({xAlign:"left",yAlign:"top",xSpacing:20,ySpacing:8,columns:[[new z("Vertex Joint X",Ze),new z("Vertex Forced Line",Ye),new z("Vertex Forced X",_e),new z("Completed Face X",Qe),new z("Completed Face Lines",je),new z("Simple Loop X",$e),new z("Simple Loop Lines",et),new z("Double Minus One Faces",tt),new z("1/N-1 Sectors",ot),new z("Simple Sectors",rt),new z("Vertex X",st),new z("Vertex Lines",nt),new z("Vertex Sectors",at),new z("Vertex Faces",it)],[new z("Color X",lt),new z("Color Lines",ct),new z("Color Parity X",dt),new z("Color Parity Lines",ut),new z("Color Parity Colors",pt),new z("Color Parity Partial",ht),new z("Vertex/Color To Face",gt),new z("Face X",ft),new z("Face Lines",yt),new z("Face Sectors",wt),new z("Face Color",St)]]})]}),r=a2("Theme",fe,q1.map(g=>({value:g,createNode:()=>new K(g.name,{font:e2,fill:y.uiForegroundColorProperty}),a11yName:g.name}))),n=new G({spacing:15,stretch:!0,visible:l1.debugColors,children:q1.filter(g=>g.isEditable).map(g=>new y2(`Edit ${g.name} Theme`,{listener:()=>{ye(g)}}))}),i=new G({stretch:!0,align:"left",spacing:8,children:[new K("Puzzle Display",{font:A1,fill:y.uiForegroundColorProperty}),new H1({xAlign:"left",yAlign:"top",xSpacing:20,ySpacing:8,columns:[[new z("Lines Visible",U1),new z("Color Lines",we,{enabledProperty:U1,layoutOptions:{leftMargin:20}}),new z("Face Colors Visible",Se),new z("Sectors Visible",y1),new z("Sectors Next to Edges",me,{advanced:!0,enabledProperty:y1,layoutOptions:{leftMargin:20}}),new z("Trivial Sectors",ve,{advanced:!0,enabledProperty:y1,layoutOptions:{leftMargin:20}}),new z("Vertex State",W1),new z("All Vertex State",Pe,{advanced:!0,enabledProperty:W1,layoutOptions:{leftMargin:20}}),new z("Face State",Ce,{advanced:!0})],[new z("Possible Line Visible",Ee),new z("Impossible Line Visible",G1),new z("Vertices Visible",be),new z("Vertices Small",Fe),new z("Red X Visible",xe),new z("Red X Aligned",ke)]]}),new Y({spacing:20,visibleProperty:q,children:[a2("Line Join",Ae,ze.map(g=>({value:g,createNode:()=>new K(g,{font:e2,fill:y.uiForegroundColorProperty}),labelContent:g}))),a2("Line Cap",Te,Le.map(g=>({value:g,createNode:()=>new K(g,{font:e2,fill:y.uiForegroundColorProperty}),labelContent:g}))),a2("Vertex Style",Re,Ne.map(g=>({value:g,createNode:()=>new K(g,{font:e2,fill:y.uiForegroundColorProperty}),labelContent:g}))),a2("Impossible Line Style",Oe,Be.map(g=>({value:g,createNode:()=>new K(g,{font:e2,fill:y.uiForegroundColorProperty}),labelContent:g}))),a2("Face Value Style",He,Ie.map(g=>({value:g,createNode:()=>new K(g,{font:e2,fill:y.uiForegroundColorProperty}),labelContent:g})))]})]}),s=a2("Face Color Threshold",Ve,[{value:1,createNode:()=>new J("Show All"),labelContent:"Show All"},{value:2,createNode:()=>new J("2+"),labelContent:"2+"},{value:3,createNode:()=>new J("3+"),labelContent:"3+"},{value:5,createNode:()=>new J("5+"),labelContent:"5+"},{value:10,createNode:()=>new J("10+"),labelContent:"10+"},{value:Number.POSITIVE_INFINITY,createNode:()=>new J("Only Outside"),labelContent:"Only Outside"}]),l=new G({spacing:8,align:"left",stretch:!0,children:[new n2(o1,"Auto-Solve"),new n2(mt,"Add Lines",{layoutOptions:{leftMargin:20},enabledProperty:o1}),new n2(vt,"Simple Loops",{layoutOptions:{leftMargin:20},enabledProperty:o1}),new n2(d3,"Show View Style Controls"),new n2(G1,"Show Impossible Lines"),new n2(L1,"Show Undo-All / Redo-All",{advanced:!0}),new n2(f3,"Show Hover Highlights",{advanced:!0}),new n2(R1,"Show Layout Test",{advanced:!0}),new n2(E3,"Solve Uses Built-In",{advanced:!0})]}),c=new D2(!1),d=u1.getIcons(),u=(g,f)=>new Y({spacing:5,children:[new J(f),g]}),C=a2("View Style",o3,[{value:r3,createNode:()=>u(d.basicLinesIcon,"Basic Lines"),labelContent:"Basic Lines"},{value:s3,createNode:()=>u(d.basicFaceColoringIcon,"Basic Face Colors"),labelContent:"Basic Face Colors"},{value:n3,createNode:()=>u(d.pureFaceColoringIcon,"Pure Face Colors"),labelContent:"Pure Face Colors"},{value:a3,createNode:()=>u(d.classicIcon,"Classic"),labelContent:"Classic"},{value:i3,createNode:()=>u(d.basicSectorsIcon,"Basic Sectors"),labelContent:"Basic Sectors",options:{visibleProperty:q}},{value:l3,createNode:()=>u(d.sectorsWithColorsIcon,"Sectors With Colors"),labelContent:"Sectors With Colors",options:{visibleProperty:q}},{value:x1,createNode:()=>u(d.vertexStateIcon,"Vertex State"),labelContent:"Sectors With Colors",options:{visibleProperty:q}},{value:k1,createNode:()=>u(d.faceStateIcon,"Face State"),labelContent:"Sectors With Colors",options:{visibleProperty:q}},{value:c3,createNode:()=>u(d.customIcon,"Custom"),labelContent:"Custom",options:{visibleProperty:q}}]),A=new n2(c,"Show Custom Options",{advanced:!0}),F=new G({spacing:20,align:"left",children:[new Y({spacing:20,children:[t,s]}),i],visibleProperty:c}),S=new y2("Reload to Defaults",{listener:()=>{localStorage.clear(),window.location.reload()},advanced:!0});super(new G({spacing:20,align:"left",stretch:!0,children:[l,new Y({align:"top",spacing:30,children:[C,r,n]}),A,F,S,new n2(q,"Show Advanced Settings")]}),o,e),this.glassPane=o,this.layoutBoundsProperty=e}}class ro extends d1{constructor(e,t){const r=new D2(!1);super(new G({spacing:20,align:"left",stretch:!0,children:[new y2("Copy URL",{listener:()=>{if(this.puzzle){const n=location.protocol+"//"+location.host+location.pathname;let i=this.puzzle;this.includeStateProperty.value||(i=new u2(i.board,h3.fromFaceValueData(i.board,i.stateProperty.value)));const s=y3(i);Me(n+"?p="+encodeURIComponent(s))}}}),new z("Include edge state",r)]}),e,t);v(this,"includeStateProperty");v(this,"puzzle",null);this.glassPane=e,this.layoutBoundsProperty=t,this.includeStateProperty=r}setPuzzle(e){this.puzzle=e}reset(){super.reset(),this.includeStateProperty.reset()}}const h2=class h2 extends j1{constructor(o){super(),this.canSolve=o}};v(h2,"STANDARD",new h2((o,e)=>(e=e.clone(),n1(p3,o,e,!0),g3(e)))),v(h2,"NO_LIMIT",new h2(()=>!0)),v(h2,"enumeration",new $1(h2));let A2=h2;const _1=new i1("canSolveDifficulty",A2.STANDARD),so=a=>{const o=a.cleanState.clone();for(const e of a.board.faces)o.getFaceValue(e)===null&&o.setFaceValue(e,e.edges.filter(t=>a.blackEdges.has(t)).length);return se(a.board,o,a.blackEdges)};class no extends Y{constructor(o,e){const t=new oe("polygonGeneratorProperty",{serialize:f=>f.name,deserialize:f=>K2.find(w=>w.name===f)??K2[0]}),r=localStorage.getItem("polygonGeneratorParameters")?JSON.parse(localStorage.getItem("polygonGeneratorParameters")):null;let n=!1;const i=a2("Patterns",t,K2.map(f=>({value:f,createNode:()=>new K(f.name,{font:e2,fill:y.uiForegroundColorProperty}),labelContent:f.name})),{layoutOptions:{align:"top",grow:0},justify:"top"}),s=new Y({spacing:10,align:"center",layoutOptions:{grow:0},grow:1}),l=new Y({spacing:10,align:"center",layoutOptions:{grow:0},children:[new J("Solver Difficulty"),new Et(_1,[{value:A2.STANDARD,createNode:()=>new J("Standard"),labelContent:"Standard"},{value:A2.NO_LIMIT,createNode:()=>new J("No Limit"),labelContent:"No Limit"}],{orientation:"horizontal",align:"center",spacing:30})]}),c=new Y({spacing:10,align:"center",justify:"spaceEvenly",layoutOptions:{grow:0}}),d=new N,u=new N,C=new X2;C.addListener(()=>{u.children=[]});const A=new N({children:[d,u]}),F=(f,w)=>{const b=f.generate(w),P=new U;b.forEach(E=>P.polygon(E)),d.children=[new t2(P,{fill:y.puzzleBackgroundColorProperty,stroke:y.blackLineColorProperty,lineWidth:.05})],C.emit()};F(K2[0],{width:5,height:5}),t.link(f=>{c.children.forEach(E=>E.dispose()),s.children.forEach(E=>E.dispose());const w={},b=E=>r&&!n&&E in r?r[E]:f.defaultParameterValues[E],P=()=>{localStorage.setItem("polygonGeneratorParameters",JSON.stringify(w)),F(f,w)};for(const[E,L]of Object.entries(f.parameters))if(L.type==="integer"){const R=new s1(b(E));R.link(p=>{w[E]=p,P()}),c.addChild(new J2(L.label,R,L.range,{layoutFunction:J2.createLayoutFunction4(),titleNodeOptions:{font:e2,fill:y.uiForegroundColorProperty},sliderOptions:{trackSize:new C1(100,5),labelTagName:"label",keyboardStep:1,labelContent:L.label},arrowButtonOptions:{touchAreaXDilation:5,touchAreaYDilation:25},numberDisplayOptions:{decimalPlaces:0},delta:1,visibleProperty:L.advanced?q:null}))}else if(L.type==="float"){const R=new s1(b(E));R.link(p=>{w[E]=p,P()}),c.addChild(new J2(L.label,R,L.range,{layoutFunction:J2.createLayoutFunction4(),titleNodeOptions:{font:e2,fill:y.uiForegroundColorProperty},sliderOptions:{trackSize:new C1(100,5),labelTagName:"label",keyboardStep:.1,labelContent:L.label},numberDisplayOptions:{decimalPlaces:2},delta:.01,visibleProperty:L.advanced?q:null}))}else if(L.type==="boolean"){const R=new D2(b(E));R.link(p=>{w[E]=p,P()}),c.addChild(new z(L.label,R,{advanced:L.advanced}))}else if(L.type==="choice"){const R=new d2(b(E));R.link(p=>{w[E]=p,P()}),c.addChild(a2(L.label,R,L.choices.map(p=>({value:p.value,createNode:()=>new K(p.label,{font:e2,fill:y.uiForegroundColorProperty}),labelContent:p.label}))))}n=!0,s.addChild(new y2("Generate",{font:w1,layoutOptions:{align:"center"},listener:async()=>{C.emit();const E=f.generate(w),L=new bt(E,f.scale??1),R=new H2(!1),p=()=>{R.value=!0};C.addListener(p);const m=new X2,s2=new X2,o2=new X2;o2.addListener(()=>{u.children=[]}),m.addListener((V,M)=>{u.addChild(new t2(U.polygon(E[V]),{fill:y.generateAddedFaceColorProperty,stroke:y.blackLineColorProperty,lineWidth:.05})),M!==null&&u.addChild(new K(`${M}`,{font:w1,fill:y.faceValueColorProperty,maxWidth:.9,maxHeight:.9,center:k2(E[V])}))}),s2.addListener((V,M)=>{u.addChild(new t2(U.polygon(E[V]),{fill:y.generateMinimizedFaceColorProperty,stroke:y.blackLineColorProperty,lineWidth:.05})),M!==null&&u.addChild(new K(`${M}`,{font:w1,fill:y.faceValueColorProperty,maxWidth:.9,maxHeight:.9,center:k2(E[V])}))});try{const V=_1.value,M=V.canSolve,h=async()=>await ce(L,R,m),I=async()=>{let T2=await h();if(V===A2.NO_LIMIT)return T2;{const G2=L.faces.filter(H=>T2.cleanState.getFaceValue(H)===null),N2=so(T2);return G2.forEach(H=>{m.emit(L.faces.indexOf(H),N2.cleanState.getFaceValue(H))}),N2}};let B=await I();for(;!M(B.board,B.cleanState.clone());)o2.emit(),B=await I();const r2=await de(B,M,R,s2);ue(17,R),R.value||(u.children=[],g.loadPuzzle(u2.fromSolvedPuzzle(r2)))}catch{}C.hasListener(p)&&C.removeListener(p)}}))});const S=new Z({fill:y.playAreaBackgroundColorProperty,sizable:!0,layoutOptions:{grow:1},children:[A]});T1.multilink([S.localPreferredWidthProperty,S.localPreferredHeightProperty,A.localBoundsProperty],(f,w,b)=>{if(f!==null&&w!==null&&b.isFinite()){const E=f-30,L=w-2*15,R=Math.min(E/b.width,L/b.height);A.setScaleMagnitude(R),A.centerX=f/2,A.centerY=w/2}});const g=w2()({spacing:10,stretch:!0,children:[i,new G({spacing:10,stretch:!0,layoutOptions:{grow:1},children:[S,s,new b1,l,new b1,c]})]},e);super(g),this.glassPane=o}}const ao="#444",io="#fa0",lo="#888",co="#fff",uo="#f00",po="#ff0",ho="#ff0",go="#0f0",fo="#0ff",yo="#0af",wo="#f0f";class So extends d1{constructor(e,t){const r=new Y({children:[new K("Loading image...",{font:e2,fill:y.uiForegroundColorProperty})]}),n=new N({children:[r]});super(n,e,t);v(this,"scanContentNode");v(this,"imageContainer");v(this,"solutionContainer");v(this,"blackImageLayer");v(this,"originalImageLayer");v(this,"thresholdImageLayer");v(this,"contourLayer");v(this,"puzzle",null);v(this,"rootContour",null);v(this,"contours",[]);v(this,"contourNodeMap",new Map);this.glassPane=e,this.layoutBoundsProperty=t,this.scanContentNode=n,this.blackImageLayer=new N,this.originalImageLayer=new N({visible:!1}),this.thresholdImageLayer=new N({visible:!1}),this.contourLayer=new N,this.imageContainer=new N({children:[this.blackImageLayer,this.originalImageLayer,this.thresholdImageLayer,this.contourLayer]}),this.solutionContainer=new N}getScanOptions(){return{originalImageCallback:e=>this.onOriginalImage(e),thresholdedImageCallback:e=>this.onThresholdedImage(e),rootContourCallback:e=>this.onRootContour(e),widestSubtreeCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeWidestContour()},dotContourCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeDotContour()},lineContourCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeLineContour()},zeroOuterContourCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeZeroOuterContour()},zeroInnerContourCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeZeroInnerContour()},oneContourCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeOneContour()},twoContourCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeTwoContour()},threeContourCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeThreeContour()},xContourCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeXContour()},unknownContourCallback:e=>{var t;return(t=this.contourNodeMap.get(e))==null?void 0:t.makeUnknownContour()},debugImageCallback:e=>{},puzzleCallback:e=>this.onPuzzle(e),solutionsCallback:e=>this.onSolutions(e)}}onOriginalImage(e){this.originalImageLayer.addChild(new V1(e)),this.blackImageLayer.addChild(Z.bounds(this.originalImageLayer.bounds,{fill:"black"})),this.scanContentNode.children=[new G({spacing:10,children:[this.imageContainer,this.solutionContainer]})]}onThresholdedImage(e){this.thresholdImageLayer.addChild(new V1(e))}onRootContour(e){this.rootContour=e,this.contours=e.getDescendantContours();for(const t of this.contours){const r=new mo(t);this.contourNodeMap.set(t,r),this.contourLayer.addChild(r)}}onPuzzle(e){this.puzzle=e}onSolutions(e){if(e.length===1)this.hide();else{const t=this.puzzle;x()&&k(t);const r=t.board;if(e.length===0){B2(r,t.stateProperty.value);const n=new F2(t,{scale:20});this.solutionContainer.children=[new G({spacing:10,children:[new J("No Solutions Found"),n]})]}else{const n=new u2(r,t.stateProperty.value.clone()),i=new u2(r,t.stateProperty.value.clone()),s=new u2(r,t.stateProperty.value.clone());e[0].forEach(u=>n.stateProperty.value.setEdgeState(u,T.BLACK)),e[1].forEach(u=>i.stateProperty.value.setEdgeState(u,T.BLACK)),r.edges.forEach(u=>{n.stateProperty.value.getEdgeState(u)!==i.stateProperty.value.getEdgeState(u)&&s.stateProperty.value.setEdgeState(u,T.BLACK)}),B2(r,n.stateProperty.value),B2(r,i.stateProperty.value),B2(r,s.stateProperty.value);const l=new F2(n,{scale:10}),c=new F2(i,{scale:10}),d=new F2(s,{scale:10});this.solutionContainer.children=[new G({spacing:10,children:[new J("Multiple Solutions Found"),new Y({spacing:10,children:[new G({spacing:10,children:[l,new J("Solution A")]}),new G({spacing:10,children:[c,new J("Solution B")]}),new G({spacing:10,children:[d,new J("Difference")]})]})]})]}}}}class mo extends N{constructor(e){const t=new t2(e.shape,{stroke:ao});super({children:[t]});v(this,"path");this.contour=e,this.path=t}makeWidestContour(){this.path.stroke=io}makeDotContour(){this.path.stroke=lo}makeLineContour(){this.path.stroke=co}makeXContour(){this.path.stroke=uo}makeZeroOuterContour(){this.path.stroke=po}makeZeroInnerContour(){this.path.stroke=ho}makeOneContour(){this.path.stroke=go}makeTwoContour(){this.path.stroke=fo}makeThreeContour(){this.path.stroke=yo}makeUnknownContour(){this.path.stroke=wo}}class vo extends d1{constructor(o,e,t){super(new G({spacing:20,align:"left",stretch:!0,children:[new N({children:[new no(o,{loadPuzzle:r=>{this.hide(),t.loadPuzzle(r)},preferredWidth:700,preferredHeight:300})]}),new b1,new Y({spacing:15,grow:1,children:[new y2("Load String",{listener:()=>{this.hide();const r=prompt("Enter puzzle string");r&&t.loadPuzzle(u2.loadDeprecatedScalaString(r))}}),new y2("Load Image (Rectangular Only)",{listener:()=>{this.hide();const r=document.createElement("input");r.type="file",r.onchange=n=>{const i=n.target.files[0];var s=new FileReader;s.readAsDataURL(i),s.onloadend=async()=>{const l=s.result,c=new So(o,e);c.show();const d=await H3(l,c.getScanOptions());t.loadPuzzle(d)}},r.click()}}),new y2("Debug Square",{listener:()=>{this.hide(),t.loadPuzzle(u2.loadFromSimpleString("10x18 .3.1....1..032....0......3.1....02.3...02....3.1...........2011.01..01.......3...2302..........1102...3.......22..03.0322...........3.2....13...2.30....2.2......1....103..2....1.3."))},visibleProperty:q}),new y2("40x30 random",{listener:()=>{this.hide(),t.loadPuzzle(u2.loadFromSimpleString(I3.sample(["40x30 .02..2.23..23...102.21..3..3..3..312...3.3...23.2.2.....1...3.3..1.3...221..2.2.....2.3.3..0212.21..2.2.2....3.2..1....2.12...1220.2.23.1..21.2.112221.13231...12...11.....0..1202.3..131....1.2...3.3....21...1120..3.3.0..2..2..32.2...2.2..2..3.0....1..2....01.10...3.3.1.222.3.2..0..1.322.2.2..112212...2.1.1.....2.23.3.02.1.....1.221....1...1..21.3.2.23....1.....2..2.3....11.3..0.2...2.2..211....2..20...3.321.211.13.2001211..2.32.....3.3..2.......31....23.....2233.32.03121..2.22..12.3213..2..01..2......11223.2.3.3........2.......210..01.2..0..3......2.....0.2130221.20...2...2202.12..2.31.....2.22.1.....11.2..11.3223...1...31.3222321.2.....2......1..0..1.01..233.......2........1.3.2.12211......1..12..3..2213.32..33.3..21221.31.3223.....02....10.......3..2.0.....22.0..2132230.23.133.122.3...23..0....212..1.1...1.3..1.22....2.2..3.....1....11.1.2.12..1...2....323.2.....2.32.2.21.2.....3.2.2...131321..2.2.113.1..3..1.0.123.1.2.1...22.22....2..2....1.2..2..1.3...1.31..2..3..2.1.0..3232...03....1.0...2.2....122..3.1322..2.....03...12...11332.221221.2.11..3.12.1.1113...32.3....2..1.1....2.3.2..21.1221..3.2.3.....3.3..101...0.3..2.1...1.....1.1.22...3.2...231..2..1..1..22.012...21..11.1..32.","40x30 0233.221....2...32.11.21...1....201.3123.....2.23.13023..1....3..21111.22.3......3...1...3.2.31..3.12.2..32.3.2...2...3.3.11..1..2...2.0103..1130.2...3..2..10.1.3.1.21.1...23....2210....12...2.31.3.0.1..2..2..022...3..1..2..1...322..2..0..32.31..23....3.3..1.21.0..1.1....23..13.32.2.11.11.022131.3....2.111121.20.13.2.2.22....2..2.....30....22.....3..2....22.3....2..1.21.23..1.21.0..21.22.1..1....2310123..21..3...1......1...3..31..332022...131.2...11.1.2.2131.1.3.31...1.212....2.......2232.2.2..03..1.2.3232.......1.3.211.11...21...3......1...22...22.322.31..2..1102...32.2..21..2.32...2222..2..22..1..1323...13.1..12..3.11...2221..3..23.322.22...12...2......2...23...32.120.3.2.......1011.2.1..31..2.3.1112.......3....032.2...21.0.1.1131.1.3.33...1.213...222221..23..2...1......3...2..21..2122332....3..0.23.12..2.12.2..12.23.3..2....1.10....2..1.....23....11.....2..1....22.1.1.12.21.331212.1....1.232310.21.22.0.21.12..22....1.0..1.21.0..1.2....33..21.31..1..2..323...2..1..3..0...322..2..2..2.2.3.32.2...13....3332....10...2.20.1.1.2.23..2..2...1.3101..1322.3...3..0..23.1.2...2...2.3.10..1.32.1..23.2.1...2...3......2.32.22132..3....2..03113.31.0.....0111.123....2...31.21.32...0....100.3112","40x30 02.3.3.3.22..1.3.3..3321....12...232.1.3.3.2.22.3.13..3.2...2.2..31.0..223...2.212....3...3.2.3.2.1.3.2..2..231...123.3...2.2.2.2.11.1..13.1..21...111.1.1..1..1.3.....3.2..2.32...1....2211..3...12.3..1..3.2.13.2.1....0.112..2...31.3122....3..3..3222.1.....32.2.33.2......1.1..2..33.......23..212132..3....212.23.3..320.2.13...3..2..3..12..2212112.2...1..22....3...2.20.3..12..3...2..01..1..2.11..22.3....3....302.30.3221.22...22..1...2..2..2.23.2..1....23......0..11131..233..2........2130..1.2.1.23..33.3..322.2..2...33...1.2....22.2.221.31.2.1.......3..2....2.21.122..2.121...2..3..1.1.1013...2.3....3.3...1113.3.1..2..2...311.1..222.13.3....1..3.......2.2.01.213.2.22....2.2...32...1..1.201..2.02..32.2.1.2..3122........3..222..13223..0......11....2..1.33.1..0..3...1..22...12.0031.11.111....0....2.32..31.1..3..21..0...1..32..2.31.3...3....31..3...2.2221213..33..1..1..1...32.2.223..2.22.322....3..221211..31.......32..2..2.2......3.31.2.12.....2.0023..2..3....3131.21...2..022.1....3.1.21.2.1..2..1.02...3..3022....2...12.0..0.3.....3.3..3..2.1.312...23..2.32..1.30.1.2.2.2...2.222...120..2..2.1.1.2.2.0.1...3....332.1...312..1.13..2.1...2.1..12.2.32.2.2.2.2.122...33....3233..1.2.0..23.3.0.0.11","40x30 11..23.32..2..2..3.3.02.2.1.2.2.220..33....1.31.0.2232022..1...12.2.1.2..3.30.0..2...3.3...3....32.22.201.0...2.2.0.....2...2....3..121.2..3.2.10.1.2.2..20..1...32..3322.1...3.2.1.1...232.1..1....2.3..3.3......0..2.31...11...223223..3..21.1.1...33.301..11..0.1.233...1....123..311.3........133..3..02...12.32...1.1..2.3.2..11232210.01.....32..2.11.22.2.2..3............23..12.21.1.2..33..3.02.23.2......2.33332..2.2.11.132.....1.2...2..2.1.3..1..121..111..1..2...323...31221..2.1.3..101.2...3.....3..2.3.11..1...3.2.2..1...0.2..2.11..11..1.22.....2..2.....0.001.2.2..3.23..2.2.32....312113..2232..3....2..3221..001111....32.1.2..21.0..3.1.311.2.....2..1.....22.1..22..22.3..0.1...3..3.2.1...1..03.2.3..3.....3...1.332..2.0.1..21221...221...2..2..211..320..1..2.2.0..2...1.1.....212.11.3.2..20233.2......2.02.22.1..21..3.2.02.11..10............2..1.2.21.12.2..23.....23.01101122..3.1.0..1.1...12.23...12..3..212........2.123..311....2...322.1.1..12..222.13...1.3.22..2..222312...21...21.2..2......1.3..2.1....1..1.211...2.1.1.3...3.1211..03...1..23..1.2.2.32.2.2..3.322..2....1...1.....2.2.0...3.312.31.12....2...1.2...3..1.33.2..1.2.2.31...2..3112222.3.12.2....11..223.1.1.2.2.23.2.0..2..3..32.33..33","40x30 1.2.212....3233.2.2..3.3.1132....132.3.31.2.1.3.23212..11..32..23..21121.3.3.2.22..222.2..3.1.2..12..21..1.2.1..1.111..1..1...13....1.2.11....03.3.3....33...3..3..2.....31....2...31...2....22.....2..22131.3131.23.2211.2313.1103.12.2223.2222..2.23.3.202..1..0....0..2..323.3.31.3..2...2.........1.2.0221.3.2.........3...22.32.12.33.323221......121022.22.21.22.3...1....1..3...222.21.122...1..2....2.....1.1.1.3..3.1.33.1..2.22.2.0..2.1.1.2..222210.22....2..113..223..1....22.3221222...2.123.1...03...22...11...0.222.1...12.1..2...0.311..232..123..231.3...1..2.3..2121.2.3.1.32....32....12.1.2.1.2201....2221.1.2.1.02....20....13.2.3.3.2212..1.2..3...3.122..213..132..223.2...3..2.30...1.120.3...32...10...22...1.223.1...1013123.22....2..223..102..1....01.222212..3.3.2.1..2.2.21.2..3.21.2.2..2.1.1.2.....1....2..3...233.23.131...1..3....3...2.23.20.21.112211......232231.11.21.11.23...1.........2.0.1232.3.1.........2...1..2.21.1.121..1..1....1..2..022.2.32.2..1113.2323.33.3130.1312.2221.23.3232.22231..1.....22....2...21...3....11.....3..3..3...02....1.1.32....21.2.2....13...2..1..233.3..1.2.2..22..13..2.3.2..1.112..32.1.2.1.12220..12..32..12..31121.2.1.2.33.2.231....2220.2.1..1.3.2132....232.2.3","40x30 .122.221.322.22.332..321.22.110.122.332..11.....11.1.32..2....3..22.2.33.....11...0.2.1.2..2..3.12.21.22.1..2..1.1.1.1..33.332...3.2.0.1.1.32.1.0.2.2.3...323.23.22.2..1.122..232..11..221..231.1..1.11.31.22.1.3..13....2.21.2....21..3.2.21.23....122.0.131..2.3....1.2..233.3.312....3.33.....1...02..........11...3.....23.12....110222.2.0122....2321.3.221312....01.2...3..3.11...3..21..1...22.2..2...3.1.1222.1....1.2.1.11..23.0.1.2....2.3222.12..1...02.221.22.2..3.32.212.33...1..11...2..30.22.23201......20222.11.20..1....0..3.....2..................2.....2..1.11.23.022..0..22.012221.31..1..130.21.2321.01.113..1..12.212113.22..2..221.22.32.2..2.....3..................2.....1..2....2..22.21.33312......32112.22.12..1...22..1...33.222.22.1..3.12.220.11...2..32.3210.1....1.2.3.33..32.3.0.2....2.2313.1.2...3..1.21...1..01..0...20.1..0...2.21....311221.1.2322....1101.1.323223....21.12.....2...12..........22...2.....22.0....221.3.210..1.2....2.1..122.2.233....12.31.2.2..11....1.13.1....22..2.2.13.31.21.2..2.122..223..12..113..212.1..3.12.12.112...1.0.1.2.3.31.2.1.1.2.2...122.32..0.2.1.1..1..3.02.22.13.2..1..1.3.1.2...23.....33.3.13..3....0..12.2.22.....13..222.231.122.23.223..323.23.222.223.322.","40x30 12....23.20.13.11.2..1.12.12.32.22....2131.22.13.2.3.2..2.0..2.3..2.2.1.32.22.22.2.21...0.........1221.........2...32.1.2..2..3.2322323321....3333212232.3..0..233...2.2...0.....22..21.....3...2.2...11.2.30...32.2..2...2..3...2..1.32...12.2.320...10..022..32.1213.22..332..23...2201...2.22.11.2.313.3..2.332.1.11.21.2...2.202.01.3.222....0....3....213.1.22.322..1.2........132.3.2131.0.213........2.2.2...1..1.3......2.0..2.2......1.1..3...13221.22.2.12.2...22..22...1.10.1.33.0112...113.23.2.12201..13..13222.3.21.212...3211.2....3....2..3..2..3....1....2.1112..2..2.332.231.1.2.32.2.2.112.112.2..3....1..2.212.022.2.3.31.2.2.231.222.0..0..3332.2....1....3..0..2..1....1....1.3232...122.11.1.22221..32..22322.3.22.222...2122.23.1.22.2...01..20...2.30.2.22.32112...2..0.2......2.1..3.2......3.2..1...1.1.1........311.1.2112.2.111........2.2..212.22.2.222....2....1....323.0.11.223.2...2.33.23.2.122.2..3.221.1.21.32.3...3213...22..212..23.2332.02..011..12...112.2.01...22.2..2...3..1...1..3.23...22.2.23...3.2...2.....21..22.....2...1.1...322..3..3.2123121322....3321322331.2..2..1.2.03...1.........2312.........2...11.3.21.23.23.1.2.2..2.2..1.2..1.2.2.31.23.1231....23.23.23.21.3..2.13.32.32.11....22","40x30 .1.3...21....2222.3..3.3121....22...2.3.2.31.1032.13.1....1131....2.22.1231.23.221...0.2122..1............1..2111.2...12...1113.1..2331313....1212112..2.1223....30.2.1.22.21.....2231.....23.11.0.2.12.1.2...22.2...33...2..1...32...2.22...1.2..1.2.12..122..1..0012..2..222..31.1.3.....31..2.32....2..1222..1....21.2..01...32.1..02....13323..22..21323....21..3.2212.21.3...21...1...31...2...13...2.20.212.2....23..2.2.32.1222.12.2.2..31....3.2..2..12..2..1..............1..2..23..2..3...1112..1221022..12..2222211..2131...12.2...1.1.1...2...3..2...1...1.2.0...2.32.2..2.3..11..3..1.12.1..2..22..2.2..3.23.2..0.2..02..2..1.32.0..1..13..1.1..0.21.2...2.2.3...3...1..3...1...2.3.2...2.21...2121..2131232..32..2113323..1311...2..0..03..1..2..............1..1..32..2..3.1....21..1.1.22.2121.32.2.2..31....1.011.21.2...12...3...23...1...23...3.32.1001.2..20....02223..32..31021....22..2.22...21..2.11....1..1223..0....21.2..12.....2.1.21..103..1..1322..1..111..13.3.2..1.1...21.1...13...1..3...23...2.12...2.2.31.1.0.32.10.....1232.....21.32.1.1.32....3232.1..0221112....1221331..3.2322...12...2.2223..1............2..3221.3...113.32.2222.20.1....3113....3.12.1122.21.0.1.1...22....2323.3..1.3212....11...1.1.","40x30 .2..1..1..2..132..1..2..201..2..1..1..0..32.31.2313..3.2..1300..3.2..2021.31.12.1..3...1..2..112.2.21.1.222..2..2...3..112.222...23.2....2....1....1.13...322.01.1.3...11...32.02..11..10.13...12...3.1.2..1....2323...0...32...3...1232....1..33.2212......111.121..221.122......2211.2.....3.32.3332.13.2..2.33.1112.21.1.....22..1...220....12.2..3.21....223...3..11.3.3.22.....3.3.2.3..2.3.1.1.....22.3.2.1132.21223..1.2.222..222.1.3..32022.1113.....2..2..3.1.3...10...2.2.2..3..2.....1..1.2.23...1...2......3...2...32.2.1..11...2..1..2..22.31.23.21.23..3..2..3...33.1.2.3.3.1..2.03..12..02.2..1.2.1.0.2.23.2.3.2.2.0..2.23..10..22.2..1.1.2.3.2.32...3..3..3..22.32.31.32.11..1..2..2...22..1.2.11...3...1......2...2...11.1.2..3.....3..2..1.1.2...23...2.3.3..1..1.....3222.31101..2.2.223..122.2.1..12231.0202.3.2.20.....0.2.2.1..1.2.3.1.....11.2.2.32..2...322....12.2..2.11....113...2..22.....2.12.2101.12.3..3.22.1201.12.1.....1.3232......212.123..212.213......2121.32..0....2020...0...32...0...2212....3..2.3.0...23...22.10..10..22.12...03...2.3.21.113...21.1....1....3....2.22...221.122..1...1..3..231.3.32.3.231..1..3...1..2.13.12.1222..1.2..2311..0.2..1202.13.13..2..3..3..3..122..2..3..121..3..2..1..2.","40x30 2...1.13..22.311.22...221..13.3.31.3..1.3.3..022.2...233.20.2..111..3.21.22..2.21..2.1..3.23.....3..2131...2.....22232.223....1.3...1..21.1..0...3..11.22....21...3.321..122121.21.1...12.2.322..2....12........22.2...3....2..021022.3.2.2...3.2....22.1122..0.202.1131..1.211.1.2.2...2.3210.1..3...1..32.2.....0...23....0.12...1.....1113222..0.1..23.2...2..11.3...3.32..1.2.1......2...3312.201.1..31.113.3....33..12..222312222.10.1..1.1.22..112.....212.321.213.....3..2...1.12...1...33....3.2...1..2...1..1..21.01.1.232.3..33.011..23..1..1111....1.2.310..2.20.2...3..3..20..1213.0...21...2.....2.....3......1.....3.....0...23...0.1122..21..3..2...2.12.3..222.1.3....3223..3..32..322.12..2.331.1.13.32..1..1...2..1...2.0....32...2...33.2...1..2.....221.321.201.....121..21.1.1..2.23.232203222..32..21....3.133.23..3.221.2221...2......2.3.2..01.2...1.22..1...2.12..2.1..2232222.....1...12.1....10...3.....2.10..2...2..2.2232.1...2.2.1.012.3..1221.112.3..3222.32....2.3...3.3.0.222132..2....0...1.21........22....1..122.3.22...2.20.312222..123.1...12....23.22..1...2..2.01..2...2.3....013.31213.....3...3122..3.....11.2..1.1..32.2..22.31.2..312..2.23.122...3.132..0.1.3..0.22.2.33..231...23.132.22..23.1...3","40x30 212.3232..31.1.2...23...3.1.32..2231.321..1..21.....3..2.221112.1..2.....12..1...3..1.1...32..112.2..3.222..11...1.1..1.132.1...0212.22..21..21..22.1122...2.12312..232.3.2..122.211323.222..2.2.211..23....3....1.132...3....2...302.3....3....23....02.03.31.22.1..2.21.23.21.21....223.....2.2..13.1..323223..1.22..2.1.....22..32...2..3.112...21...223.1..3...31..2112.2232...2....33....23....3...0202.2133....2.0.11..101..1..1..113..13.3.2....222.1.23....23..23.2..3.32..23....12.2.20...321..222...2...3..2...2...201..322...1.1..02....1.222...11...232.0....22..3.30..3.2..1..2.3.0...10...2.2.1..2..2.2..21..1.2..3..2.3.1...11...2.2.2..2..2.1..01.3..22....1.101...31...113.2....32..3.2...121..323...2...3..0...3...321..011...22.3.23....11..12.3..2.22..31....21.1.112....2.2.21..232..3..3..123..32.1.1....2233.2221...1....11....23....1...2123.1211..13...2..1.221...13...231.1..2...22..13.....2.1..23.3..232111..1.22..2.1.....132....23.32.22.11.2..3.21.31.23.22....23....2....3.212...3....1...312.0....2....32..113.1.1..312.311022.321..3.3.102..31211.3...2112.21..22..13..22.2222...3.023.2..2.2...23..112.3..2.100..22...2.1..3...1..01.....2..2.023233.2..2.....32..0..323.2233..11.3.3...11...2.2.33..2101.213","40x30 21....3.1.2.1..2.2.....3...22..21...12.1....1..21.22.2.1.2.23231..32.2..2.13......3..321.22..2.131.0.1.221.213..32...3..11.2.1..11..22..31..31....23...1.2232.13..0.1....3..3....2.0..3..12.02201........3.3..23.12...13.20130..11...2..223..1.3.....2.2.2..21.3....2.0..321.....0.1..1.1.1021323..32...2.1.2322..122.23..3.31...2....2.21.32222..2.21.2.31.1..312.3.2.0.0.....2.121.2.2..0.3..11.1..2.............1...2..3...12.32..1.0121.21..302..2.22.0.2220....2322....332....3...03....1....1...1..3.30...1..2....1....232321....22.2.3.232.2.21.22.1..3..2121.2.....221..2.20..1.2.21212.3..21.2......22.22.1..3..3..3.33.22......1.21..1.12211.2.2..31.3..122.....1.2332..1..3.31.12.1.111.0.2.13....232110....2....1..2...21.2..2...0....3....22...2....321....1003....1310.2.32.1..222..02.1222.2..33.20...1..2...1.............2..2.12..1.0..3.0.223.3.....2.1.2.1.213..2.21.2.21.2..21132.31.1....3...11.2..32.122..3012.2.3...23..2312223.3.3..3.3.....332..1.3....3.20..2.1.3.....1.0..123..2...01..02323.22...22.32..1.3........21122.32..3..1.3....2..1....1.3..20.0132.3...21....21..21..31..12..1.1.12..3...21..231.123.2.1.221.2..12.321..3......20.2..1.12..22131.1.1.2.21.21..3....1.31...13..32...3.....2.3..2.2.3.3....11","40x30 2.2102.11.2.13.3.1....2.2.11.1.22.2322.333.2.....12.2.2...1222...2.3.12.....2.21.....2...13.1.1.21....33.3.3.12...2.....3.01202231.1..2....11....1..3.22223120.32.......10.23.02.2....3.01.21.23.......22..2.20..0..221212.12.212221..0..23.2..3.1...3.3..122..2122..3232..123..1.2...1.33.2.21.2.....2..........1.....3.21.3.21201...111212.2..02.02.32..3.213133...123..2...1......2.3...11...2.2......2...2..1...20....2.2..12......33..3.1....13...3..3.1.2032332.312122202121.1102222.1.2..2111..0........3........3........0..1122.3.3..0..22..22..33..02..31..22..2..1.2..2..2.3...2.3..1..0..2..0..3.2...3.3..1..3..1.2...2.1..0..2..2..2..2.2...1.1..1..2.1..1..32..13..22..21..21..22..2..2.3.3120..2........3........2........0..2223..3.3.3212222.021222221112.2110222.2.2..1...01....1.3..32......11..2.1....31...3..2...3......1.1...21...2.3......2...3..122...311301.2..32.02.32..2.222211...22332.1.21.0.....2..........1.....3.31.2.22.3...1.3..112..2121..2022..132..0.1...2.3..0.23..3..213311.32.130232..2..21.2..12.......22.13.21.1....1.23.11.32.......03.22223113.2..2....33....3..2.12232322.2.....2...22.3.0.23....30.2.2.33...2.....23.1.....12.1.2...2210...1.1.12.....0.013.2131.33.2.31.3.1....1.2.22.3.02.1233.2","40x30 2.2.12211.32.2...3....1...1.22.32123.3.323......13.1..1322.32.1303..1.02......113..3.31...2.32...2....1...11.1...32.1..2...20..1.3.1...22..03..21...2.1.2..22....1..02..13.2130...2..2...3123.22..21..1.3..232...3.....22.2221.11.....1...113..3.2.21..3.2.3...01......12...2.1.2..02.2.1...1..31..1..2.1.2222.1.1..3..31..0...3..1202.2..1......13..12......2..2.2232..3.2.3..2....01..3.3..1.3..22....2..2.3.11.21..1.0.2.13...22..31...11.1.3.2..22.32.2.1..2.22.112.1.1..2.3.221.23.2..2.3.22....0.2.1.20....0....0....33.2.1.1....22.11.1.2......2...2..3...2......3.1.21.23..212.2.2.2121.112..223.1223.2.1.313..21..332.1.2.2331.332..022.0121.1.2.112..21.31.1.3......0...1..3...2......2.0.32.33....2.3.3.21....2....1....23.3.3.0....22.2.1..1.21.322.2.3..3.2.322.21.2..3.2.32.11..2.3.2.21...21..13...22.2.3.1..31.33.1.2..3....22..2.3..2.1..13....2..1.0.3..1211.2..2......12..13......2..2.2322..3...3..21..2..3.3.3123.1.3..1..21..1...3.1.22..0.3.3...22......22...3.3.1..21.2.3..212...0.....12.3210.30.....2...133..3.2..22..20.3023...2..0...3111.30..12..0....20..2.2.2...12..23..11...3.2.2..11...2..3.20...3.13...1....3...22.3...20.0..231......22.1..0312.33.1022..1.22......322.3.12232.32.3...2....1...3.13.12333.1.3","40x30 .221.32.2..1...3..3..3..2...2..2.32.221.202.0...2.20.322.2....2.322.23.2...2.201.12.1.1231.212...222111...100.2233.2.31.......1..2.3..311..23..321..2.2..2......11.2....3.3....22......22....2.3....2.12.1..2..222..323...1212...332..111..2..1..1.222.3...21.1.22121322.1.31...3.111.3..2.22212..12.2...0....2...2.00..21233.0..0..2..3.23..231..2..2..213..12.3..1..1..2..3....11.12.1..2..2..2.12.32....2..3.2.1...22.33.1...13131223...3.21.12...2.3..3.211..2..3.31........13.2..1..202.3..3.3.3.212.21.1.1.21..22.1.2.11.113.3.2.3...2..1..1..3.3..2.22.2..2.1..3..3..2...21.0..2....1.21.12201101.13.2....1..2.2133.3..2....0.22.22110112.12.2....2..2.32...1..3..2..2.2..1.33.1..2.1..2..2..3...3.2.3.112.22.3.1.21..12.1.2.32.121.1.1.1..3.222..0..2.23........12.1..2..222.2..2.2...22.33.1...11221132...1.22.10...3.3.3..2....21.22.0..3..2..3.30.12....2..3..2..2..1.21..212..2..3..312..12.2..2..2..1.21113..23.1...1....1...2.32..21201.2..2.133.2...12.2.31110113.0.12...1.311.2..2..2..311..212...1113...112..211..3..1.10.2....0.3....12......31....3.0....2.21......3..2.2..113..33..211..1.1..1.......32.2.2221.322...222113...233.3322.2.23.222.2...3.21.223.2....2.230.12.2...2.212.211.21.2..3...3..2..2..0...3..3.12.212.","40x30 22.2.1.012.2312..3.32.1..2123.323.3.2.22.2...222.2....3.1.2302.1.1....2.222...3.3..1..0..1.31.2.2.1..0.2.2.33.3..3..2..1101..3..3....2.1...30...3.1....2..0..2111...2.22.11132..12.31.21..33223.22.2...32..2.22.3...2...1......2...1...3.32.3..22.323..2..1.3.3.22.23.31.1.2.2..1..113.3.1.0.1..3.2.010...3..2...231.2.3..3.1.2......1102.221...1..11..3...111.1111.....2.1211.0.1.1...1.3....1.1...1.3.2.3212.33.3.3..1....2.2...1011...1.2....2..1.3.2...1..3....30.2.02....11.2.31....3..2......1.31.11.3..23...22...13..1.23.32.2...01.2.....2..1...2..32..3...3..2.....2.111..12.23.21.0.11.3.31.1.21.0.11.22.22..02..32.01.31.3.22.2.23.3.31.2.10.13.32..123.1.....1..2...2..12..3...1..3.....2.22...1.22.21.1..32...12...21..1.21.23.3......2..2....33.2.20....21.1.32....0..2...3.2.3..1....1.2...3223...3.2....3..2.1.32.1320.2.3.3...3.2....1.1...2.1.2.3322.2.....2132.221...1..31..2...322.2201......2.3.2..1.1.111...3..2...130.3.2..2.2.1.2.112..3..2.2.1.31.11.32.1.2.1..2..002.23..2.11.2...2...2......1...3...1.20.1..32...3.03.12222..13.32.11..21111.22.3...3211..3..1....2.1...12...2.2....3..1..3122..1..2..1.21.3.2.2..2.1.3.32.1..2..1..1.3...222.1....1.2.1122.2.1....2.012...3.23.3.3.212.1232..1.33.3..1221.231.0.1.11","40x30 .2...22...222.2.20.22.3.20.3.0.3232...1.3..2.2231.22..3..2.1.1..323.32.1.221.31..02..2....1.2..22023.2.......122.3..1....1.2.232.2.222.2.2..22.3.....2...1.....221.20..2.2...1.31..2..111312.122....112....3.3212111..2...223.2.2.0.22..12222.2..1....2...00213...12.1..2..322.2.12...3..21221...2.1...22..3..313.2.2..12.3.1321..0...2..32.11.2...2..3..22.2.31.........222.12..1...2.1.1..21.0....31...22.2..2.....23..0112...3.22..11.321..221..11.1.3.32....23..2.22.3.3.2..1..2..2.2.2.23.1.2...1...20.12.3....2..2.3.....1022....32...2.123..1..1.2.32.0..1...23..2........3...2..2.2...3..1...1.21.33212.110121.32.231212.32333.12.2...1..2...1.2..2...3........2..02...0..1.22.0.2..3..221.0...11....2312.....3.0..2....2.12.11...1...3.2.11.3.3.1..2..2..3.2.2.31.2..01....11.1.2.32..211..212.21..33.1...2312..22.....3..0.21...20....3.11..2.1.1...1..32.011.........32.1.10..2..3...2.23.32..0...3..3211.1.11..0.1.311..2..31...2.1...12222..2...02.1.113..2..2.22...32211...2....2..0.13223..32.1.2.2.332...2..1332100.1....333....122.212223..1..22.1...0.1..32.221.....2...3.....0.00..2.2.122.3.013.1.2....3..2.222.......1.12212..2.1....2..31..31.232.2.23.223..1.1.2..3..32.1232.1..2.2...2323.2.2.11.3.12.33.2.231...32...3.","40x30 ..2..223..21..3.31.13.32.2..23..322..3..223...02.1..2...2.3..2.2...1..1.21...122..221......123.2.31..21.2.202......122..3.2..21.22..1..2...22...2..2..22.31..1.3..11.1312.322.3.3.3..3.2.2.223.2022.23...22.3.2...2..12.3..12..1.31..3...3.1.22.......02...1.2322..13..1032.2...30......1.3132.1.232...222.13.311...313.3.3311.01..2..22.2..22....3..2....21..3.31..1..121..31.3..2...2.1..21..1.2...1..2.33..22...1.....22.22.3.23..31.3.01.23.....2....2.3..3210.2221.1..10..1.2122.1112..1.2..31.2.1..2.1.300.2.21.1.123.2.3..2.3.02..3.22..2.........21..11.........2..02.3.1.1..1.13.3..223........131..3.23.2..1.23.0..1.21.2..211........223..2.32.2..2.2.2.12..3.........21..23.........1..01.1..01.1.0..3.3.222.3.21.2.223.1.1..3.0.31..0.2..3322.1232.2..11..3.2131.0223..1.3....3.....22.22.2.11..21.1.22.31.....2...13..11.3..3...1.1..11..0.3...1..2.22..122..0..11.1..13....3..1....11..3.23..3..33.3230.3.211...302.12.212...223.1.0131.2......21...3.1032..23..2322.1...23.......31.1.2...1..22.1..20..1.21..3...2.1.22...23.3032.123.2.3.2..3.1.2.111.1103.21..1.1..22.21..3..2...12...2..2..31.12..3.0..211......113.2.12..22.2.302......222..311...12.1..2...3.2..2.3...2..2.23...233..2..323..33..3.32.32.20.1..22..221..1..","40x30 2232.123.3..3.3.1.2..3.3.3.3..0.222.2211.1.2.....1.21103.2....2.12021.2.....1.3...3...2.32.....22.1322.23.....21.1...1..2...1.2.21..312..........122..12.3.2...3112.12....3...21...02...32...3....31.21131113..122..2.2.2.3..1.2.2.2..112..00222....202.02.3221.1.1222.3.2222.22.132....2.....2.......23..1232..02.......1.....3.212....13.2..12........23..3.31....122.2..22..1.1222..3...13...2..1101.2..22..13...21..2...3..2..3132..1..1...2..11...0..2.3.1323.....023....122.....3132.2.1..332.1.1.0.113.....1..3.....232.1.1.3.120.111.3..0..122.2..1..2..2.321..2..1.233..2..2.2322.2.2.2..3..3..1.1.2.2212.2..1..1..2.2122.1.2.1..2..1..2.2.3.3233.0..2..122.1..1..222.3..0..3..2.101..0..2.212.232.3.2.3.111.....2..1.....113.1.3.2.021..3.2.2211.....312....312.....2123.2.2..2...22..2...1..2..2213..1..2...2..20...13..23..2.3232..3...21...2..2313.1..21..1.323....32.3..23........03..2.12....312.2.....1.......03..2322..12.......2.....1....132.21.2132.1.2222.3.2311.33.112....11313..123..1.1.1.1..2.3.2.3..221..23102113.20....0...13...12...12...2....21.1132...3.0.23..113..........122..11.2.3...2..3...1.11.....22.3123.30.....20.2...2...2.1.....1.23221.1....0.23133.3.....2.3.3123.223.2..3.1.3.2..3.1.3.2..2.123.1223","40x30 223.2.1.3.22.223.3.22.1.133.32.3.3.2.113..2.2.12.2.1...1.2....2.1...2.1.22.2.2...3.2.2.....2.12.21.00.11.22.3.....1.1.2.2.32..30222..0.2.3.21.3.3.3..12212..12.3.1.12...3..3.2.2.1....1.2.2.1..3...11.1..1.1...111.2...1..3213..2...0.122...1.2.312.32..1..120.2........3.222..0..33.2223.211.0.23..3.1.20....12.1.2..31.2.222.2........02..222..2.22.1..332..32........22..122012....1203.13.1122....121013..23.21.21...3.32....2.22.1....12.2...11.22.2..1232...1.22.2..2211..1.32.1...1332..2....2.1.2...2222........1213...3.1.2.....11...2...1.....32.22.11.....0...2...23.3.133..3..3.2231..2..3..1121.1..1..221.22.311..3..1.3112..3..1..3212.1..3..220.3.22...1...2.....12.13.32.....3...1...22.....3.0.1...3203........3223...3.3.2....1..0231...1.03.3..2112..2.12.3...1222..3.23.31...2.33....1.23.1....31.2...12.11.21..322011....3311.21.1220....121110..11........12..110..3.11.3..022..32........1.323.1.03..1.1.20....21.2.0..22.1.213.1111.22..3..232.1........3.001..2..13.311.3.2...210.1...1..1221..2...1.223...1.2..2.30...2..2.3.3.2....2.3.3.3..1...12.1.2.13..31223..3.3.2.21.1.1.2..11222..03.3.2.1.2.....0.32.12.23.22.23.3.....3.2.0...1.2.23.1.1...2.1....2.1...2.3.22.2.1..221.2.2.2.10.333.2.33.2.232.13.3.2.2.223","40x30 223.2202.1..11..3.221121.2..22132.1..2.2....0..21.1.2.21..21101230.3....3.2...2323.3.12....13..12........2.2.212.13...1..2..32.3.0..2222.022.3.1.22.31...2.2.2.232...1.2.1.1.........1223.2..133..1...2.2..2.2.311.2.1.12.2.3..12..3.....2..1..3...1.1..2....2..0..3.1..23...22.2....1........01..2..32.22...2..12.....1123.0...2.221...13....21312.3.12.3.112.2..1..3.33..3.1221..222....3.2.....32...3.2.1...2.2....3..2232..3..1..1223.3..3.323......3....22.322..3.1.23.......2212..2.3.011...3..12..2...1.2....20.2..23...3....0.2221...12.32.22..1.332.1.1222..2.2.22.21.3301..13...2..21..1...2......2..0.23..........21.1..2......3...2..12..1...22..2110.31.23.0.1..2332.1.121.2..21.01.31...2012.0....1...22..2.13....1.3...2..32..2...232.3.2..1322.......33.2.3..212.21....1......133.1..1.2012..2..2..0031..1....3.2...2.1.0...31.....3.3....102..2321.2..23.1..1..1.323.2.22.3.31223....22...103.2...1.2222.....31..2...13.12..3..20........3....1.31...22..3.2..2..2....2..0.1...3..0..3.....3..22..1.2.33.2.3.212.3.0..2.1...1..201..2.1311.........2.1.2.2...220.2.1.3...13.13.2.1.232.3121..2.1.12..3..3...12.132.2.2........22..23....31.1.1230...2.1....3.32102222..22.0.3.32..3....2.3..3.21322..2.332133.1..31..1.3232.222","40x30 .22323.3323..1.1.13..13.2.2..1231.22232..1..1....2.2..2233.12.3131..3.2....1..1.2..2.12.0..1...2........3...2..1.21.3..113......2.22.2.2233221312.2.01.1......22..12122212212.2122....2223.31011322231..3.2...2....22....21..22....21....2...3.13..2333.3.1..212.12..32.212..2.2.2121..131.3..1.2...2.3..2.21.2..2.1...1.3..2.3223..02..1.222222.1....1.223112.1..12..32...3220..2..2..2.2.32.0.3..2..2..2333....23.2..3...0223...0..1...3232...1..1.22.31....3..0..1...21113121...2..1..2....12..2.20..22....2..........2....12..22.1....3.2.23..231..3.21..23.2..332..22.2.3..21.22..1.....23.3.2..0.1.11.....2..00.1322.22..3.....12.1.2..2.3.23.....2..22.23..1.3.13..322..1.22..21.1..131..10.1.0....1.32..01....1..........2....23..33.2..12....2..3..1...13222321...2..1..2....22.21.3..1...1131...1..1...2322...1..0.21....2223..2..2..3.1.12.2.2..1..1..2112...22..01..2.112222.0....2.002223.3..32..1132.3..2.0...2.1..1.22.3..0.1...1.2..2.323..1231.1.1..200.22..11.332..1.2.3110..23.1...1....22....22..11....02....3...3.2..21321223123.3221....1232.01232222231..31......1.22.1.1311122222.1.13.2......312..0.23.1..2...1........2...1..1.22.2..1.1..1....2.1..2022.33.2312..1.1....2..1..32223.3223..1.2.32..21.3.3..3312.33221.","40x30 223..3.1..2.22.321....220.13.2..3.2..323.....1.2.1113.1.3..10..2.3.1313.3.2.....132322.3..1..12.22232202.13..1..3.2121212.1......323.1..1.2221.2..2.103......3.1.1.2.121.2...2.0..3..1..1.2...2.133.2.2.1....3..21.10..221.22.312..12.33..2....21.22.12..2.1222..2....1..1221.2..32.21.23...23.1022......12..32......2131.11...32.3.2.1.2....20..2.12.1..11....2.3.2.2.3.2..31.2.3.1.1....3..2....1.1.2.1.11..2.2...21...1...1.1.22..23.3.2...2...12...1.2.32..21...210..30..22..121...13..21.2.33....3.3.2..3.3..2..1..3.1..1.0.1....232...20.011.1...1.322232.2...3.111.23...2..1..3..01.1.3.0.2....1.2.2.3.22..1..1....3..1..23.1.1.2.1....3.1.3.2.22..3..0..1...22.202.2...0.112223.1...2.122.21...121....2.2.2..1.2..1..2..1.0..3.3.1....23.2.21..20...322..22..22..323...31..23.3.1...22...3...2.2.33..11.2.0...3...13...2.1..23.1.1.2.3....2..2....0.3.1.1.22..3.3.1.2.1.1....31..2.13.3..22....2.1.2.3.32...13.3222......32..11......2212.02...22.32.22..2.2222..1....1..3022.1..31.32.32....1..32.11..312.11.131..21.10..2....3.1.1.132.3...2.2..3..1..2.1...2.022.1.1.2.2......301.1..2.2132.2..1.011......3.2312223.2..1..22.22223122.22..3..2.110212.....2.2.1132.3.2..13..2.2.1112.3.2.....131..3.2..1.32.211....113.21.1..2.3..232","40x30 2.23..3323...23202.12.22113...2132..21.130....111..2......2..0......3..121....13....1....2221.1.2..12..2.3.2103....2....2.3..3...3.211.210....112.120.2...3..2.132.1.0...2.2.2.221.20.101.1.2.0...2.0.23.23.21.2.2.22..02.2323.20..12.1.1.11.32.3.0..2.222....3.1..21..3.3....031.2..1.3....112...1..3.21......21.2..2...202.....202..0..21.2102..3122..2322.11..2..322..123.22.1...2...20....12...2...3.32.221...2..1.3.323....3..11..2....121.3.2..2..212..12.1...112222....312122...1.12..313..0.2...2223.1.1.1.13.2.2.1.2231...0.2....2.31.3..2.1...2.3..1.3...3.0..2.12.2..32....3.2.2.1.11112..13113.2.0.3.1....2312....2.1.2.1.10012..12212.2.1.2.2....11..1.20.3..2.1...1.1..0.2...1.3..1.31.1....1.2...1212.1.2.3.31.2.1.3.1021...1.1..310..11.3...131221....231213...1.20..223..1..1.1.312....3..22..3....131.2.2..2...231.22.2...2...31....13...2...3.32.223..012..1..11.2221..2302..1221.22..2..322.....002...0..2.21......12.2..1...222....2.1..1.122....1.2..31..2.2....121.3..2.3.31.02.3.3.22..21.0222.11..03.2.2.23.22.31.3.2...2.0.2.211.22.111.1.3.3...3.2.313.2..2...2.232.222....232.313.2...3..1.2....0....2122.2.2..31..2.1.2201....1....32....222..2......2..3......1..223....113.32..2233...23131.10.23222...2132..33.3","40x30 23.0...2...233.2.322312.200...2..2.1..22...2.02321..21.2...2....2.2313.3.2.1...1.3..3..13..2..2.20.2223...1..31.213...3..213..1...2....21.0.....3.2.1...32..012.3....3.2..23233223.12...1..1.....2.1...3.0.1..20...2..2.2.2.2.31..21..13...1.....3.23.3.2...2...1.122.223.1..31.2.2.1.........1..30..2.1.1..1131..1.2.1..21...021.3..2331.21133...12...21322..2..11.23.2..1..0.......2..1131..1...1..12.1.....11.310.11.11.1.2.00..112..1..1..32.223..11.3.22.....2130..002...2231..21322..2.23.2....3.3..212.0.0..33..1.1.2..1.1.2...2.32..11.1....0..3..1..1.1.22.13.3..22..31....22.2.3210..1.2.22.2.122.3.1.2231...13...2232.2.3.101.1.32.2.2..2222.1.22....11..21..1.21.22.2.3..1..1..2....0.22..12.3...2.1.2..1.1.2..12..1.0.322..3.1....3.11.1..13121..2312...301..3222.....12.3.31..233.21..1..1..222..21.1.2.23.12.312.22.....2.22..2...2..2321..2.......2..2..2.21.22..1..12322...02...22212.1220..1.132...23..2.3.2..1101..3.2.1..21..2.........1.0.1.32..1.233.221.2...1...2.2.22.2.....1...12..12..12.2.3.2.2..2...31..1.1.2...3.3.....2..1...22.11122311..1.1....1.213..22...3.3.2.....3.12....2...0..123..1...313.31..2...2222.22.1..0..12..2..0.3...1.2.0.3222.3....2...1.12..30123.3...23..3.2..3...223.321313.3.213...3...3.31","40x30 .23.21..2...2231.2231.122223.12.3.1.2..1...3..31132.3..2..2.23.3..3..111.1.3.2.0.2...2.3.2...11.0..2.2.1...2..2.32.....232....1..3.2.10....2.....23.01...12..21....01010.....3..1.3.2.212.3..2.032..3...12...33.12.1.1.2..2.3.21.2.1.....0.1.2....1.....3.....3.221.3..2.3.1.3.0......12201..3.3..201.03.3.11.22..22.....31.21.....3.21.22..1.1..2..1.2..2...1231.1...2213...3..2.33.3..1...13.12.123..23.1.2.120..0.3...1....1...30.......2.0...12.....2.22.111.2232.1.2...1.12.2..1.3.2..3.2333....2...21.21..211..11...223.....1.1.........11......1..11.113.2...323..13..1..33..321..212111.2.001...1..1...11.3.00....01.3.02...3..3...132.1.332212..111..12..2..20..111...1.232.13..0......22.........3.3.....021...31..121..00.12...2....2310.2..2.2.3..0.11.3...3.1.1212.213.21.0.....13...1.0.......13...3....1...3.2..100.3.2.01..213.23.21...1..3.22.1..1...2011...2.2112...1..2.2..3..2.1..31.32.2.....12.21.....23..23.23.2.21.132..1.2..12020......2.2.2.2.1..2.231.2.....2.....2....3.2.2.....2.3.23.2.2..3.2.1.12.33...13...1..113.1..1.221.1.1.1..3.....22032....32..21...32.21.....3....02.3.3..2....222.....22.1..2...2.2.2..2.22...2.0.1...3.2.1.2.2.232..2..2.23.1..1..1.13112..1...2..1.3.2.22.213223.1211.1022...1..31.33.","40x30 .2.3...22.0.13...222.2....2.....21.2.3..3.3122.131..........1.103231202.2....202.2...12....2.2122.2..2...0.3.121.31..2.312..3..11....102....3.11220....1.22.1.13......21..13.1.2.2.3..2..........1....2..21.3.13..3.1.32.2..23.22..3220...31...02.....2...222...31.2..1..2.22.3.3..02.1....1..22..322.0.....230.23.121....3.21.3..32132.2.....2.1.23....03....322.2....21.....121..2212112.1..1..211.1.21..2.1.1..2.1.0.2.2.22.2220.2...13...2223...312.2.....2.2.1......3....1.211.3...2.......3..23.3.33.23.3.3.002..222..213...11.23.1..0.2.1..2.1.........1.2.3.....3.11...2..33..2.3.3.3..1.1.21.3..22.1.3...3..........2...1.1.12..3.33.2.2..3.2.2.1..12..2...11.2.....2.2.1.........2.3..1.3.2..1.22.33...232..332..311.2.2.31.13.0.11..1.......3...0.211.2....3......1.2.2.....3.111...2013...22...2.1203.11.1.2.1.2.2..2.3.3..10.2.322..2..1.3220232..210.....10....3.232....32....23.2.2.....2.00013..1.12.2....222.22.322.....3.210..11..3....2.22..3.1.13.2..1..3.31...331...3.....13...21...1132..20.21..2.32.2.1..21.2.11..2....2..........1..2.2.1.1.31..12......32.1.12.1....21032.1....012....02..3..222.3..12.123.2.2...3..2.2122.0....22...1.102....3.021203121.2..........122.2323.3..2.0.31.....2....3.223...11.1.20...3.3.","40x30 ..23..2.3.3231..3..31..3..2322.2.2..22..03..2.2.23..2.3211....1223.2..11.3.1..13..1.2..3..2........22........2..1..3.2...2.2.20113..2..202.22.332..3..31322.2.3..2...0...2.........32.........3...3...1.3.31....12...2113......0131...22....02.22.1.331.122.2.2.2.2..1.2.2.2.212.212.2.2.211.213...132.22.3..2.13.221...332.212.2...3....1.3.2...22..32...1.2.3....2...1.23...2023.1..2.22.22.23.1..2.2200...23....2....3...3....32..22....2...3....0...22.23..0...2..3.31.21.21.1..3...2..22.31.12.2..3.1.3121..2.21.3..2321.3.2..2.12.1.1..3..1.13...1.0....2.2...22.2..1..1.2.3.32..32.1.212.1..22..3.212.1.21..21.3..2.12..22.2.221.1..22..1.211.2.33..22.0.3.2..0..3.11...2.2....2.1...22.2..1..2.0.02.1..1.1.1222..3.21.3..1212.1.2..0.23.33.33..1...2..1.22.32.21.1..2...3..32.21...1....2...2....21..11....2...2....2....33...2112.2..1.12.11.12.3..2.0323...23.1...3....1.3.2...20..32...1.2.2....2...3.131.132...210.23.1..1.31.221...311.222.2.3.221.112.3.3.2.3..1.1.2.3.331.222.0.32.23....11...1132......2120...21....02.1.3...1...1.........11.........2...1...1..2.0.23222..3..323.23.013..3..22123.3.2...3.2..3..2........11........2..2..1.2..12..3.1.11..2.3133....1221.3..31.3.2..32..12..1.2.1322..2..31..2..3212.2.3..32..","40x30 2.323.3.3.3.122..22..13..223.1.1.3.312.23.....22.22211..22.12.22..31122.10.....2..1.01...2....2...3..2...2....2...01.1..3..3211112...0322.1021.2121...2213202..12....2...1...2.12..11..31.2...1...2....3..212..1.3.3.1321..31..2222.3.1.2..112..2.2.1332.1.22...2......3...31.3.2322.1.3.2..........2..1...23...2..2..........0.20...2221.2.2.1..323212..2.3.3.2113...12..01.....3.1..2.22.23.32.2..1.2.....23....12.001..3.120..........213.2..201.12..032.....32...3.3.22..22.1.2...31.....2122.1.1.1.2.2...0..3....2..1...3.2.2.3.2.22..12..213..23..2..11..3..21..132..22..12.2.3..0..2.1..2222..0212..1.2..0..2.1.32.0.2..2..1.1..3022..2331..3.3..2..2.1.13..11..312..12..2..23..2..32..202..01..13.3.2.1.1.2...3..2....1..0...1.3.2.2.1.3211.....23...0.0.11..32.2.2...22.....111..20.123..2.333..........213.1..233.12....22.....3.3..1.23.21.32.3..2.2.....32..13...3013.1.1.3..223322..3.2.2.3222...12.1..........2..1...02...2..0..........1.3.3.1212.2.21...2......0...13.1.1222.2.1..132..3.2.2.3322..22..1223.2.2.2..010..1....1...2...1.02..22..22.2...1...3....13..2222121...2322.2231.2311...3211011..1..1.21...1....1...2..1...1....2...12.3..0.....32.32222..12.11.12..12222.22.....21.223.2.3.3.332..32..23..323.3.1.1.232.3","40x30 2.3311.2..2.3..2.3.11.0.3..1.3..1.0222.110....2..1.32.2.3.2313.1.2.23.3..3....221.1..11...2.0.1.21....23.1.2.2...12..2.2.22....3221.3..12.3..2.02..2.1222....12.1.2.2.3..2....3..2....2..1....2..2.1.3.212.32..2..123..1..2323..3..211..1..22.112...12.22.1.2112........3222.1.22.21...12.3.22.2.1.2....02.12.23....3.2.2.13.1.3..1..2.2.2..32..23....13..12..3.2.2..2..223.3.1.22....21.2.21.1.03....02.3.1.113.2.2.3...1...1..12.22.11..1...3...1.3.2..3.1..123.1.3.2...2..1...2.2.2.123..0.2....01..3..3.0.1.1..20..3.0.3.3..3..22...311.....10.0.3.31.1..3.22.3.2.01.....0132..231.2..1..2.2.20..12.2.3..1..2.122..20..222.2..3..3.2.20..21.1.1..2..3.232..1221.....22.1.1.12.2..3.21.2.2.22.....232...13..1..2.3.1.3..22..3.2.3.2..2..22....1.1..312.2.1.2...1..1...2.2.1.211..2.2..3.2.1...2...0..22.01.23..2...2...3.3.3.212.1.1.11....32.3.02.1.02....32.3.3.122..3..2.2.2..11..13....23..23..2.2.1..2..2.3.33.1.2.0....13.32.21....1.3.1.23.2.22...12.21.3.0132........3232.3.21.32...123.22..2..311..2..1221..1..102..3..31.211.1.3.2..2....2..3....2..3....2..0.2.3.0.12....2032.1..21.1..2.20..2.2120....22.3.2..12...0.2.1.22....21.3.2.2...21..1.222....3..3.21.3.2.2232.3.2.12.3..1....323.2233.0..1.3..2.3.32.2.2..2.2..2.2111.3","40x30 23..3.202.33..2.3.2..3.3.3..13.333.2..21..3.1....0..22...23..21...21..1....2.3....2....131102..2........2..103131....2..22.2.2.......210.211222.111.......1.2.212.2.1121.2..21.012....101.13..1.1112.1.3.222..23......20..2..1..03......11..312...11..3.1.323...31.22.23...311.2.1..32..3..12.....20.21...1..3...01.13.....22..1.11..222.......01..21..33.......120..31.33.12.23312.21.2312222122.32.21213.22.23...13.2..2.23......12......11.1..2.21...22...1.2.22...31.0....3.31...00.1.2...22.2.1..12.3.21...01222012...21.1.22..2.3..1.2.....1..3.2..1....2..3.3..3.....1.2..1.223231.3..0..2..23..1..1..1.211131.2..3.132223.2..2..0..01..2..3..1.101232.2..2.1.....0..1.2..3....2..2.2..2.....2.1..3.2..13.1.12...13131212...33.1.33..1.2.31...3.3.33...12.3....2.11...10.1.1...21...11.1..2.12......32......23.3..1.22...32.21.12032.22.1131213232.31.22110.22.12.21..212.......22..23..21.......232..12.2..22.....23.32...2..1...11.10.....32..2..22..2.1.020...22.20.11...121.3.2..23...222..22......13..1..3..22......01..222.2.2.1213.1..31.132....322.21..3.1220.1.231.2.2.......011.112112.222.......1.1.32..3....322223..2........0..323313....2....1.3....3..22...20..21...12..2....2.3..22..3.123.13..2.2.2..3.3.1..22.012.2..12","40x30 23.3.21...3.12.....3.2311332..3332222.2..3...20.23..2.1.111..2302.2.21..222.1.2.1211.22.1.32.22..3.2....21....2.......13..2..0..2..1...22.3.31.2.1.2.3.222...32.2....2.2...3...221.12...32..21...1..2.12..3...2.221.12.3.3..321.2.22.1..3.3.23......1.2..3.0..2..3.23..2.2..0.223...1..31..3.2..3.0.21.20.2..3..2.31.2...32201..31.1.12...2.131...2.12..2.30.2..2.1...3..3...1.323.1...03..223..3.3.2...01..1..2.211.222.21.3122.1...13.22.2.311...3..2.3....12.2..1....1..2.021.3.3..32.1..0.....22.22...2....10.32....1...112.21..2..3.21..23.0.0.32012.....1...12...3.3.1.1.2.3.1....0000.01....02.01.2..1.1.0.1.1......2.2.3.1.0..0.22.20....31.1222....2.2.2.3.1.3.1...22...3.....01202.2.2.12..22.1..0..21.222...1....12.13....1...33.03.....3..1.23..2.1.022.2..2....2..3.12....0.1..0...222.2.23.31...2.3122.12.012.211.2..3..23...0.2.2..223..21...3.310.3...2..3...1.1..3.02.1..22.1...312.0...02.0.12..21323...1.23.3..2..2.12.13.2.1..2.2..33..2...213.2..2.0..12.1..1..1.1..3.0......22.1.3..2.32.2.121..2.2.13.211.1...2..21.2..1...21..10...12.123...2...3.3....2.31...310.2.3.1.0.22.1.22...3..1..2..3..22.......1....23....1.2..21.21.2.23.2210.1.1.222..22.1.2022..123.2.3..12.22...2..2.1320011..2222112.3.....32.3...23.3.21","40x30 23332.11.1.2.23.1.2323.1.22.2.3.11.212232...1.2.22211...2.2222.1...32122.3.1...1..211....3.33...3......1...11.2....322..2.2..2.2222..12..132222..22..2113.1..1.2.3..31.1...33.211.3..3.312.12...1.22..3....32.3..21...1.2.2231.2.1...32..2.21...23.2..2..23...32........21...11..1..3.233.23..2....1..11.1....2.12..2....2..11.31.13..0.2..3....3.3132.2....2..2.2..22.22....323.22.123.2.2..2.2.213.23.311....2.1..3....13...2...2232...3...22....1..2.12.01.212...32.21..12..21.22...132.32.121.22...2.2..31.2.3....1.1.31..1.1...23.21..1.1...02..1...113222...3..11...1.2..21..3.22221..1..32......02..0..11121.2..31..2.32123..3..11......13..0..22332.2..23..2.3...22..1...332233...3..32...1.2..33.32...2.3..33.2.2....0.2.20..2.1...21.221.13.322...02.02..02..30.22...212.33.23.1..2....10...1...1232...3...22....1..1.2....322.10.322.0.2..2.3.211.21.221....33.22..2.2..1....1.1231.2....0..2.3..22.32.12..1....3..12.1....3.21..3....1..22.133.3..3..20...13........32...13..2..2.31...11.0..21...2.2.3312.3.3...11..0.22....3..23.3...33.313.1..3.212.20...3.31..1.3.1..1.2321..22..213212..22..2223.1..2.2..313....1.22...1......2...32.1....322..1...2.2.11211...2.0221.2...21312.2.2...112223.22.1.2.12.3.3201.2.23.3.2.12.31123","40x30 ..2..3.3..33.3.3..2013..3.3.23..3.3..1..21.2..2....1.22.3..11..2.02.1....1..2.312..12.2.12....211..01..023....21.2.23..30.3..2.21..3.1..13....22..0.2..32.3..1.212.011.2.123..1..32..22..3..111.2.122.223...0...23..201..........222..21...0...3..2.2.31...13.3.2.3122.1.3.12...20.1.1..2...31...31........12........00...31...120.1.1..0..1.12..3....3..21.3..1..3.2.10...1.11..20.32..2.1..3.1..02.23..11.2...3...231.22.....122.21.222.....21.201...1123..30.22.22213...32...32211.21.32..0221..2.2.12..2.....221122.....3..21.0.1..3...2.....1..2.21.13..22.23.2..0.....2...2.3..31.2..113..2.3..2.2..212..2.13..1.31.3..32.1..112..1.1..1.1..221..2.11..2.3...0.....2..1.31.33..23.21.3..2.....1...3..1.3.22..2.....122311.....3..22.1.2..2232..21.12.01231...11...30202.22.22..1122...231.11.....111.20.312.....21.221...1...2.32..32.30..3.1..3.1..23.32..21.1...32.2.1..3..1.12..3....1..22.2..2..1.3.322...12...12........22........23...12...1..1.1.13...21.2.2.2231.2.2.13...22.3.3..1...3...00..222..........310..13...1...233.212.3.023..3..12..23..2..212.1.231.222.0..2.13..1.2..11....22..2.2..12.2..3.11..13.3.20....211..13..112....22.2.31..212.0..2....1.13.3..22..3.31.2....3..3.13..3..3.2..00.1.1..2221..1.3.33..1.3..1..","40x30 311.1.222.3.2.1..2.21.2..2.0.2.110.1.123.33...0...2...02.3.11.1.32...1...2...32....31..02123.3..1..32..3..1.12231..31...33..2.2.3.2.231212....122222.2.3.3.3..03.1....3...3.213.10....22.211.3...3....3..3.2.22.2..1...1.22..13.1...2..3.22.2.1..1.0..3.1..2.22...0122...21.2..1.2..0.3.3.221.20113.1..10......12..2.12132.221.1..1.2.2....21....2....2....23....1.2.2.....12..2.2..1212213..3221213..2.1..23...2.232....2.....23..23..32.....2....222.3.222..2212.223....2..1....323.3212..122...2..1..12.....2123323101.....22..2..2..2.2.1112.13223.3........2.22222.2132.2.33...1..3...1..2.2..32..1.2..1...3..1...32...2..1...2..3.1..20..2.3..2...2..1...33.1.2111.12221.3........1.11322.2311.2.2..2..3..32.....2222201113.....31..1..1...222..3122.323....2..2....113.2123..122.3.112....1.....12..12..12.....3....013.3...11..2.1..1223122..2331323..1.1..11.....2.2.2....30....3....2....32....1.3.2..2.231.13231.2..02......22..2.22133.323.2.2.1..2.1..2.23...2222...22.1..1.1..2.2..2.3.13.3..1...2.22..32.2...0..3.12.3.1..1....3...1.221.12....21.112.2...3....2.32..2.2.2.2.032323....323112.1.1.2.3..32...10..32223.2..1..22..2..2.23322..21....23...2...2...12.2.11.1.33...1...3...21.323.3.222.3.3.1..2.01.1..2.2.2.211.3.113","40x30 31.1.231.1223..1..122...1.231232223222.1.....132.2.1.0..22132.33....23.1222....12121.11...3..11..10...2.22.111...22.01....3..32..1.0.22..11322..02....1......2...13..1..22.12.11.......113...332.222...3..3..321.312.....0.21...2.32.1..2.1..2..2.20.122....1..2..3.1.32111..222.32........3.2.2..2.212.2.220..22..20.2...1.23232221.0....22.3.2...32.....11...223...22....1...222.3..1202..2.21.3.3..332..3...2.33..3.132231.......22...30.3.0...2.0.....2...3..2.22.3.11....22.2.1.....1.11.223...2.11...3..2.11.21121.1...1.113..........1...2......3.0..3......12..1221..2.3.33..23.2.232211.22...3...11.1.2.231323..120132.3.3.32...2...21.122133.1.22..11.3.2..2312..02......1..2.3......2...1..........112.1...3.22323.22.2..2...12.3...220.33.2.....1.1.12....20.1.22.2..2...2.....1.1...1.2.21...32.......102222.1..11.1...3..221..2.1.10.2..2212..1.232...2....22...321...23.....22...3.1.33....2.33202131.0...3.31..21..112.3.001.2..1.1.1........23.321..33202.3.3..3..2....121.21.3..3..1.1..3.31.0...21.1.....122.013..2..2...322.313...310.......23.32.11..2..22...2......2....12..30112..11.2.2..12..1....12.22...121.12.1...33..12..1...11.31123....2221.23....21.23021..1.2.2.222.....1.312212222231.3...023..1..3232.332.2.23","40x30 .3.1.123.2......1.2..1.2......3.223.2.1..12.3.2.22.11212332..32112022.21.1.1.22.....3.3..2..2....2.22.0....2..1..2.1....223.2...10..3....3....2....1..13...2.203.0....21.02..02313....23213..32.13....1.2232.2.13...22...212231...20...21.3.11031.....3...011132...20...311003...2.....223222..221.3...2..1..3..2...2.121..1111121...2.2......1.2.1221.0.2......1.3...23...2.2.3..102.13...23...21.323..2.1.0...1.2.2....0.2..13.2....2.21..3.3....2.1.22.11.2.20.2...23..3..2..23...0.22.3.21.2.0...1..230..21.20....10.10..222..1...2.2.3.20..1...2.22..3321..31.1...1..23.3.23..3.11..21..2.1.1....3.2.3..22..21.1..23..2.32..31..3.1.3....2.2.2..11..12.0..31.1.20..2...3.11..0322..03.1...2..11.3.3.3...1..311..23.23....01.21..231..1...2.3.22.3.12.1...22..1..1..11...2.01.2.11.22.1.1....3.2..20.3....3.11..2.2....3.2.2...1.3.3..001.32...21...22.112..3.3.2...32...1.2......1.2.2323.1.1......2.3...1221132..312.3...1..3..1..1...2.023..112232.....2...112231...33...212122...0.....13231.2.10...13...312221...21...32.1.1232.1....10.21..21221....23203..20.12....2.311.3...21..1....2....2....1..22...2.032....2.2..3..2....2.31.2....3..1..2.2.....22.3.2.01.12312230..23212111.21.1.2.31..2.1.312.2......1.2..3.3......2.332.2.1.","40x30 .312.0..22.013.12.3.2....2.23..323332.22.....1.222.21.3..2..3122.....211...0.........1.222..3.3.23013..2.03.13..13...322111..12...3.2..........03.31.2..131..32.20..2.1..231.3.1.31..1..3....22.031..1.0...10.2220...11.2.3...21.1.2..13........31.2.2.2...1.1.132.132....301.3..22...12.....3..2.11.1..2.22..323......1310.21.3....0..32..2.2..23..13...231333...222...2..213.1..1..2..03..2...2....2..21.02...11......23..1.3..3.1.1.2....2.1...1..2113.322.113.1.2..3.32..1...21221..2.1.21.2.3.1..3...0.3....2.3..12221.3.2.23........1.1.2..3.1.2.21.2.13.2...3.23.0.21.32......321...1.20...2...2.3..22...0...3.1322.3...3...22..1.1...2...13.2...230......01.13.2.02.1...2.22.2.13.2.2.2..2.2.2........33.2.2.22232..3.2....2.2...2..3.3.0.11.1.2..01223...2..12.2..0.2.210.012.2123..0...3.3....3.1.1.1..2.2..21......22...13.30..0....0...2..22..1..3..1.222..3...231...113221...12..31..1.1..13..2....3.21.2212......122..21.3..2.10.2..0.....12...23..2.122....313.321.1.3...2.1.2.12........22..3.0.12...1.2.31...2211.11...3.3..323.21....0..1..33.1.0.311..2.3..33.32..212..2.33.22..........3.1...21..121122...32..13.21.1..22121.1.2..212.2.........2...232.....3220..3..1.32.211.1.....32.333211..22.2....3.0.12.112.22..2.332.","40x30 3....1.2..22.1.13.12.1.32.233..3323......3...13132..20....1..3...2..1.2..2.123.2.2...1.....21.13..1311.2.21.11...12....1.23.31..2.1.3.211.1...1121.32..2.0.3.32..2.1..1..322..3......3..3.21..3..1..1..11......2..1.3.21.212...2....1213..3.1.3.3.1.02232.3....1..3..33.222...2.1.2.3..1...0.3..00..1211...12...3..3.3.232.0.2.321.2.2.2.2.2.223.30....2..12.....31.....1...1.123..1........3..31.22.2211...1.21.2...1..12.11.021132..2.1.2132.32.1.03.2..3..2.21.2..21..3...0..2......2..3.3..3.1.1....2..1...3.2.13.320.2..3...........1...223.1.1....2.22.1..2.0.20.11211...2.123...2....1.0..2...22.0..2.2..3.12..2..2..01.2..1.1..2.21...2..1.3....2...131.3...10121.11.1.2..2.21.2....2.3.322...2...........1..1.123.31.3.1...0..0....3.2.2..2.2..0......2..1...3..33..1.12.2..2..1.32.2.33.1323.0.1..231110.13.22..1...2.13.2...1112.12.33..3........2..212.1...2.....22.....23..1....22.231.1.2.2.3.3.222.3.3.323.0.2..2...31...1100..22..2.3...2..1.1.2.2...322.22..3..2....1.22123.2.3.2.2.2..1223....2...221.13.1.3..2......23..1..3..2..21.2..2......1..222..1..2.1..23.1.2.2..23.2032...1.122.1.3.1..22.31.3....11...11.12.2.1132..32.12.....0...2.3.312.1..3.3..3...2..2....22..32132...2......1023..222.12.1.32.23.2.32..2.1....3","40x30 3132.23122.220.2323.11..12.311.23.3....2........1...22..3.3..2122...11....2.1.32.1..12.32.2.132..211.302..1.32.22.2......102.2.302....11.3.....2.3113..32132..31....1....01.22....1.2..222..3212..2.11.13..1.132.11....22....32.22...22.2..3.......0.23112..32.210.1..1....1......3..11122.2.1..3..1.2.22.13..3.223.1.1.3122..3..2.....11...3....3.11...1..10.2.221...1.01.222..230.1..2...2..11.......12..3........132..31.22....2.232..1.213.2..1..1.1..2...2323....2.02.21..2...213...12.2.3.33..2.12..321.21.2..2131..3.3..32.1.1.0.2.1..233..1....2.2..2...1..2..1.233.3.12...212...3...3.3232....3.2132...3.....3..2.....2...2131.0....3223.1...1...322...12.1.312.1..1..3...2..2.1....2..111..3.3.2.2.2.31..1.1..1211..2.23.120..11.1..22.3.2.02...132...2..02.31.2....3323...1..2.3..3..2.223.2..132.1....22.11..312........1..33.......23..2...2..3.232..012.12.1...220.0.22..2...20.1....1...02.....1..1..3131.1.0.233.0..23.31.3.1..2..2.2.11211..2......3....1..3.132.21..22222.1.......2..3.32...12.12....30....22.312.3..13.11.2..3212..223..3.2....12.12....2....13..31312..3232.2.....1.11....133.2.113......2.23.22.2..212.221..312.3.11.33..1.12.3.1....22...1312..0.2..12...1........0....1.23.223.22..32.2223.321.22311.3232","40x30 31.3..3..2232321323211322122111..2..3.11..1..20.13..2......12......1..13.22..1...1.2.1..1.1.31122.3121.21222.0.2..2.3.0...311.1..3.....2.1....0.2.....2..0.221..2..32...2213..2.3.2..1.1.2..1221...22..122.31....1.10.1..122132..2.33.2....22.32031.2.11211.2..3........2..2.12222.2.313.2.1..112.22..1.2.1..2.2.2..22.301..1.1....2.3.2....12..13113222..31....2.2.0...221.2...132..210........112..231...2.332...1...3.21.2....21..12....2.21.0...1...3..1112..3....22131..23321....2..2201..12.2.2.322.11.2.32.2..2.21.2.23.021.2.2.13.13..1.32...3....2..3....1...01.3..23.2.3.3.22..212.101.1.21.3.113.231..21.2.2..2.1.23..102.023.0.22.2.313.322..32.2.2.2.00..1.11...2....3..2....2...21.2..02.12.2.2.322.12.2.33.1..3.32.2.22.222.0.3.22..1212..3....31111..22211....1..2310..3...3...2.20.2....12..11....3.33.1...1...211.2...123..132........221..222...1.113...1.1.2....12..13222212..11....1.2.0....3.1..221.32..1.1.2..2.3.3..31.112..2.3.211.1.22112.2..2........1..1.22133.0.22222.10....3.33.3..233223..2.02.1....11.222..22...1221..2.2.2..1.2.3..2120...11..2..121.1..2.....3.2....3.2.....2..3.212...2.3.0..0.2.20122.1321.23132.3.2..2.3.2...3..02.11..2......22......2..12.22..2..12.1..3..3123122221132213123222..2..2.21","40x30 3..2.101322..332.12312.3..1.11222.2...01..2....1.23..1..122..301....1.13..1.122.3.3222...01...32....1..111..2....312...2....212...2.2..2.13.20..21..122...1...3.1....02.2...312.112..2.21..213..200.3..2..2120..323.13.....1......33.1.2111...3.3....22131...3013..1321.2..2.......11..3.1.1.....322..2...21.211..3..123.......12.1.02....2.131....2...1.21.223..11..1.2..2.2..13....32.33...1..23232.1.1.1.3....1.....222.3..1.112.3.20....2..31.3202...3.22221.2..22.2........22..3.3..1.2...2......2....21..2.1.3.11.02....21.12.2.3.22..321.13.31.1..10110..2..2..12.21.2..1.02232.32..2...2..1..21...2111....1...1..0...0....3233...13..3..2...2..21.21232.3..2.33.22..2..0..12231..2.20.21.222..23.1.1.11.12....02.22.2.3.2..21....2......3...3.3..1.3..22........1.03..3.22232.3...2221.22..3....23.3.223.3..2.222.....3....3.1.3.2.32122..3...22.22....13..2.0..3.2..12..321.11.2...1....302.3....11.3.32.......013..2..121.32...2..122.....2.2.3..21.......1..1.2321..3213...22123....1.3...2131.3.12......2.....12.313..1232..3..1.011..201..22.2..120.122...2.11....3.2...2...231..22..23.22.2..0.3...111....3...310....1..212..1....13...11...3222.3.322.1..31.2....113..112..1..23.2....1..22...3.01132.3..2.20221.232..111232.3..3","40x30 3..21.2..11..2322..3112.33.22.22.3.1.33...2.222231.2.....2..1.3...2.122.122.2...2...3.2..223...21.22.1.11.032....1.1..23..21.1..22..12.3..2.3.2.....1..2.1..1..2..2..12...31.22....2.3...123.2.32212..2...1.2.1..22..10.13.2..1212...23.0.311..21..3.1121..2..2.1...022....12.2.11..2.12.1...0.2.3.0323.02.2...22.21...1......2.3.212.11.3..3.1.11.1.213...2.102..1.....11.2.2...20...0..0.3.31.1320311...2..........2.0..2.2.10.1....2.2......31.23.2221.3.1..2..1.22...2.1......1012..0.20.22....3.13.3.33.313...2.1.23311.2...2.2.......1.1.3.0.2.12..3..3..........32....12331.3.22.1..2......3...01.223.31.1.0..3....1..1.2.12.202.31...3......1..3.21.2.23212....22..........2..3..22.2.2.1.3.2.......2.2...2.03232.2.3...222.31.1.01.0....32.23.3..1222......1.1...21.1..3..3.2.3111.13.22......2.3....2.10.1.1..1.2..........2...2222322.22.3.3..2...10...3.3.10.....1..221.3...222.2.22.3.3..1.00.021.2.2......1...22.12...2.22.3032.3.2.3...1.22.1..00.2.32....223...3.3..1..2112.2..23..220.2.02...2131..1.31.20..21..2.0.2...2..21321.3.323...1.1....21.22...20..2..2..1..2.2..2.....2.3.1..3.11..13..1.01..12..2.2....223.31.3.32.13...222..1.3...1...2.312.312.2...1.1..1.....3.223321.2...21.2.2.02.23.22.3331..2212..23..2.23..2","40x30 321.3..1...12..1...33...3..22...2..3.33111.2....20223.22.2....2.32.12132....1.11...3.22.1.1..1.12.2022.23.1..1.1.23.1....3..1.1.3...2..............3...2.1.2..1.10.1...1..3..32.13.13.21.21..2..2...0.21122.0131.122.2..3.2..1.1..1.120.1221.0223.2..1..3.2.23.1..3..3..1.23.2.0..1..1.323..3..2..21.32111....22022.32..2..1..211..2..12..2....2121232222....1..11..1..2..3.3.3...323012..2..1..121210...2.2.3..2...2.2.3.....3.2......2.3.....2.1.2...12.2..11.1.232...02221211...022.1.01..3.31.0...23.1.22.10.3....2.22.21.2.11...2.23...13.....1..3.1.2200.3.2..2.....21...32..10.2.2.12.2.1........1.2.21.2.0.22..23..32.2.2.23.2.1........1.1.32.1.2.23..02...32.....2..1.3.2223.3.2..2.....22...21.3...22.2.22.00.0....1.13.21.2.13...2.33.2..31.2.213...11312002...311.0.23..3.32...1.0.1.....2.2......0.2.....3.1.0...3..2.2.2...213331..3..3..322232...1.2.2..3..0..21..2....3202312222....1..32..2..132..1..3..23.31210....21232.32..3..2..233.2..2..3.2.22.2..1..1..2.12.2.2..2..3.2110.2122.023.1..1.2..2.2..1.231.1222.22301.3...1..1..22.13.21.13.31..1..1...2.12.3..2.1.3...3..............1...1.2.3..2....2.23.1.2..2.33.3111.23.2..2.0.11.1...32.1....22223.21.1....2.31.21302....3.12322.3..3...32..2...23...2..21...1..3.232","40x30 ..3..2.1.31.3.2321.2.3.21.1...3...3..3.21.3.2.1232122321..3.2.....2.113.22..2..21.....1.....1.....112.331.232.3..222..332.322....3....1.1..33..1..2.1....2..321...20.222.1.32..322.1.11.3.232.12.10......1..1.1...1....012.....122...3...32.2..2.2.22.2310.3.3......2..3....3.2..2..1....1.....3.1..21..2.2202.1.320..3.2022...33..3.13210..12..1....3.201323....2.2.2.2..11......2.22.13.22..22.......0.10..3.2.....3.3.10..3..3.2.3....1...22..0232...2...12.21.01122..22.1...2331.122..3...1..31....1.3....2..10.2.12.....02...22223.....32...1..23........3121.1....21.....2..2.2.132..12..332.12....2.2..012.3...1222...2.222..2.1....32.322..32..322.1.3..1.....23....2.1231........23..2...22.....21312...02.....32.3.32..2....2.1....12..1...2..011.2012...1.22..22211.32.03...3...3111..23...0....1.2.2..3..23.1.2.....3.2..02.1.......32..33.31.21.0......12..3.1.3.2....212322.2....2..22..21323.2..23...3223.3..231.2.2132.3..23..1.2.....3....1..2..2.2....2..2......3.1.2122.13.2.2..1.22...3...321.....202....1...3.1..1......13.21.231.2.22.3.332..21.1.322.21...102..3....1.3..1..02..2.2....1....333.332..113..2.013.222.222.....1.....3.....32..1..22.221.1.....3.1..0222322222.1.1.30.3..2...3...3.13.2.1.2323.2.13.2.3..3..","40x30 3..213.1..33..3.231213.3.22.0.23232.1.2...2..13..21.1.2..2....2...1.....12......2...3221..3.12.1212..1..2..2.1.21.212.222..231.122..12.....2..3203.233.2...1.3....3..2.....2..12..32..132..2.1.1.1.....112..1..1222.20....202...1.1..3..1112........21..1....11.323...2.3212..0...1..213.22.1..332.1.3..1..212.3.....3.332...21.....132...32..1.102..2.32..211.12..201.23...13..1..1...2...2.23...2.3.2..213......31...22232.1.231..2.2220....2.2.....1.22..22..22..21.222.23..22.132...2.2.11..21.1..2.23.2..23.......13.2.0...131...33.....3.1....112...1.13....2.012.1.2......312.1....1.1..32.0....3.1.3.220..1..22..21..3..201.2.1.1....2.12..2.3....2.032......2.2.233.1....01.3...323....1.1.....01...302...1.2.22.......32..2.22.3..0.22..33.2.3...003.22..12.202.12..32..13..13.1.....1.1....2212.1..322.2.21203...21......212..0.2.2...31.1...3...3..1..13...03.303..02.212..20.2..322.1..10...011.....22...101.2.....1.313..1..1.1.202..2.13.132..2...2..3112.1...032.10....1..22........3022..3..0.3...232....11.1132..1..022.....3.2.2.0..212..10..01..2.....2..3....1.1...2.323.2231..1.....32..212.221..010.332.23.2.1..2..1..3223.32.3..2113...2......21.....1...2....1..1.2.22..13..1...3.2.23332.2.32.2.221133.2..12..3.112..1","40x30 .3..2221.223...22..132.23.1.231.2.2.1.1.0..3...22....21.233.3..1.1...3.32.12.33.11.1.22.1.1..2.20...2..1.1.23.1..233.......2..1...022.....1112.12.....3.12.....321..02.303.1..31.1.1.2.2.223..0...1.3.....13.32....1.2.2.0...22.....3..11.0.11.32....1.2..331..20....2..21..2133..32..2..2..3..1.2..0..11.3.2..1.2.10..1........2..2.1...0......1.31.2.121...0..11.2.3.3...1..02.2.1301..1.......1....2..2....12..3.02..1..1.2..3..13.11...3122.1.3.2..302..202001..22.12..0...23.131...10223....231......1....2..233....3...22..1...12......3..2013.2....22.21...11...2.0..3...10...2023...1..1.2...3231.2...02..3...2322...3..22...0.1132...1.3..1...1221...23...2..2.3...33...22.12....3.2301..2......23...2..32...0....223..0....2......222....02122...231.31...2..01.32..322221..331..2.1.2.3221...21.22..2..1.1..0..20.2..11....2..1....3.......2..2333.2.22..0...2.3.3.32..3...011.3.21.2......1...2.2..3........2..11.2.1..3.3.22..3..3.0..1..3..3..21..2212..13..0....12..122..1.2....33.13.0.13..1.....12...1.2.2.1....31.01.....2.3...2..131.1.2.3.2.32..2.211.23..233.....12.2.....20.2210.....311...2..3.......100..1.12.0.2..1...13.2..1.1.31.2.03.22.31.11.2...1.1..3.212.12....00...2..2.3.3.2.2.202.3.23.231..21...212.2323..3.","40x30 .32.2.231.3..32.11132232.32..1.232.0.22...133..3....2..2........3..2....2..121..2212...2.23.22.0213..2112.23.22.1...1233.2.232.11.2.3.22........33.2.1.32.322.0.212.1.....22211.1.2122.2.10132.....2.023...10.102......12......03......121.31.............3.2.2..1.31.2..2.2.3..........2.3..2.31......2..1..2..1......22.3..2.122.11...2322.1.1.22..13.1.2.2212...12.33.3..2.3.2..3.232...33...321.2..3.2.1..1.2.11..20.32112.3.2....2.2.11120.12..12.3...0..1.....3.1..0.13.1..1.2.....2..2....02232221.....11.2.13.3.33.....13233322..0.....111221.0..1....1..1.223323.....2.2.11..3....1.0..2..11..3..3.0....3..21.21.22..1....3.2..2..31..3..1.3....2..31.2.3.....221232.1..1....3..1.120232.....3..12222121.....23.1.21.1.22.....22102331....1..1.....3.3..3.11.2..2.3.....0..1...3.31..32.32031.1.2....2.1.22102.32..12.2.3..3.1.2..2.232...31...131.2..2.1.3..2.12.32...2113.2.3.22..22.1.1.3232...11.133.2..2.21......1..3..3..3......12.3..3.2..........3.1.2..2.12.1..2.1.3.............11.131......12......12......213.21...131.1.....20122.3.1223.3.13221.....0.223.2.312.23.2.1.21........00.1.0.23.222.2.3002...0.10.21.2222..1211.02.12.1...0131..122..1....3..0........3..3....2..221...11.0.223.3..02.12111113.21..3.223.0.22.","40x30 32..223222.23.0.2.3223.2.2.31.213112..10.2.3.2.2.2.3..0.2......2.2..3.2.2.1.3.0.32.1...2......22.2.21.1.32......2...3.13.22.0112.23..1.332.22.132.2..22.2211.12..21.1.2....3..1..2....1..2..3....3.1.12..1..2..2.2121233.2....1.1110211.3..3..3...2..23.1..2.1.2.2.22.2.2.0.1..2.31..2..0....2.....12.3..2.22.3..2.33.....1....2..110131132...2.2.3222.2.3...211123112..1..0........210.0..21..3.202........0..32.11.2..3.12.2..23....13..1.32.1..3.32.2..2.12.0..32.....2....3.....22..3.21.2....22.1..1....22210210022123....2..3.21..2.32.3..122.12.2..3..0..3.22.321..2.32.22.2..31.0.1....12.1..1.01....1.3.22..1.31.2..22.1.2....23.3..2.21....3.1.21..2.23.12.2..102.13.2..1..2..1.32.111..1.21.3..32.1..1....23222222212013....3..2.22....1.33.2..21.....2....2.....20..2.33.2..2.10.2..3.31.2..23....22..2.32.1..2.22.12..3........322.3..21..2.123........2..2..221231123...3.2.2102.2.1...232312332..3....2.....12.1..1.31.1..1.32.....3....3..2..23.2..2.3.2.2.22.2.3.2.2..3.21..1...2..2..2.2231232.0....2.1022222.2..1..3..20.1.3....2..1..2....1..0..2....1.2.22..12.3131.23..1.322.32.320.1..13.3132.31.22.1...1......12.1.12.2.33......3...1.13.3.2.1.1.2.2..2.2......2.1..2.2.2.2.2.1.32..323322.23.2.3.3213.2.2.21.133321..32","40x30 3223..23....21323.1..2.20110....31..2212.....102122..1.2.32..11.2.2..121222......212..2.3.20.2..1.1..1.1..2.11.3.2..222.031.32..1.2.3.1....13....2.1.2.1..12.3111.....3..3.223..322..133..201.1..1.....313.3..2.2.2..12..........12..2.0.1..2.32.2121.323.32....1.2..2.3....13.002.3122.............3..3..2..1..0..3............20.312..1122..2.22....11.3..1311..312.2311....1..2.22.1.2.2220.3.1.21.1..1....0332..2.2..33...1..........2...23..1.1..222.1.3310..1.2.221221223223.2.0..3223.1.03.2.....22.121..1.2..3.3..323.32.....2.12...2..3.1..22...21..10...22..1.2..2...23.3.22.213....22.2.03.0.21....222.20.3.31.0.11.322....22.2.22.1.12....210.21.2.23...3..1.2..12...13..10...12..1.3..1...32.2.....31.101..3.1..2.2..322.11.....1.23.2.2332..3.2.322122112221.2.1..1102.1.323..2.2..20...2..........3...33..0.3..2231....2..1.22.2.2.3131.3.2.11.0..2....2232.123..3211..2.22....20.3..3212..103.13............1..1..1..3..1..2.............1211.323.21....2.2..2.3....12.211.2320.02.2..1.1.2..20..........13..2.3.3..2.022.....2..3.020..301..213..312.1..1.....2323.11..1.2.3.3....12....1.3.1.1..31.220.213..1.2.22.2..2.1..2.3..1.22.1.1..220......333212..1.2.12..31.1.3..122110.....2233..11....22223.3..3.13211....23..3222","40x30 322..3...3221.23.32..22.32.2222...3..1133.1..2.2...2.222.12..21.222.3...0.1..1.3.....2..3122...12......22...1233..3.....2.222.11......2.2..12..1.1......22.032.1333...1.202121..31....32..221102.1...1212..12...1...3....2.21.2....3...2...13..3.2....2.3122.23233230222112.2222.2....2.3..0231....2.1..220..313..2.3....2312..3.2.....13..222211......232203..33.....2.32.1.0..........01.12.11..........3.3.13...32.3.32111.2..0....2..3.20022.1.11...1..3...21...12.131.32.213.22...22...2..33.1..3.322.2.2..2......0..3.1.222.1..0.2.3..130..23.3..30..13..23..1.22..131..3.3...1..13..0.2.32..02..11.3.2..20..2...22...2..21..2.2.22..10..21.1.2..22..2...1.1..233..13.0..22..33..21..1.12..322..2.1.2..0.231.1.1..2......2..2.2.322.1..3.32..2...22...22.111.12.113.21...02...2..2...11.2.32112.1..2....2..1.22112.2.23...32.2.1..........23.32.21..........1.3.12.2.....23..132131......321212..31.....3.3..2231....1.3..132..232..3.3....0231..2.1....3.3023.30113222112222.3110.1....2.2..13...3...1....1.12.1....2...3...20..3333...2.211133..32....21..332122.1...1211.110.13......2.2..32..2.1......22.120.2.....0..2131...12......32...2223..1.....2.3..2.2...1.122.13..13.122.0...2.3..2.2312..3...3101.32.22..12.23.2232...2..322","40x30 32233.32112.11.23.3..2.11.12.21133.233322...1.2..1.3....2..02..3....1.3..2.2...32..0.......1...3..3..3..1...2.......2..333..32.2.3...1.21.2222.11.3...3.2.32..2321..1..2222.3.131.2..3.222.2.2203..2..21....2......2.32.1.0..2.3.33.1......2.......2..2.221....103....111....131.2..3...3....31..3.123...3.11.2...222.2..13....223120.222121.1..21.31.32..1.232310.121231....1...232.2.2........2.0.010...3....22.21....32.2.1....2..2....3.1.00....32.2.1.3.12..13....3122321202....11..02.2.2..23..22..02.212..........101.23..11..22.2.2..212.1...1.1..1132..2.1...1.233..1.1..1..2..3.33.2.0.0.21.2.3.1.22.1..2..2....3..1..2.11.2.2.0.30.2.2.2.12.2..1..3..1.1..221.1...3.3..1312..3.1...2.012..0.0.31..22..12.232..........211.22..32..20..1.3.31..13....2222101202....33..21.0.2.2.21....20.2.2....3..1....2.1.12....21.33....3...231.0.3........1.1.321...2....221211.122123.2..33.12.23..1.111311.131133....12..1.212...2.13.3...133.2..23....2...2..2.223....213....212....231.1..1.......0......1.11.1.1..3.2.23.3......3....20..2..2213.1.322.1..2.223.1.3132..2..2323..12.2.2...1.13.1023.22.2...1.2.23..221..2.......1...2..2..2..3...3.......1..12...2.3..3.1....2..22..2....3.3..3.2...333333.11321.23.31.2..2.22.22.12312.10111","40x30 3...23.2..2..2232....32.2.2..231.22.3..0.123.21.2.13.2..113..13..2.23122.1.2.1.....2...22.1.1..31...3..122.....12.1.21.132...223..3.21.21..3.33..2.21.1.22....2...2..20.1.11.1.0.3.31.02.1.3.......13..2.2...31...12....22..13.3..1.0112122...3...21..1.2.2.2.3..21.22....2..32..2..3..101..2.2.13..1..122..22.32..31..23...1.1...2.23....22.3......22...32...32.223.....3....3222...23.2.12.2...1..2.....1.21.1....22.0....1..13..2.2.02..2..012.2...3.113.1..3.21.2..1..102.1.23.3.2.1222...13...3.31.13......231.2.3....1322..2...2...1...22.3.221202...3..12.2..2....3...3...0.3...2.12223..03...1.221....02...0.0.13.3.3...32....212.1...22..32122.3...3.0...2...2....2..1.21..3...322122.2.02...3...2...2..2323....3.1.323......11.33.0...31...0232.2.2.21.2.323..3..3.13.1..2.333.2...2.222..2..03.1.2..22..0....2.33....2.12.3.....2..3...0.22.2.13...3122....3.....221.21...11...33......3.02....23.3...3.2...23..11..11.20..211..1..22.3.1..123..2..2..02..3....32.22..3.3.1.2.2..12...2...3333111.1..2.20..23....11...21...2.3..32.......3.2.12.32.2.1.2.32.2.21..3...1....12.1.21.2..21.2..22.31.2..212...121.22.3.31.....121..1...32..3.1.12...3.....2.3.1.20322.2..22..212..1.02.0.22.233.3..2.23.323..3.1.32....2223..3..3.12...3","40x30 3.3...11.3.333.22..2.132.1.2.132....2..32..13.2..22....31..1.1.121.0.2.1.32...1.2..13...3...22.3..3..2202..3.2....211..2..11.12.2122.2...1.23...0..1...32....1.13....1.....23.22.3..1.22..3221.3.33.3...2.23.113.0...2..2.0011.3.32....3.1..3.33.........2..33.22.1.33..11....22..21.1...1..212222.....1.....2.2..1.1.2.3.2.1.2...2......02.2.3.21.3....2...11.12.23..2.3.2.110...02......2123113.1...3.....211..3.0..021..3.12...3.22.....22.3.331........1.223.21.2.1.3.3...11..2.31...22..2.2.3...2.2.1....1.31.2..2...2...12....1.1..0..2221..210.12..1.10.222..12..3...2.2...3.1...1201..22..3...3..11..2.1.221.1.12.1.232.2.2..21..1...0..32..2122...1.1...2.0...3..22..222.12.2..32.323..0122..1..1.3....12...3...3..2.11.2....1.1.0...1.3.1..21...22.1..23...3.2.2.1.21.132.3........213.1.13.....31.3...21.1..231..0.1..123.....2...1.2222012......21...111.3.3.1..02.01.32...1....3.32.2.1.12......2...2.3.3.2.0.2.2..3.3.....1.....331123..1...1.13..12....21..21.1.21.23..0.........21.1..0.2....11.2.3332.1..2...2.232.23.3...1.31.1.2133..22.0..3.21.31.....2....21.3....21...2..1...21.1...0.0222.21.03..1..122....1.2..2231..1..0.33...3...32..1.2...30.2.0.3.212.1.1..01....32..2.23..21..3....122.2.1.323.3..22.222.2.21...1.3","40x30 .3..32..11.32.2..2331.312...23.3.32312...2..22..1..3..22212.2.....222.2.......113..1...22..1321....221..21.31...2....2...1...2..222..11..11....20..123320233..0.3.3...3.2.13....02..3..3..1....0..2....0.3..31..1.1...12...13.12.2.31232.....2.1.2...3223.1.1.2..22.2..21..1..0.122..1..1..00.131.23..22....13..1...1...0.2.1.3..3.1..2..1...2.0..132...110....21..3..0.11.....1..1..2.2.0.12.2....220.23201..0...3..2.32..303.3.2.22..22222.3...1...232.0..13..1202...3..1.111.......2..2...1....3..3....1...1.2...2...31..3.21.23..3.321..1..3....0...2......1..1.1..2.01..1..213.0132.222221023.32...101..3..3.1..........0.1..1..202...12.222123221.1222.222..3..11.2..1.2..1......1...2....2..0..203.2..23.23.3..22...1...3.2...2....2..3....2...0..2.......232.0..2...3221..22..1.313...2...2.20322..31.3.1.112..12.3..1...2..32221.223....2.20.1.2.3..1..2.....12.1..1..22....322...011..2.3...1..2..1.2..3.1.2.2...3...2..21....22..12.211.33..3..3..023.3..2..12..1.23..3.2.2.2322...0.3.3.....13121.3.21.11...22...2.0..32..1.2....2..2....3..2..2..22....23.2.1...3.1.1..223132310..21....30..23..222..3...3...2....1...01.12..111....1202..23...2..131.......2.111.....1.22223..3..2..13..3...33202.2.21...311.2223..2.12.12..32..2.","40x30 ..3.322.1..232.32.3..1.22.223..1.012.2..00..2..30..23.1.2.2122.3.0.22..23..2..23.0.....2.31.3..2..3..2..3..3.12.2.....2.3212.1.21..1.2.1...12...2.1.3..31.3.31232.3..3.3.3....1.22.13.32.2....2.0.2..1.2.12..2.31.12102....13....33231.32.1..23..32....113.1..301..13..301..2.222....22..12.11.2....2.3..0....0..1.1....1.21.22.3.32.2....23...23..11..21...10....0.22.3...1..3231..2222.3.33.2.0013..3221..1....2...2.......22.21111123.11.......1...3..3.0..102.3..3..2......2..1..2.333..2.2.11.3.....2.22..13.2221.32..33.1.....2.212.021232..1...22..2..3..01...1..131133.3..2...0.232.2..22..21..31..3.111.2...2....0...2.121.3..21..31..22..2.223.3...3..3.322322..1...32..1..3..22...2..122322.321.1.....2.11..11.3322.33..23.3.....3.22.2.2..122.2..3..1......1..2..1.120..2.3..2...3.......13.22132332.22.......1...3....2..2231..3221.2.22.1.1221..1231..3...1.23.2....33...11..13..31...31....1.12.0.22.32.2....2.2..1....0..3.1....3.33.13..23....211.2..322..22..321..2.222....32..21..3.31.12322....12....32201.32.1..23.2.2..1.3.3....2.33.23.22.2....1.1.3..2.03332.1.12..1.3.2...23...2.2.2..31.0.2231.2.....2.32.2..2..1..3..2..2.21.2.....2.23..3..20..22.2.2.1222.2.3.22..21..1..12..2.312.0..131.23.2..3.13.123..3.311.3..","40x30 .3..3.222122..1..3....2..3..221322.1..2..11.23.0..222..202.23.232..123..1.32.32.31.....1...3.3...312213...1.2...2.....22.2.2.2232.2..222........323..0.1322.2.1.321.1.11...23.232.2212.022.20...21.2.232..2..31..32..2..10....12..1..13..22..2..21.1...2.22.....2.3..1.2.....31.2...1.22.10..23..1..233...3..2...221..1..22..32.3.2..1.12....1.1.131321.0.3....31.2..3.3.1..22....11...2........1...33....31..0.0.3...1.323.30..23.21.32..22.210.1...3.313.1.3.2.111.2.2.0....1.2.2.222.1.2.2.12..22.2.3..2.3..1.1....2.3..1.2..3.2.31..3....23.1.11101.3..13..1.11112.1.10....3.3.1....2.3...3..32..12..2...3.1....2.1..3.1....2.2...1..30..13..1...2.1....1.3.1....21.2.32211.1..13..1.21211.2.11....1..21.2.2..0.1..2.1....3.1..1.3..1.2.23..21.1.2.1.323.0.2.2....0.1.2.212.3.2.1.232.2...3.311.22..31.33.22..11.223.3...1.1.2..12....03...1........1...11....22..3.3.2..3.21....2.2.123203.3.3....32.2..2.1.01..11..1..022...2..1...232..1..13..21.33.1...2.21.....1.3..3.1.....23.0...3.11..1..22..20..2..33....02..1..12..22..1..222.1.23...32.111.1323.303.32...22.1.212.2.1.2221.1..333........221..2.3213.3.1.22.....2...2.2...213221...3.3...1.....13.22.02.2..213..202.22.212..231..3.22.20..2..2.132221..1..1....0..2..323231.3..2.","40x30 33..312.21.23...2.2..2..3.3.3..1222...01..1..2..2..1.133.122121...3.21....1211.32....1.2..2......2....1221..2.232.....1..3.2.1.2231113..3.1...1..01111.3.211....2..23..2..1..2.213..1...21..3..1..3..3112.....2.2..2.2.2..1..2....22..213..0..3.3.3..21321.3.......3.2.1323022.1.11.3.1...01....1.10.03123..1..22......2..2...1.3.2..32.1.22..3..21.1.2.2..2.201.1.2...1..1....222.2......3.1...1.23.....2.1.21.22...1.3.3.3232022.1..2.3..2.31..3....1..0.0...0...22....21.1.1.0..1..32..13.13.3..11.111....1.21......33.22..2.22...1.1.0...11...21......31.2.1.12..1.1.23.....312...1..3..213.3..232..2...3....2.22......02.3....2...2..223..1.323..2..2...123.....23.2.0..01.1.1.20......03...23...2.3.2...21.3..32.10......02.1....120.31..3.23.23..22..1..3.3.2.02....21...3...1.2..2....1..23.2..2.1..3.0232221.2.0.1...13.32.1.2.....21.0...2.0......1.222....3..1...2.0.332.1..1.2.2.13..2..22.2.31..0.3.2...3..1......32..2..32312.03.3....21...2.2.21.2.3312231.0.1.......2.22131..3.3.1..3..332..11....3..1..2.1.2..0.3.....3233..1..2..2..12...1..320.2..2..3..12..2....323.2.23131..1...1.0..2223212.2.2.1..3.....122.2..0212....3......2..3.2....33.1113....23.2...212222.231.3..1..1..2..12...3223..2.3.1..1..3.3...12.12.311..33","40x30 .3.3.31..31.23....223..2..3..33.2.23..2...1....2...21..22.13.2..23110...2.2...3.23.12212312..3..1..1.3110....2..32.13.......1.....3003.23.1....1...2.1..1..2.2.3.22..2...1...2......3233.2.1..1.2.123.1.2..1.2.13..2.1.122.1.0..2..23..23.1......2.1..1...22.2.121...21.1.2012.1.3..3.2.210.3.0.3122..1...12...2.12....2.20..12...2..22....22..1....2..3....31113.2.21.2...33.1..3..3.2..3.2.3..23.1.......23..123....22..13..0.2.3.10....3.32.3.1....3...13.2.123..03..3.2.0..13...31.121.1.31..1.....1.0.2.....2...22..2..30.......1..3.32..32.113..21.3.1...12..1...3.20.1.33.....1...3...2.31..210...2.2.2..331..........321..1.1.3...113..31.1...1...1.....10.3.21.3...2..23...2.1.33..112.21..33.3..3.......23..1..01...2.....1.3.2.....1..02.3.312.12...33..2.2.3..32..231.1.33...2....3.2.02.1....13.2.1.2..32..02....231..23.......1.13..3.0.3..2.1..1..2.12...3.10.3.21220....1..1....2..12....12..2...22..21.1....22.2...20...3..3323.2.2.333.0.2..2.1.3333.2.03...220.1.22...3..2.2......2.23..11..3..2.2.331.2.3..32.0.2..3.3.313.2.2..2.1.2222......1...1...2..20.2.2.2..2..1.2...2....0.31.2323.....3.......12.11..2....1021.3..2..2..13231120.22.1...2.3...12221..1.22.32..22...3....3...3..10.0.12..2..0..211....23.32..21.2.3.","40x30 .333..1.3.22232313122323112211.1.2..110..11...2.23....................23.2...33..333.3....011.1...2..2...2.212....2.212.3....1.2.311123.2.2..1.3.223113.1.2....32.22..2221.2....22.22.30....0.3232..22.23..13.32...2222..2.32.2..3220...21.23..3..3222.1........12....12........2.0122..2..2.22..231123...3..3...210222..21.2..32312.3..2.32...13.2022.11...12.1..1.12112.2....2.13.2.1.2.2..2.1.2.3.22.3....1.2.2..3..31...2.2.32....20.3.3...22..3..3..11122.22.232.1.1..12..2.1.202.21.22311.3...323...02.3221.0..2.2122.12...122...232.2......3..21...2113...32..1......3.22..2..3.31.2....1.1....0.1....1.22.2..1....2..2.22.2....3.2....1.3....1.21.1..1..22.1......1..12...3212...12..3......2.222...211...21.2221.0..1.2212.32...132...3.12210.22.221.2.2..13..3.2.121.23.32221..2..2..21...2.0.20....22.2.2...22..2..3.3.2....1.22.1.1.3.2..2.1.3.3.22.2....3.22132.2..2.21...22.1002.23...22.2..2.22223..0.11..112323...3..2...131132..23.1..3..1123.3........32....02........2.2113..2..12.11...1022..3.31.3..2212...02.31..22.11..3111.2....11.21.21....0.0322..23.22....1.3.332222.2.3..3.3.312132.2.2....3.121.1....121.2...3..2...3.222....2.321..13...2.21....................22.1...31..232..1.3.22212323232223232222.3.2..222.","40x30 3.3..32.1123.011..2210..222.2333.31..1.1....231....3..32.3....3.12..2....232....1121..3.3....2.1...22...2.1....2.1..3321.2..01....2.21.1.1.12.1.2.22.3....32..2..2...2.2233..1.011....122.2..2111.2...2...1212...1.2..3...1122...2..2.3...2221..2.3..2.2.....3..12.03.12..2.....1.3..1.33.1..2.0212..2332......3122..1121.1..2.2..131.232.1..121.2....2.322..1.222.320..1222.2...13.2.3.11213131.1.3.12...2.2112.12..1233.23..12........31..22.1222..10....3.....2...12..2.23.3..21...3.....2...222.0....0.2...2.2....1.1...2.0....2.113..3.3.33202..0..1.1332.2..1..01312.3.3..3.1.2....2..32.3..2113..2.33..2....1.1.21.2.1....1..22.1..2202..1.02..1....2.0.3..2.1.32332..1..1.1323.2..1..11310.2.2..223.1....2.2...1.2....1.1...3.3....2.212...2.....2...11..1.32.3..12...2.....2....23..1122.23..11........32..23.2221..23.2231.3...30.2.3.31132200.1.1.21...3.3120..222.221.2..220.3....2.310..3.223.232..3.2..1.2113..1013......1132..2121.1..2.12.2..2.1.....0..23.22.22..2.....2.1..2.1..2223...3.0..3...2122...2..3.1...2323...1...1.3213..0.232....221.1..1203.2...3..1..11....3.22.0.2.33.2.2.23.2....21..2.2231..3.1....2.2...22...2.2....1.2..1222....212....2..32.1....2.10..1....212....1.3..22.1321.110..2232..212.2220.12..2.2","40x30 3.33.22..21.2222...212.32222..322.23.1...3.....23.1.....22.22.23....2.1.3.2.3.22...2.22.12.1.032..1......131.22..1.1.1..2.1..0....11..22...222232..1..2.02..33123.1.211231.1222.22...2.0.2.11.3.1.1...1....3...2...21..1.2.22.22.22.2..1.22.3...3...1.2..20..131221...1..3.3.2132..0.1..2.3..0.223.1....2....3.2.2...22...31.13...21.2.1..2..32...12..1...2.3.1.3.3.......23.1.2.2221.12.02..212232.2.231.2.1....201.2..2.....1.3...1..3.1..23.22.2.31.2.....11.132.2.02..2.0...1..31.3..3..3....22...2.1.12.21...0.3....3..212..2.2.12.....11..12..2.1...00.131.31.3...2..2.2...121.23.3.1....123...1....3..0.2.22...1..2...10.0.2..3....2...323....0.2.32.312...1.2..3...3.22.222.12...1.1..31..02.....22.3.3..122..1....0.1...12.31.2.2...12....1..2..2.01..3...2.0..22.3.101.12.....3.21.1.12.21..1.2..0...1.2.....3..2.132....3.2.223.2.231221..22.32.3222.1.2.12.......2.2.2.1.2...1..21...23..1..0.3.20...31.21...13...2.3.1....2....2.022.2..1.3..1.0..1013.1.2..2...222223..22..3.3...1...3.21.3..2.30.33.12.1.1..12...2...1....2...2.0.1.21.1.2.0...23.1213.122312.1.33221..32.2..2..122102...22..31....3..1.1..3.3.3..11.211......1..032.1.21.12.3...21.3.1.2.2.1....11.32.11.....2.12.....2...1.22.311..22231.222...2333.33..32.31.3","40x30 33.3.3.2.2.12..231....22.2132.1.323.3..1.1...31.3032.1...2331..1..1....2.2.1.3.23....3.2......132..2.21.2111222.2.22..1....31.1.221.2.1.3.23...2..3.2..2.3...2...2...3.2.2.122......132.3...2.22.213.2.23..1...3..2..22222.2.3...211.2.1.2.2......3.23.103.21.222..1.2.21..21.1..11...0.2....1.1..12.3.23032..1.22..2.12..3...1....2.1113.3....22..02..31..0.23..2..0..1.2...2.0..2.2.....1...123...31.10....3.....2...2.2.22122.3.3..1.1.2123..3.2.2.333..2.23.3..2.11....2.31...2132.21.0..2....20.1.1.2..2.2323..232.2..0.3...33.....32.0...2.201....21.2.....1.2...0.1..2223..3.1.2..2...2...1...2.13.3132.222.2........2.121.2203.33.1...2...2...1..2.0.2..3222..3.2...2.1.....2.01....321.3...1.22.....11...1.2..2.321..2322.1..3.2.3.13....3..1.22.2222...21.3....22.2..0.22.2..332.3.1.2..2113.2.0..1.2.22321.3.2...2.....2....21.22...222...3.....1.1..1.0...1.1..3..1..33.3..21..11..31....1.3222.2....1...3..21.0..01.3..21132.2.21..1.2....2.1...21..1.02..11.3.3..313.30.223.13.3......2.1.2.1.312...2.3.22120..3..1...1..33.1.222.13.1...2.211......231.2.1.2...0...3...2.0..2.3..1...21.2.2.3.122.2.12....1..23.3.3123113.32.1..211......3.2....13.3.1.1.2....1..1..2211...2.2200.12...3.3..3.012.2.3222.32....323..23.2.3.3.1.13","40x30 33.3...3.22232.2...23...1.31122.3...3.22..1.231..3.2..2..2.22.2..1..0.2..122.2...3.2...3..1.1....0.12.2....1.2..2...2.1..122.3123.1.2.3123....2213.1.2.2221.112.3..2.1.2112..1.21.1312.10.3..1230.2.2..2.1.221..2.1.1.0.2......2.1.1.2.2..032.2.111..2.2....13..2..31..3..21....3.2..121...3.2..32.2.....1....1.....3.11..2.3...30.102.2..2.211.21311213.111.1..2.120.12.33..2.2.3.2................2.3.1.2..22....22012.12.23.3.332222.2.13.23.01101....22..2.2....2..1...12...2..3....0.0..32.....012.21.2..3.2.3211.1.2..3.11.333....3.02.......1.32.2......3.32.2.......33.31.1.31..2..21..1.2.22.1.1..13..2..22.2.22.1.10..1..23..2.3.13.3.1..23..0..13.3.11.12.......2.03.1......1.32.3.......12.3....222.01.1..2.2.1200.3.1..1.22.323.....11..2.1....3..3...31...1..3....1.2..12....02232.32.22.2.222202.2.23.32.31311....12..0.1.2.2................2.2.2.3..12.31.112.1..3.222.21102221.211.3..2.223.12...3.1..32.1.....1....1.....2.23..3.2...012..1.1....21..3..22..2..31....1.0..112.1.110..2.1.3.1.1......1.2.1.3.1..000.1.3..1.1.2221..3.02.1222.12.2..0323.2.2..3.233.1111.3.3.1121....3132.2.1.0203.313..1.1...2..1.2....0.22.1....2.2..3...2.2...3.132..3.2..1..2.13.2..3..2.2..310.1..22.1...2.22202.3...32...1.32321.1...3.33"])))},visibleProperty:q})]})]}),o,e),this.glassPane=o,this.layoutBoundsProperty=e}}class Po extends Y{constructor(o,e){const t=new D2(!1),r=new V2(o,{derive:C=>C?C.undoPossibleProperty:t}),n=new V2(o,{derive:C=>C?C.redoPossibleProperty:t}),i=new V2(o,{derive:C=>C?C.isSolvedProperty:t}),s=new _([i],C=>!C);let l=null,c=null,d=null;const u={buttonAppearanceStrategy:O2,baseColor:y.uiButtonBaseColorProperty,disabledColor:y.uiButtonDisabledColorProperty,xMargin:8*1.3,yMargin:5*1.3,mouseAreaXDilation:5,mouseAreaYDilation:5,touchAreaXDilation:5,touchAreaYDilation:5};super({spacing:10,stretch:!0,children:[new t1("New",Q({},u,{accessibleName:"New",listener:()=>{l=l||new vo(e.glassPane,e.layoutBoundsProperty,{loadPuzzle:e.loadPuzzle}),l.show()},textFill:y.uiButtonForegroundProperty,baseColor:y.uiButtonBaseColorProperty,xMargin:5,yMargin:5,font:S1,buttonAppearanceStrategy:O2})),new b2(Q({},u,{accessibleName:"Undo All",content:P2(jt),listener:()=>{o.value&&o.value.onUserUndoAll()},enabledProperty:r,visibleProperty:L1})),new b2(Q({},u,{accessibleName:"Undo",content:P2(_t),listener:()=>{o.value&&o.value.onUserUndo()},enabledProperty:r,fireOnHold:!0})),new b2(Q({},u,{accessibleName:"Redo",content:P2(Qt),listener:()=>{o.value&&o.value.onUserRedo()},enabledProperty:n,fireOnHold:!0})),new b2(Q({},u,{accessibleName:"Redo All",content:P2($t),listener:()=>{o.value&&o.value.onUserRedoAll()},enabledProperty:n,visibleProperty:L1})),new b2(Q({},u,{accessibleName:"Settings",content:P2(Yt),listener:()=>{d=d||new oo(e.glassPane,e.layoutBoundsProperty),d.show()}})),new b2(Q({},u,{accessibleName:"Share",content:P2(eo),listener:()=>{const C=o.value;C&&(c=c||new ro(e.glassPane,e.layoutBoundsProperty),c.setPuzzle(C.puzzle),c.show())}})),new t1("Solve",Q({},u,{accessibleName:"Solve",listener:()=>{o.value&&o.value.onUserRequestSolve()},enabledProperty:s,textFill:y.uiButtonForegroundProperty,baseColor:y.uiButtonBaseColorProperty,xMargin:5,yMargin:5,font:S1,buttonAppearanceStrategy:O2})),new t1("Hint",Q({},u,{accessibleName:"Hint",listener:()=>{o.value&&o.value.onUserRequestHint()},enabledProperty:s,textFill:y.uiButtonForegroundProperty,baseColor:y.uiButtonBaseColorProperty,xMargin:5,yMargin:5,font:S1,buttonAppearanceStrategy:O2}))]}),this.puzzleModelProperty=o,e.layoutBoundsProperty.link(C=>{this.maxWidth=Math.max(1,C.width-2*z2)})}}const U2=new N,x3=new N,Co=()=>{const a=l1.p||localStorage.getItem("puzzleString"),o=u2.loadDefaultPuzzle();let e=null;try{const t=a?w3(a)??o:o;e=F1(t.board,t.stateProperty.value)}catch(t){console.error(t)}return e||(e=F1(o.board,o.stateProperty.value)),x()&&k(e),new b3(e)};class Eo extends N{constructor(o){super({pickable:!1,opacity:.7}),this.displayedAnnotationProperty=o,o.link(e=>{this.children=[],e&&this.addChild(new t3(u3.getHintNode(e),{xMargin:5,yMargin:5,fill:y.uiBackgroundColorProperty,stroke:y.uiForegroundColorProperty}))})}}class bo extends F3{constructor(o){const e=new e3(0,0,15,0,{stroke:y.uiButtonForegroundProperty,lineWidth:4,lineCap:"round"}),t=6,r=new U().moveTo(-t,-t).lineTo(t,t).moveTo(-t,t).lineTo(t,-t),n=new t2(r,{stroke:y.uiButtonForegroundProperty,lineWidth:2}),i=new N({children:[new Z(0,0,7,7,{stroke:y.uiButtonForegroundProperty,fill:y.uiForegroundColorProperty}),new Z(7,7,7,7,{stroke:y.uiButtonForegroundProperty,fill:y.uiForegroundColorProperty})]}),s=new N({children:[new Z(0,0,7,7,{stroke:y.uiButtonForegroundProperty,fill:y.uiForegroundColorProperty}),new Z(7,7,7,7,{stroke:y.uiButtonForegroundProperty,fill:y.uiBackgroundColorProperty})]}),l=new N({children:[new t2(new U().moveTo(0,14).lineTo(0,0).lineTo(14,0),{stroke:y.uiButtonForegroundProperty}),new t2(new U().arc(0,0,7,0,Math.PI/2,!1),{stroke:y.uiButtonForegroundProperty})]});super(p2,[{value:O.EDGE_STATE,labelContent:"Edge",createNode:()=>e,options:{visibleProperty:O.EDGE_STATE.isEnabledProperty}},{value:O.EDGE_STATE_REVERSED,labelContent:"Edge Reversed",createNode:()=>n,options:{visibleProperty:O.EDGE_STATE_REVERSED.isEnabledProperty}},{value:O.FACE_COLOR_MATCH,labelContent:"Face Color Match",createNode:()=>i,options:{visibleProperty:O.FACE_COLOR_MATCH.isEnabledProperty}},{value:O.FACE_COLOR_OPPOSITE,labelContent:"Face Color Opposite",createNode:()=>s,options:{visibleProperty:O.FACE_COLOR_OPPOSITE.isEnabledProperty}},{value:O.SECTOR_STATE,labelContent:"Sector",createNode:()=>l,options:{visibleProperty:O.SECTOR_STATE.isEnabledProperty}}]),o.layoutBoundsProperty.link(c=>{this.maxWidth=Math.max(1,c.width-2*z2)})}}window.assertions;const Fo=new N({renderer:"svg",children:[U2]}),L2=new _3(Fo,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1,accessibility:!0,backgroundColor:"#eee",assumeFullWindow:!0,listenToOnlyElement:l1.debugColors});document.body.appendChild(L2.domElement);L2.setPointerAreaDisplayVisible(l1.showPointerAreas);window.oncontextmenu=a=>a.preventDefault();const W2=new d2(new r1(0,0,window.innerWidth,window.innerHeight)),i2=new H2(Co()),k3=new C3(i2,g2,{layoutOptions:{stretch:!0,grow:1}}),z3=new C3(i2,g2,{layoutOptions:{stretch:!0,grow:1},topological:!0,visibleProperty:R1}),xo=new D2(!1),ko=new V2(i2,{derive:a=>a?a.hasErrorProperty:xo}),zo=new V2(i2,{derive:a=>a?a.displayedAnnotationProperty:new d2(null)});T1.multilink([ko,y.navbarBackgroundColorProperty,y.navbarErrorBackgroundColorProperty],(a,o,e)=>{L2.backgroundColor=a?e:o});const A3=new Po(i2,{glassPane:x3,layoutBoundsProperty:W2,loadPuzzle:a=>{const o=F1(a.board,a.stateProperty.value);o&&(i2.value=new b3(o))}}),Ao=new bo({layoutBoundsProperty:W2}),Lo=new u1({layoutBoundsProperty:W2}),L3=new Eo(zo),x2=new G({stretch:!0,children:[new e1(A3,{margin:z2}),new Y({grow:1,stretch:!0,layoutOptions:{grow:1},children:[k3,z3]}),new e1(Lo,{margin:z2,visibleProperty:d3}),new e1(Ao,{margin:z2})]});W2.lazyLink(a=>{x2.preferredWidth=a.width,x2.preferredHeight=a.height,x2.x=a.left,x2.y=a.top});U2.addChild(x2);U2.addChild(L3);U2.addChild(x3);Q3.create(U2,[A3,L3],(a,o)=>{o.centerTop=a.centerBottom.plusXY(0,10)});L2.initializeEvents();let O1=!0;const T3=()=>{O1=!1;const a=new r1(0,0,window.innerWidth,window.innerHeight);L2.setWidthHeight(a.width,a.height),W2.value=a,G3.mobileSafari&&window.scrollTo(0,0)},p1=()=>{O1=!0};$(window).resize(p1);window.addEventListener("resize",p1);window.addEventListener("orientationchange",p1);window.visualViewport&&window.visualViewport.addEventListener("resize",p1);T3();L2.updateOnRequestAnimationFrame(a=>{pe(),O1&&T3(),x2.validateBounds(),k3.step(a),z3.step(a)});document.addEventListener("keydown",a=>{var o,e,t;a.ctrlKey||a.metaKey?a.key==="z"&&(a.shiftKey?(o=i2.value)==null||o.onUserRedo():(e=i2.value)==null||e.onUserUndo()):a.key==="1"?l2(O.EDGE_STATE):a.key==="2"?l2(O.EDGE_STATE_REVERSED):a.key==="3"?l2(O.FACE_COLOR_MATCH):a.key==="4"?l2(O.FACE_COLOR_OPPOSITE):a.key==="5"?l2(O.SECTOR_STATE):a.key==="6"?l2(O.VERTEX_STATE):a.key==="7"?l2(O.FACE_STATE):a.key==="8"?l2(O.FACE_VALUE):a.key==="9"?l2(O.DELETE_FACE):a.key==="Escape"&&((t=i2.value)==null||t.onUserEscape())});i2.lazyLink((a,o)=>{o&&o.dispose()});
