var $=Object.defineProperty;var W=(f,e,s)=>e in f?$(f,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):f[e]=s;var p=(f,e,s)=>(W(f,typeof e!="symbol"?e+"":e,s),s);import{e as u,f as h,_ as C}from"./getCoordinateClusteredMap-Bd_wM-c0.js";import{a as O,b as R,c as I,d as j,e as A,f as v,g as B,l as E,h as G}from"./operations-BMyV0DHx.js";class H extends Error{constructor(e,s){super(`Feature ${e.toCanonicalString()} incompatible with ${s.map(t=>t.toCanonicalString()).join(", ")}`),this.mainFeature=e,this.incompatibleFeatures=s}}class c{constructor(e,s){p(this,"allFaces",new Set);p(this,"canonicalString",null);p(this,"sameColorPaths",null);p(this,"oppositeColorPaths",null);if(this.primaryFaces=e,this.secondaryFaces=s,u()&&h(e.length+s.length>1),u()&&h(e.length),this.allFaces=new Set([...e,...s]),this.allFaces.size!==e.length+s.length)throw new H(this,[])}toCanonicalString(){if(this.canonicalString===null){const e=C.sortBy(this.primaryFaces.map(a=>a.index)),s=C.sortBy(this.secondaryFaces.map(a=>a.index)),t=e.length>s.length||e.length===s.length&&e[0]<s[0],i=t?e:s,n=t?s:e;this.canonicalString=`face-color-dual-${i.join(",")}-${n.join(",")}`}return this.canonicalString}isPossibleWith(e){for(const s of this.getSameColorPaths())if(s.filter(t=>e(t)).length%2!==0)return!1;for(const s of this.getOppositeColorPaths())if(s.filter(t=>e(t)).length%2===0)return!1;return!0}getPossibleFormula(e){return O([...this.getSameColorPaths().map(s=>R(s.map(t=>e(t)))),...this.getOppositeColorPaths().map(s=>I(s.map(t=>e(t))))])}embedded(e){const s=C.uniq(this.primaryFaces.map(i=>e.mapFace(i))),t=C.uniq(this.secondaryFaces.map(i=>e.mapFace(i)));return s.length===1&&t.length===0?[]:[new c(s,t)]}equals(e){if(!(e instanceof c)||this.primaryFaces.length+this.secondaryFaces.length!==e.primaryFaces.length+e.secondaryFaces.length)return!1;const s=(t,i)=>t.length===i.length&&t.every(n=>i.includes(n));return s(this.primaryFaces,e.primaryFaces)&&s(this.secondaryFaces,e.secondaryFaces)||s(this.primaryFaces,e.secondaryFaces)&&s(this.secondaryFaces,e.primaryFaces)}indexEquals(e){if(!(e instanceof c)||this.primaryFaces.length+this.secondaryFaces.length!==e.primaryFaces.length+e.secondaryFaces.length)return!1;const s=(t,i)=>t.length===i.length&&t.every(n=>i.some(a=>n.index===a.index));return s(this.primaryFaces,e.primaryFaces)&&s(this.secondaryFaces,e.secondaryFaces)||s(this.primaryFaces,e.secondaryFaces)&&s(this.secondaryFaces,e.primaryFaces)}isSubsetOf(e){if(!(e instanceof c)||this.allFaces.size>e.allFaces.size)return!1;for(const t of this.allFaces.values())if(!e.allFaces.has(t))return!1;return e.primaryFaces.includes(this.primaryFaces[0])?this.primaryFaces.every(t=>e.primaryFaces.includes(t))&&this.secondaryFaces.every(t=>e.secondaryFaces.includes(t)):this.primaryFaces.every(t=>e.secondaryFaces.includes(t))&&this.secondaryFaces.every(t=>e.primaryFaces.includes(t))}isRedundant(e){return e.some(s=>this.equals(s))}serialize(){return{type:"face-color-dual",primaryFaces:this.primaryFaces.map(e=>e.index),secondaryFaces:this.secondaryFaces.map(e=>e.index)}}overlapsWith(e){for(const s of this.allFaces)if(e.allFaces.has(s))return!0;return!1}union(e){const s=this.primaryFaces.some(i=>e.primaryFaces.includes(i))||this.secondaryFaces.some(i=>e.secondaryFaces.includes(i)),t=this.primaryFaces.some(i=>e.secondaryFaces.includes(i))||this.secondaryFaces.some(i=>e.primaryFaces.includes(i));return u()&&h(s||t),s&&t?null:s?c.fromPrimarySecondaryFaces([...new Set([...this.primaryFaces,...e.primaryFaces])],[...new Set([...this.secondaryFaces,...e.secondaryFaces])]):c.fromPrimarySecondaryFaces([...new Set([...this.primaryFaces,...e.secondaryFaces])],[...new Set([...this.secondaryFaces,...e.primaryFaces])])}ensurePaths(){if(this.sameColorPaths===null){const e=[],s=[],t=new Set([...this.primaryFaces,...this.secondaryFaces]),i=this.primaryFaces[0],n=new Set([i]);for(let a=1;n.size<t.size;a++){if(a>100)throw new Error("FaceColorDualFeature.fromPrimarySecondaryFaces: could not find all connections");const l=(r,q,w)=>{for(const m of r.edges){if(m.faces.length!==2||q.includes(m))continue;const g=m.faces.find(S=>S!==r);if(u()&&h(g),!n.has(g))if(t.has(g)){const S=[...q,m],z=w,k=g;this.primaryFaces.includes(z)===this.primaryFaces.includes(k)?e.push(S):s.push(S),n.add(g)}else l(g,[...q,m],w)}};[...n].forEach(r=>l(r,[],r))}this.sameColorPaths=e,this.oppositeColorPaths=s}}getSameColorPaths(){return this.ensurePaths(),this.sameColorPaths}getOppositeColorPaths(){return this.ensurePaths(),this.oppositeColorPaths}isCompatibleWith(e){let s=!1,t=!1;const i=new Set([...this.allFaces].filter(n=>e.allFaces.has(n)));for(const n of this.primaryFaces)i.has(n)&&(e.primaryFaces.includes(n)&&(s=!0),e.secondaryFaces.includes(n)&&(t=!0));for(const n of this.secondaryFaces)i.has(n)&&(e.primaryFaces.includes(n)&&(t=!0),e.secondaryFaces.includes(n)&&(s=!0));return!s||!t}static areCanonicalWith(e,s){const t=e.map(i=>i.toCanonicalString()).sort().join("//");for(const i of s)if(e.map(a=>{const l=a.embedded(i);return u()&&h(l.length===1),l[0].toCanonicalString()}).sort().join("//")<t)return!1;return!0}static deserialize(e,s){return new c(e.primaryFaces.map(t=>s.faces[t]),e.secondaryFaces.map(t=>s.faces[t]))}static fromPrimarySecondaryFaces(e,s){return u()&&h(e.length+s.length>1),u()&&h(e.length),new c(e,s)}}class y{constructor(e,s){this.face=e,this.value=s}toCanonicalString(){return`face-${this.face.index}-${this.value??"blank"}`}isPossibleWith(e){return this.face.edges.filter(t=>e(t)).length===this.value}getPossibleFormula(e){return this.value===null?j:A(this.face.edges.map(s=>e(s)),this.value)}embedded(e){return[new y(e.mapFace(this.face),this.value)]}equals(e){return e instanceof y&&e.face===this.face&&e.value===this.value}indexEquals(e){return e instanceof y&&e.face.index===this.face.index&&e.value===this.value}isSubsetOf(e){return this.equals(e)}isRedundant(e){return e.some(s=>this.equals(s))}serialize(){return{type:"face",face:this.face.index,value:this.value}}static deserialize(e,s){return new y(s.faces[e.face],e.value)}}class o{constructor(e){this.edge=e}toCanonicalString(){return`red-${this.edge.index}`}isPossibleWith(e){return!e(this.edge)}getPossibleFormula(e){return v(e(this.edge))}embedded(e){return this.edge.isExit?e.mapExitEdges(this.edge).map(s=>new o(s)):[new o(e.mapNonExitEdge(this.edge))]}equals(e){return e instanceof o&&e.edge===this.edge}indexEquals(e){return e instanceof o&&e.edge.index===this.edge.index}isSubsetOf(e){return this.equals(e)}isRedundant(e){return e.some(s=>this.equals(s))}serialize(){return{type:"red-edge",edge:this.edge.index}}static deserialize(e,s){return new o(s.edges[e.edge])}}class d{constructor(e){this.edge=e}toCanonicalString(){return`black-${this.edge.index}`}isPossibleWith(e){return e(this.edge)}getPossibleFormula(e){return e(this.edge)}embedded(e){return this.edge.isExit?[]:[new d(e.mapNonExitEdge(this.edge))]}equals(e){return e instanceof d&&e.edge===this.edge}indexEquals(e){return e instanceof d&&e.edge.index===this.edge.index}isSubsetOf(e){return this.equals(e)}isRedundant(e){return e.some(s=>this.equals(s))}serialize(){return{type:"black-edge",edge:this.edge.index}}static deserialize(e,s){return new d(s.edges[e.edge])}}class F{constructor(e){this.sector=e}toCanonicalString(){return`sector-not-one-${this.sector.index}`}isPossibleWith(e){return this.sector.edges.filter(t=>e(t)).length!==1}getPossibleFormula(e){return B(this.sector.edges.map(s=>e(s)))}embedded(e){return[new F(e.mapSector(this.sector))]}equals(e){return e instanceof F&&e.sector===this.sector}indexEquals(e){return e instanceof F&&e.sector.index===this.sector.index}isSubsetOf(e){return this.equals(e)}isRedundant(e){if(e.some(r=>this.equals(r)))return!0;let s=!1,t=!1,i=!1,n=!1;const a=this.sector.edges[0],l=this.sector.edges[1];for(const r of e)r instanceof d&&(r.edge===a?s=!0:r.edge===l&&(t=!0)),r instanceof o&&(r.edge===a?i=!0:r.edge===l&&(n=!0));return s&&t||i&&n}serialize(){return{type:"sector-not-one",sector:this.sector.index}}static deserialize(e,s){return new F(s.sectors[e.sector])}}class b{constructor(e){this.sector=e}toCanonicalString(){return`sector-not-zero-${this.sector.index}`}isPossibleWith(e){return this.sector.edges.filter(t=>e(t)).length!==0}getPossibleFormula(e){return E(this.sector.edges.map(s=>e(s)))}embedded(e){return[new b(e.mapSector(this.sector))]}equals(e){return e instanceof b&&e.sector===this.sector}indexEquals(e){return e instanceof b&&e.sector.index===this.sector.index}isSubsetOf(e){return this.equals(e)}isRedundant(e){return e.some(s=>this.equals(s)||s instanceof d&&this.sector.edges.includes(s.edge))}serialize(){return{type:"sector-not-zero",sector:this.sector.index}}static deserialize(e,s){return new b(s.sectors[e.sector])}}class x{constructor(e){this.sector=e}toCanonicalString(){return`sector-not-two-${this.sector.index}`}isPossibleWith(e){return this.sector.edges.filter(t=>e(t)).length!==2}getPossibleFormula(e){return E(this.sector.edges.map(s=>v(e(s))))}embedded(e){return[new x(e.mapSector(this.sector))]}equals(e){return e instanceof x&&e.sector===this.sector}indexEquals(e){return e instanceof x&&e.sector.index===this.sector.index}isSubsetOf(e){return this.equals(e)}isRedundant(e){return e.some(s=>this.equals(s)||s instanceof o&&this.sector.edges.includes(s.edge))}serialize(){return{type:"sector-not-two",sector:this.sector.index}}static deserialize(e,s){return new x(s.sectors[e.sector])}}class P{constructor(e){this.sector=e}toCanonicalString(){return`sector-only-one-${this.sector.index}`}isPossibleWith(e){return this.sector.edges.filter(t=>e(t)).length===1}getPossibleFormula(e){return G(this.sector.edges.map(s=>e(s)))}embedded(e){return[new P(e.mapSector(this.sector))]}equals(e){return e instanceof P&&e.sector===this.sector}indexEquals(e){return e instanceof P&&e.sector.index===this.sector.index}isSubsetOf(e){return this.equals(e)}isRedundant(e){if(e.some(i=>this.equals(i)))return!0;let s=!1,t=!1;for(const i of e)i instanceof d&&this.sector.edges.includes(i.edge)?s=!0:i instanceof o&&this.sector.edges.includes(i.edge)&&(t=!0);return s&&t}serialize(){return{type:"sector-only-one",sector:this.sector.index}}static deserialize(e,s){return new P(s.sectors[e.sector])}}export{d as B,c as F,H as I,o as R,b as S,F as a,x as b,P as c,y as d};
