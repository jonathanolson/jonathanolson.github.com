import{a as D}from"./Vector2Property-DCXaH-JP.js";import{N as v,f as T,R as V,V as z,g as u,T as B,H as m}from"./PhetioControlledVisibilityProperty-sdyDHryr.js";import{P as I}from"./PatternRuleNode-RM4dMDYF.js";import{p as L}from"./getEmbeddings-BW9bZEIh.js";import{P as F}from"./PatternBoardSolver-FUiAf3Qg.js";import{P as f}from"./PatternNode-AMPkGiSl.js";import{F as C}from"./FeatureSet-CUuwAkcj.js";import{a as M,b as R,_ as G}from"./createBoardDescriptor-DQiPBFka.js";import{I as K,d as O}from"./FaceColorDualFeature-D9dVWw2V.js";import{B as X,R as _}from"./RichSolution-Dy4hnxeR.js";import{H as A}from"./HighlanderPruner-ClXsMd3n.js";import"./ShadedSphereNode-CfSdIz5V.js";import"./TextPushButton-F5WNyFmI.js";import"./computeEmbeddings-DgNcEsIq.js";import"./logic-solver-PjryYC9f.js";import"./operations-BoJEwKFC.js";import"./Theme-Bnv1SKXL.js";window.assertions.enableAssert();const d=new v,j=new v({renderer:"svg",children:[d]}),p=new T(j,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(p.domElement);p.setWidthHeight(window.innerWidth,window.innerHeight);console.log("test");(async()=>{const w=new V({fill:"#333"});d.addChild(w);const s=new z({x:10,y:10,align:"left"});d.addChild(s);const P=l=>{s.addChild(new u(l,{margin:5}))},a=null,t=a.patternBoard,h=L.get(t);M()&&R(h),P(new I(a,h));const x=F.getSolutions(t,a.inputFeatureSet.getFeaturesArray()),y=l=>{const c=C.empty(t);return a.inputFeatureSet.getFeaturesArray().forEach(n=>{n instanceof O&&c.addFeature(n)}),t.edges.forEach(n=>{n.isExit||(l.includes(n)?c.addBlackEdge(n):c.addRedEdge(n))}),c};if(a.highlander){const l=new X(t,{solveEdges:!0,solveSectors:!1,solveFaceColors:!1}),n=F.getSolutions(t,a.inputFeatureSet.getHighlanderFeaturesArray()).map(e=>new _(t,l,e,!0)),o=A.filterWithFeatureSet(n,a.inputFeatureSet).filter(e=>e.isCompatibleWithFeatureSet(a.inputFeatureSet)),E=x.slice();o.forEach(e=>{const i=E.find(r=>r.length===e.solution.length&&r.every(N=>e.solutionSet.has(N)));M()&&R(i),D(E,i)});const g=new Map;n.forEach(e=>{const i=A.getHighlanderKeyWithFeatureSet(e,a.inputFeatureSet);g.has(i)?g.get(i).push(e):g.set(i,[e])});const b=G.sortBy([...g.values()],e=>-e.length),W=b.filter(e=>e.length>1),k=b.filter(e=>e.length===1).map(e=>e[0]),H=[];k.forEach(e=>{const i=a.inputFeatureSet.clone();try{e.solution.forEach(r=>{i.addBlackEdge(r)}),t.edges.forEach(r=>{e.solutionSet.has(r)||i.addRedEdge(r)}),H.push(e)}catch(r){if(!(r instanceof K))throw r}}),s.addChild(new u(new B("Valid Solutions",{font:"16px Arial",fill:"#ccc"}),{topMargin:10})),s.addChild(new u(new m({spacing:10,children:[...H.map(e=>new f(t,y(e.solution),h))]}),{margin:5})),s.addChild(new u(new B("Highlander Duplicates (Invalid)",{font:"16px Arial",fill:"#ccc"}),{topMargin:10})),W.forEach(e=>{s.addChild(new u(new m({spacing:10,children:[...e.map(i=>new f(t,y(i.solution),h))]}),{margin:5}))})}else{const c=F.getSolutions(t,a.inputFeatureSet.getFeaturesArray()).map(o=>C.fromSolution(t,o)),n=[],S=[];for(const o of c)a.outputFeatureSet.isCompatibleWith(o)?n.push(o):S.push(o);s.addChild(new u(new m({spacing:10,children:n.map(o=>new f(t,o,h))}),{margin:5})),s.addChild(new u(new m({spacing:10,children:S.map(o=>new f(t,o,h))}),{margin:5}))}if(console.log(a.serialize()),d.bounds.isValid()){w.rectWidth=Math.ceil(d.right+10),w.rectHeight=Math.ceil(d.bottom+10),p.setWidthHeight(Math.ceil(d.right+10),Math.ceil(d.bottom+10)),p.updateDisplay();const l=new window.XMLSerializer().serializeToString(p.getRootBackbone().blocks[0].domElement);console.log(l)}})();
