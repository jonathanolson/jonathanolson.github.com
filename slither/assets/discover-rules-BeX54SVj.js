import"./Vector2Property-95p6aBvi.js";import{N as U,P as ne,R as ve,L as oe,T as j,h as Ce,V as se,H,d as X}from"./PhetioControlledVisibilityProperty-DXvpzwXO.js";import{f as Ve,d as Z,g as ye,l as Ne,h as z,e as b,B as Pe,R as F,c as be,P as ae,i as Be,j as Fe,T as Y}from"./FeatureSet-1wxomgJY.js";import{B as a,s as B,b as Me,p as Se,a as Ge,g as re,F as T}from"./patternBoards-DgFI8dKG.js";import{B as qe}from"./BasicPuzzle-BS-Lz1E0.js";import{B as ie}from"./BoardPatternBoard-Dijzjii0.js";import{k as O,_ as I,S as R,H as Le,e as He,f as ze}from"./getCoordinateClusteredMap-DnTHDDo2.js";import{O as k}from"./Theme-BAHTsAQQ.js";import{P as J}from"./PlanarMappedPatternBoardNode-R95G0Gxt.js";import{g as W,P as Te,r as We,f as De,t as je,s as Oe,h as Re}from"./getPeriodicTilingGenerator-B19VRuYW.js";import{d as ce,s as ke}from"./TPlanarMappedPatternBoard-CIoV4eVO.js";import{P as D}from"./PatternNode-BFpTZoik.js";import"./logic-solver-DfLyjx-d.js";import"./TextPushButton-DPrdGe0P.js";class Je extends U{constructor(v,l,r){super(),this.pattern=v,this.targetBoard=l,this.embedding=r;const t=new U({scale:30});this.addChild(t),l.board.faces.forEach(i=>{t.addChild(new ne(O.polygon(i.vertices.map(o=>o.viewCoordinates)),{stroke:"#888",lineWidth:.02}))});const c=t.localBounds;this.addChild(ve.bounds(t.bounds.dilated(5)));for(const[i,o]of r.exitEdgeMap){const n=i.index;for(const h of o){const m=l.getEdge(h),C=new oe(m.vertices[0].viewCoordinates,m.vertices[1].viewCoordinates,{stroke:"#066",lineWidth:.03});t.addChild(C);const x=new j(n,{font:k,maxWidth:.4,maxHeight:.4,center:m.vertices[0].viewCoordinates.average(m.vertices[1].viewCoordinates),fill:"rgba(128,255,255,0.5)"});t.addChild(x)}}for(const[i,o]of r.nonExitEdgeMap){const n=l.getEdge(o),h=i.index,m=new oe(n.vertices[0].viewCoordinates,n.vertices[1].viewCoordinates,{stroke:"#f00",lineWidth:.03});t.addChild(m);const C=new j(h,{font:k,maxWidth:.4,maxHeight:.4,center:n.vertices[0].viewCoordinates.average(n.vertices[1].viewCoordinates),fill:"#fff"});t.addChild(C)}for(const[i,o]of r.faceMap){const n=l.getFace(o),h=i.index,m=i.isExit,C=n?O.polygon(n.vertices.map(g=>g.viewCoordinates)):O.bounds(c.dilated(.13)).shapeDifference(O.bounds(c)),x=new ne(C,{fill:m?"rgba(0,0,0,0.2)":"rgba(50,0,0,0.5)"});if(t.addChild(x),n){const g=()=>{const y=l.getEdge(r.nonExitEdgeMap.get(i.edges[0])).vertices.map(d=>d.viewCoordinates);return n.viewCoordinates.average(y[0].average(y[1]))},s=new j(h,{font:k,maxWidth:.4,maxHeight:.4,center:m?g():n.viewCoordinates,fill:m?"#f88":"#8f8"});t.addChild(s)}}for(const[i,o]of r.vertexMap){const n=l.getVertex(o),h=i.index,m=i.isExit,C=new j(h,{font:k,maxWidth:.4,maxHeight:.4,center:n.viewCoordinates,fill:m?"#0ff":"#88f"});t.addChild(C)}}}const $=E=>{const v=new Map,l=Ve.get(E).connectedComponents,r=o=>l.findIndex(n=>n.includes(o)),t=(o,n)=>{const h=o.length>n.length||o.length===n.length&&o[0]<n[0],m=h?o:n,C=h?n:o,x=`${m.join(",")}-${C.join(",")}`;if(v.has(x))return v.get(x);{const g=Z.fromPrimarySecondaryFaces(o.map(s=>E.faces[s]),n.map(s=>E.faces[s]));return v.set(x,g),g}},c=E.faces.length,i=le(c).flatMap(o=>{const n=[];if(o.some(x=>{const g=x.map(s=>r(E.faces[s]));return g.some(s=>s!==g[0])}))return n;const h=o.map(x=>de(x.length).map(g=>{const s=g[0].map(d=>x[d]),y=g[1].map(d=>x[d]);return t(s,y)})),m=[],C=x=>{if(x===h.length){n.push(m.slice());return}else for(let g=0;g<h[x].length;g++)m.push(h[x][g]),C(x+1),m.pop()};return C(0),n});return I.sortBy(i,o=>o.length*1e4+o.reduce((n,h)=>n+h.allFaces.size,0))},$e=E=>{let v=[];const l=(r,t,c)=>{if(t===r.length){v.push(c.map(i=>i.slice()));return}l(r,t+1,c),l(r,t+1,[...c,[r[t]]]);for(let i=0;i<c.length;i++)c[i].push(r[t]),l(r,t+1,c),c[i].pop()};return l(Array.from({length:E},(r,t)=>t),0,[]),v},le=E=>$e(E).filter(v=>v.every(l=>l.length>1)),de=E=>{const v=[],l=(r,t,c)=>{if(r===E){(t.length===0||c.length===0||Math.min(...t)<Math.min(...c))&&t.length&&v.push([t.slice(),c.slice()]);return}t.push(r),l(r+1,t,c),t.pop(),c.push(r),l(r+1,t,c),c.pop()};return l(0,[],[]),v};window.assertions.enableAssert();const _=new U,_e=new U({renderer:"svg",children:[_]}),A=new Ce(_e,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(A.domElement);A.setWidthHeight(window.innerWidth,window.innerHeight);console.log("test");(async()=>{const E=new ye,v=new Y("a","a"),l=new Y("b","b"),r=new Y("c","c");E.addFormula(Ne([v,l,r]));let t;do t=E.getNextSolution(),console.log(t);while(t!==null);const c=new a({numNonExitVertices:0,numExitVertices:0,type:"edge"});console.log("edgeBoard",c),console.log(B(c.descriptor));const i=new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:3});console.log("nonExitVertexBoard",i),console.log(B(i.descriptor));const o=new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:4,spans:[1,1]});console.log("exitVertexBoard",o),console.log(B(o.descriptor));const n=new a({numNonExitVertices:0,numExitVertices:3,type:"faces",vertexLists:[[0,1,2]]});console.log("facesBoard",n),console.log(B(n.descriptor));const h=new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2],[0,1,3]]});console.log("facesBoard2",h),console.log(B(h.descriptor));const m=qe.loadDefaultPuzzle(),C=new ie(m.board);console.log("boardPatternBoard",C),console.log(B(C.descriptor));const x=new R(2,3),g=new ie(x);console.log("simplePatternBoard",g),console.log(B(g.descriptor));const s=new se({x:10,y:10,align:"left"});_.addChild(s);const y=P=>{s.addChild(new X(P,{margin:5}))},d=(P,V)=>{console.log("----------"),console.log(P),console.log("pattern",B(V.descriptor),V);const M=re(V,g);console.log("embeddings",M),s.addChild(new H({children:M.map(G=>new Je(V,g,G))}))};d("edge pattern",new a({numNonExitVertices:0,numExitVertices:0,type:"edge"})),d("2-count exit-vertex no sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:2,spans:[]})),d("2-count exit-vertex one sector",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:2,spans:[1]})),d("3-count exit-vertex two adjacent sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:3,spans:[2]})),d("4-count exit-vertex two opposite sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:4,spans:[1,1]})),d("4-count exit-vertex three-adjacent sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:4,spans:[3]})),d("2-count non-exit-vertex",new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:2})),d("3-count non-exit-vertex",new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:3})),d("4-count non-exit-vertex",new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:4})),d("square pattern",new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2,3]]})),d("2 adjacent squares pattern",new a({numNonExitVertices:0,numExitVertices:6,type:"faces",vertexLists:[[0,1,4,3],[1,2,5,4]]})),d("2 diagonal squares pattern",new a({numNonExitVertices:0,numExitVertices:7,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6]]})),d("L square pattern",new a({numNonExitVertices:0,numExitVertices:8,type:"faces",vertexLists:[[0,1,2,3],[0,3,4,5],[0,5,6,7]]})),d("4-square pattern",new a({numNonExitVertices:1,numExitVertices:8,type:"faces",vertexLists:[[0,1,2,3],[0,3,4,5],[0,5,6,7],[0,7,8,1]]})),d("3 diagonal squares pattern",new a({numNonExitVertices:0,numExitVertices:10,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6],[5,7,8,9]]})),d("3 semi-diagonal squares pattern",new a({numNonExitVertices:0,numExitVertices:10,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6],[4,7,8,9]]}));{y(new H({spacing:10,align:"origin",children:Me.map(P=>new J({patternBoard:P,planarPatternMap:Se.get(P)}))}));{const P=e=>new X(new H({spacing:10,children:e.map(u=>new J(u))}),{margin:5}),V=e=>new se({spacing:10,align:"left",children:e.map(u=>P(u))}),M=e=>{const u=I.uniq(e.faces.map(f=>f.vertices.length)),p=e.vertices.map(f=>f.viewCoordinates).reduce((f,w)=>f.plus(w)).timesScalar(1/e.vertices.length);return u.map(f=>{const w=I.minBy(e.faces.filter(N=>N.vertices.length===f),N=>N.viewCoordinates.distanceSquared(p));return He()&&ze(w),new T(e,[w])})},G=(e,u)=>{const f=[M(e)];for(let w=0;w<u-1;w++)f.push(T.getNextGeneration(f[f.length-1]));return f},q=(e,u)=>{const p=e.generate({width:15,height:15}),f=new Te(p,e.scale??1);return G(f,u)};console.log("---- square ----");const ee=ce('{"patternBoard":"[0,9,\\"faces\\",[[0,1,2,3],[4,5,0,6],[1,7,8,2]]]","planarPatternMap":"[[[9,9],[10,9],[10,10],[9,10],[8,8],[9,8],[8,9],[11,9],[11,10]],[[0,1],[1,2],[2,3],[0,3],[4,5],[0,5],[0,6],[4,6],[1,7],[7,8],[2,8]],[[[9,9],[10,9],[10,10]],[[10,9],[10,10],[9,10]],[[10,10],[9,10],[9,9]],[[9,10],[9,9],[10,9]],[[8,8],[9,8],[9,9]],[[9,8],[9,9],[8,9]],[[9,9],[8,9],[8,8]],[[8,9],[8,8],[9,8]],[[10,9],[11,9],[11,10]],[[11,9],[11,10],[10,10]],[[11,10],[10,10],[10,9]],[[10,10],[10,9],[11,9]]],[[[9,9],[10,9],[10,10],[9,10]],[[8,8],[9,8],[9,9],[8,9]],[[10,9],[11,9],[11,10],[10,10]],[[9,9],[10,9],[9.5,8.75]],[[10,10],[9,10],[9.5,10.25]],[[9,9],[9,10],[8.75,9.5]],[[8,8],[9,8],[8.5,7.75]],[[9,9],[9,8],[9.25,8.5]],[[9,9],[8,9],[8.5,9.25]],[[8,8],[8,9],[7.75,8.5]],[[10,9],[11,9],[10.5,8.75]],[[11,9],[11,10],[11.25,9.5]],[[10,10],[11,10],[10.5,10.25]]]]"}'),te=ce('{"patternBoard":"[0,9,\\"faces\\",[[0,1,2,3],[4,5,0,6],[3,2,7,8]]]","planarPatternMap":"[[[9,9],[10,9],[10,10],[9,10],[8,8],[9,8],[8,9],[10,11],[9,11]],[[0,1],[1,2],[2,3],[0,3],[4,5],[0,5],[0,6],[4,6],[2,7],[7,8],[3,8]],[[[9,9],[10,9],[10,10]],[[10,9],[10,10],[9,10]],[[10,10],[9,10],[9,9]],[[9,10],[9,9],[10,9]],[[8,8],[9,8],[9,9]],[[9,8],[9,9],[8,9]],[[9,9],[8,9],[8,8]],[[8,9],[8,8],[9,8]],[[9,10],[10,10],[10,11]],[[10,10],[10,11],[9,11]],[[10,11],[9,11],[9,10]],[[9,11],[9,10],[10,10]]],[[[9,9],[10,9],[10,10],[9,10]],[[8,8],[9,8],[9,9],[8,9]],[[9,10],[10,10],[10,11],[9,11]],[[9,9],[10,9],[9.5,8.75]],[[10,9],[10,10],[10.25,9.5]],[[9,9],[9,10],[8.75,9.5]],[[8,8],[9,8],[8.5,7.75]],[[9,9],[9,8],[9.25,8.5]],[[9,9],[8,9],[8.5,9.25]],[[8,8],[8,9],[7.75,8.5]],[[10,10],[10,11],[10.25,10.5]],[[10,11],[9,11],[9.5,11.25]],[[9,10],[9,11],[8.75,10.5]]]]"}');s.addChild(new H({spacing:10,children:[new J(ee,{labels:!0}),new J(te,{labels:!0})]})),console.log(Ge(ee.patternBoard,te.patternBoard));const K=G(new R(20,20),5);s.addChild(V(K)),K.forEach((e,u)=>{console.log(`-- ${u} --`),e.forEach(p=>{console.log(JSON.stringify(ke(p)))})}),console.log("---- hex ----");const ge=G(new Le(5,1,!0),4);s.addChild(V(ge)),console.log("---- rhombille ----");const ue=q(W(We,{width:8,height:8}),4);s.addChild(V(ue)),console.log("---- cairo ----");const pe=q(W(De,{width:8,height:8,squareRegion:!0}),4);s.addChild(V(pe)),console.log("---- triangular ----");const me=q(W(je,{width:6,height:5}),4);s.addChild(V(me)),console.log("---- snub square ----");const xe=q(W(Oe,{width:5,height:6,squareRegion:!0}),4);s.addChild(V(xe)),console.log("---- trihexagonal ----");const he=q(W(Re,{width:9,height:9}),4);s.addChild(V(he)),console.log(le(5).map(e=>JSON.stringify(e))),console.log(de(5).map(e=>JSON.stringify(e))),console.log($(new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2,3]]})).map(e=>e.map(u=>u.toCanonicalString()))),console.log($(new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2,3]]}))),console.log($(new a({numNonExitVertices:0,numExitVertices:7,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6]]})));const Q=new a({numNonExitVertices:0,numExitVertices:7,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6]]}),fe=re(Q,Q);console.log($(Q).filter(e=>Z.areCanonicalWith(e,fe)));{const e=M(new R(20,20))[0],u=T.getNextGeneration(T.getNextGeneration(T.getNextGeneration(M(new R(20,20)))))[0];s.addChild(new D(e,z.fromSolution(e,[e.edges[0],e.edges[1],e.edges[4]]),e.planarPatternMap)),[[],[new b(e.faces[0],2)],[new Pe(e.edges[0])],[new F(e.edges[0])],[Z.fromPrimarySecondaryFaces([e.faces[0],e.faces[1]],[e.faces[2]])],[new be(e.sectors[3])]].forEach(w=>{const N=new ae(e);w.forEach(S=>N.addFeature(S));const L=N.getRemainingSolutions();console.log(L),s.addChild(new X(new H({spacing:10,children:L.map(S=>new D(e,z.fromSolution(e,S),e.planarPatternMap))}),{margin:5}))}),y(new D(u,z.fromFeatures(u,[new b(u.faces[0],3),new b(u.faces[1],3),new F(u.edges.filter(w=>w.isExit)[1]),new F(u.edges.filter(w=>w.isExit)[3])]),u.planarPatternMap));const p=K[4][7],f=[new b(p.faces[0],null),new b(p.faces[1],null),new b(p.faces[2],2),new b(p.faces[3],null),new b(p.faces[4],null),new F(p.edges[1]),new F(p.edges[12]),new F(p.edges[17]),new F(p.edges[21])];y(new D(p,z.fromFeatures(p,f),p.planarPatternMap,{labels:!0})),y(new D(e,z.empty(e),e.planarPatternMap,{labels:!0}));{const w=new ae(p),N=f;N.forEach(Ee=>w.addFeature(Ee));const L=w.getRemainingSolutions();console.log(L);const S=Be(p,N);console.log(S);const we=Fe(L,S);console.log(we)}}}}A.setWidthHeight(Math.ceil(_.right+10),Math.ceil(_.bottom+10)),A.updateDisplay()})();
