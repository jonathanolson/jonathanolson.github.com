import"./Vector2Property-DCXaH-JP.js";import{N as w,f as u,V as s,H as h,T as c,i as b,g as x}from"./PhetioControlledVisibilityProperty-sdyDHryr.js";import{P as p}from"./PlanarMappedPatternBoardNode-x5W90Rv2.js";import{d as g}from"./TPlanarMappedPatternBoard-BMw5BqBm.js";import{n as P,q as H,t as M,u as S,v as A,r as y,w as N,x as T}from"./patternBoards-BWMN3hEW.js";import{p as q}from"./getEmbeddings-BW9bZEIh.js";import{g as m}from"./generalPatternBoardGenerations-WDVO6BXS.js";import"./createBoardDescriptor-DQiPBFka.js";import"./Theme-Bnv1SKXL.js";import"./TextPushButton-F5WNyFmI.js";import"./getPeriodicTilingGenerator-9D05ORtn.js";import"./getCoordinateClusteredMap-BFcIYRrL.js";import"./computeEmbeddings-DgNcEsIq.js";window.assertions.enableAssert();const t=new w,W=new w({renderer:"svg",children:[t]}),i=new u(W,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(i.domElement);i.setWidthHeight(window.innerWidth,window.innerHeight);(async()=>{const a=new s({spacing:25,x:10,y:10,align:"left"});t.addChild(a);const B=(d,o)=>{const l=new b({matchHorizontal:!1});return new x(new h({spacing:10,children:d.map((r,f)=>new s({spacing:3,children:[l.createBox(new p({patternBoard:r,planarPatternMap:q.get(r)})),new c(`${o}-${f}`,{font:"bold 12px Arial",fill:"#ccc"}),...r.name?[new c(r.name,{font:"10px Arial",fill:"#ccc"})]:[]]}))}),{margin:5})},n=d=>new s({spacing:25,align:"left",children:d.map((o,l)=>B(o,l))}),e=d=>new c(d,{font:"bold 20px Arial",fill:"#ccc"});a.addChild(e("basicPatternBoards")),a.addChild(n([P])),a.addChild(e("standardSquareBoardGenerations")),a.addChild(n(H)),a.addChild(e("standardHexagonalBoardGenerations")),a.addChild(n(M)),a.addChild(e("standardRhombilleBoardGenerations")),a.addChild(n(S)),a.addChild(e("standardCairoBoardGenerations")),a.addChild(n(A)),a.addChild(e("standardTriangularBoardGenerations")),a.addChild(n(y)),a.addChild(e("standardSnubSquareBoardGenerations")),a.addChild(n(N)),a.addChild(e("standardTrihexagonalBoardGenerations")),a.addChild(n(T)),a.addChild(e("generalPatternBoardGenerations")),a.addChild(n(m)),console.log("general pattern board length",m.map(d=>d.length)),a.addChild(e("deserialized"));const C=g('{"patternBoard":"[0,9,\\"faces\\",[[0,1,2,3],[4,5,0,6],[1,7,8,2]]]","planarPatternMap":"[[[9,9],[10,9],[10,10],[9,10],[8,8],[9,8],[8,9],[11,9],[11,10]],[[0,1],[1,2],[2,3],[0,3],[4,5],[0,5],[0,6],[4,6],[1,7],[7,8],[2,8]],[[[9,9],[10,9],[10,10]],[[10,9],[10,10],[9,10]],[[10,10],[9,10],[9,9]],[[9,10],[9,9],[10,9]],[[8,8],[9,8],[9,9]],[[9,8],[9,9],[8,9]],[[9,9],[8,9],[8,8]],[[8,9],[8,8],[9,8]],[[10,9],[11,9],[11,10]],[[11,9],[11,10],[10,10]],[[11,10],[10,10],[10,9]],[[10,10],[10,9],[11,9]]],[[[9,9],[10,9],[10,10],[9,10]],[[8,8],[9,8],[9,9],[8,9]],[[10,9],[11,9],[11,10],[10,10]],[[9,9],[10,9],[9.5,8.75]],[[10,10],[9,10],[9.5,10.25]],[[9,9],[9,10],[8.75,9.5]],[[8,8],[9,8],[8.5,7.75]],[[9,9],[9,8],[9.25,8.5]],[[9,9],[8,9],[8.5,9.25]],[[8,8],[8,9],[7.75,8.5]],[[10,9],[11,9],[10.5,8.75]],[[11,9],[11,10],[11.25,9.5]],[[10,10],[11,10],[10.5,10.25]]]]"}'),G=g('{"patternBoard":"[0,9,\\"faces\\",[[0,1,2,3],[4,5,0,6],[3,2,7,8]]]","planarPatternMap":"[[[9,9],[10,9],[10,10],[9,10],[8,8],[9,8],[8,9],[10,11],[9,11]],[[0,1],[1,2],[2,3],[0,3],[4,5],[0,5],[0,6],[4,6],[2,7],[7,8],[3,8]],[[[9,9],[10,9],[10,10]],[[10,9],[10,10],[9,10]],[[10,10],[9,10],[9,9]],[[9,10],[9,9],[10,9]],[[8,8],[9,8],[9,9]],[[9,8],[9,9],[8,9]],[[9,9],[8,9],[8,8]],[[8,9],[8,8],[9,8]],[[9,10],[10,10],[10,11]],[[10,10],[10,11],[9,11]],[[10,11],[9,11],[9,10]],[[9,11],[9,10],[10,10]]],[[[9,9],[10,9],[10,10],[9,10]],[[8,8],[9,8],[9,9],[8,9]],[[9,10],[10,10],[10,11],[9,11]],[[9,9],[10,9],[9.5,8.75]],[[10,9],[10,10],[10.25,9.5]],[[9,9],[9,10],[8.75,9.5]],[[8,8],[9,8],[8.5,7.75]],[[9,9],[9,8],[9.25,8.5]],[[9,9],[8,9],[8.5,9.25]],[[8,8],[8,9],[7.75,8.5]],[[10,10],[10,11],[10.25,10.5]],[[10,11],[9,11],[9.5,11.25]],[[9,10],[9,11],[8.75,10.5]]]]"}');a.addChild(new h({spacing:10,children:[new p(C,{labels:!0}),new p(G,{labels:!0})]})),i.setWidthHeight(Math.ceil(t.right+10),Math.ceil(t.bottom+10)),i.updateDisplay()})();
