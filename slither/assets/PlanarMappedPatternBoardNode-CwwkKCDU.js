import{o as W}from"./Vector2Property-DUQoL60W.js";import{N as p,h,P as m,L as b,ab as k,g as v,T as x}from"./getCoordinateClusteredMap-CiLx8OtO.js";import{Y as g}from"./PuzzleModel-D24vwq4z.js";class B extends p{constructor(c,E){const P=W()({labels:!1},E),o=c.patternBoard,i=c.planarPatternMap,s=new p({scale:30});o.faces.forEach(t=>{const e=t.isExit,a=i.faceMap.get(t),n=h.polygon(a);s.addChild(new m(n,{lineWidth:.02,fill:e?"#377":"#000"}))}),o.sectors.forEach(t=>{const e=i.sectorMap.get(t),a=e[0],n=e[1],u=e[2],l=a.minus(n),M=u.minus(n),w=l.normalized(),d=l.angle;let r=M.angle;r<d&&(r+=2*Math.PI);const f=.25,C=new h().moveToPoint(n).lineToPoint(w.timesScalar(f).plus(n)).arcPoint(n,f,d,r,!0).close().makeImmutable();s.addChild(new m(C,{stroke:"#fa6",lineWidth:.02}))}),o.edges.forEach(t=>{if(t.isExit)return;const e=i.edgeMap.get(t);s.addChild(new b(e[0],e[1],{stroke:"#fff",lineWidth:.02}))}),o.vertices.forEach(t=>{const e=t.isExit;s.addChild(new k(e?.1:.07,{center:i.vertexMap.get(t),lineWidth:.02,stroke:"#ccc",fill:e?"#222":"#ccc"}))}),P.labels&&(o.faces.forEach(t=>{const e=t.isExit,a=i.faceMap.get(t),n=v(a);s.addChild(new x(t.index,{font:g,center:n,fill:e?"#0ff":"#0f0",maxWidth:.5,maxHeight:.5}))}),o.vertices.forEach(t=>{const e=i.vertexMap.get(t);s.addChild(new x(t.index,{font:g,center:e,fill:"#fff",maxWidth:.5,maxHeight:.5}))})),super({children:[s]}),this.planarMappedPatternBoard=c}}export{B as P};
