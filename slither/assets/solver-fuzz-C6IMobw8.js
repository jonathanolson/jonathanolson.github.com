import"./Vector2Property-DUQoL60W.js";import{N as E,q as x,z as W,O as F,i as H,E as y,Q as M,j as k,U as h,_ as z,a as D,b as L}from"./getCoordinateClusteredMap-CiLx8OtO.js";import{M as O,N as V,O as q,Q as d,R as v,T as G,g as m,W as I}from"./PuzzleModel-D24vwq4z.js";import{P as Q,A as S}from"./AnnotationNode-Cn9l6fhr.js";window.assertions.enableAssert();const A=new E,R=new E({renderer:"svg",children:[A]}),c=new x(R,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(c.domElement);c.setWidthHeight(window.innerWidth,window.innerHeight);console.log("test");const T=e=>{const l=e.generate(e.defaultParameterValues);return new I(l,e.scale??1)},P=[new W(10,10),new F(4,1,!0),...O.map(T)];(async()=>{let e=null;const l=new H(!1);for(;;){console.log("board loaded");const t=P[Math.floor(Math.random()*P.length)],b=await V(t,l),w=await q(b,()=>!0,l),r=w.cleanState.clone();w.blackEdges.forEach(f=>r.setEdgeState(f,y.BLACK)),M(t,r);const p=k.fromSolvedPuzzle(w);e&&e.dispose(),e=new Q(p,{scale:30,left:20,top:20}),A.addChild(e),c.updateDisplay(),await d(50);const o=p.stateProperty.value.clone(),g=v(t,o),u=()=>{p.stateProperty.value=o.clone(),c.updateDisplay()};let N=0;for(;!h(o);){if(e.clearAnnotationNodes(),N++>1e5)throw new Error("Solver iteration limit exceeded? Looped?");const f=o.clone(),B=g.clone(f),n=g.nextAction();if(n){console.log(n);const s=new G(t,o,r);e.addAnnotationNode(new S(t,n.annotation,m)),u(),await d(0);try{n.apply(s)}catch(i){console.error(i);debugger;const a=B.nextAction();a&&a.apply(s)}n.apply(o)}else if(!h(o)){const s=v(t,o),i=s.nextAction();if(i)throw e.addAnnotationNode(new S(t,i.annotation,m)),u(),await d(0),new Error("Fresh solver should not have any actions");s.dispose();const a=z.find(z.shuffle(t.edges),C=>o.getEdgeState(C)===y.WHITE);if(D()&&L(a),o.setEdgeState(a,r.getEdgeState(a)),console.log("setting white edge to red/black",a),!g.dirty)throw new Error("Solver should be dirty after setting edge state")}u(),await d(0)}if(!h(o))throw new Error("Solver did not solve the puzzle")}})();
