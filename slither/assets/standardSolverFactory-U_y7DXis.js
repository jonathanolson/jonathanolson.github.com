var nt=Object.defineProperty;var at=(n,e,t)=>e in n?nt(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var y=(n,e,t)=>(at(n,typeof e!="symbol"?e+"":e,t),t);import{f as a,P as re,E as De,d as He,o as pe,c as We,D as lt,V as H,g as ue,C as ct,T as G}from"./Vector2Property-DCXaH-JP.js";import{h as D,B as z,D as O,F as me,N as k,P as M,M as de,l as dt,L as Be,C as Te,m as Xe,T as ht,G as ut,R as pt,H as ft}from"./PhetioControlledVisibilityProperty-C1zM_Uw1.js";import{a as gt,b as wt,L as mt,R as Ct,P as St}from"./TextPushButton-BPfgO3qK.js";import{c as Le,S as L,L as ye,_ as ve,G as Pt,a as I,b as A,m as Ye}from"./getCoordinateClusteredMap-s__X_7ZN.js";import{i as yt,j as vt,k as ke,N as Vt,l as Fe,m as Et,n as bt,v as Ne,q as Tt,w as xe,x as Lt,y as _,z as kt,A as Ft,B as Nt,C as xt,M as J,K as Ot,I as Rt,E as It,G as At,c as U,O as Mt,p as Ve,u as Dt,s as Ht,r as Wt}from"./Theme-C7QtLKXh.js";import{R as je,T as Ue,U as _e,V as Je,W as Ze,X as $e,C as ie,Y as Bt,M as Xt,N as Yt,Z as ze,_ as Ge,$ as qe,a0 as Ke,a1 as Qe,i as jt,a2 as Ut,I as Y,a3 as _t,a4 as Jt,a5 as Zt,a6 as $t,a7 as zt,a8 as Gt,a9 as qt,aa as Kt,ab as Qt,ac as eo}from"./SATSolver-CBmz_N3P.js";import{E as W,F as Q,S as b,V as to}from"./BasicPuzzle-Chl7u5zQ.js";const et=(n,e,t,o)=>(r,i,u)=>{const l=[new je(r,i),new Ue(r,i)];return(n||e||t||o)&&(l.push(new _e(r,i)),(e||t||o)&&(l.push(new Je(r,i)),(t||o)&&(l.push(new Ze(r,i)),o&&l.push(new $e(r,i))))),new ie(l)},oo={edgesVisibleProperty:yt,edgesHaveColorsProperty:vt,faceColorsVisibleProperty:ke,faceColorThresholdProperty:Vt,sectorsVisibleProperty:Fe,sectorsNextToEdgesVisibleProperty:Et,sectorsTrivialVisibleProperty:bt,vertexStateVisibleProperty:Ne,allVertexStateVisibleProperty:Tt,faceStateVisibleProperty:xe,whiteLineVisibleProperty:Lt,redLineVisibleProperty:_,verticesVisibleProperty:kt,smallVertexProperty:Ft,redXsVisibleProperty:Nt,redXsAlignedProperty:xt,faceValueStyleProperty:J,redLineStyleProperty:Ot,vertexStyleProperty:Rt,joinedLinesJoinProperty:It,joinedLinesCapProperty:At,safeSolverFactoryProperty:new D([ke,Fe,Ne,xe],(n,e,t,o)=>et(n,e,t,o)),autoSolverFactoryProperty:Bt,theme:U},q=(n,e,t,o,r)=>{const i=et(n,e,t,o);return{faceColorsVisibleProperty:new z(n),sectorsVisibleProperty:new z(e),vertexStateVisibleProperty:new z(t),faceStateVisibleProperty:new z(o),safeSolverFactoryProperty:new re(i),autoSolverFactoryProperty:r?new D([r],u=>(l,h,d)=>new ie([i(l,h,d),u(l,h,d)])):new re(i)}},se=new D([Xt,Yt],(n,e)=>(t,o,r)=>new ie([new ze(t,o,{solveJointToRed:!0,solveForcedLineToBlack:n,solveAlmostEmptyToRed:!0},r?void 0:[]),new Ge(t,o,{solveToRed:!0,solveToBlack:n},r?void 0:[]),...e?[new qe(t,o,{solveToRed:!0,solveToBlack:n,resolveAllRegions:!1},r?void 0:[])]:[]])),tt=new D([se],n=>(e,t,o)=>new ie([n(e,t,o),new Ke(e,t,o?void 0:[])])),ot={...q(!0,!1,!1,!1,se),theme:U,edgesVisibleProperty:new a(!0),edgesHaveColorsProperty:new a(!0),faceColorThresholdProperty:new a(Number.POSITIVE_INFINITY),sectorsNextToEdgesVisibleProperty:new a(!1),sectorsTrivialVisibleProperty:new a(!1),allVertexStateVisibleProperty:new a(!1),whiteLineVisibleProperty:new a(!0),redLineVisibleProperty:_,verticesVisibleProperty:new a(!1),smallVertexProperty:new a(!1),redXsVisibleProperty:new a(!1),redXsAlignedProperty:new a(!1),faceValueStyleProperty:J,redLineStyleProperty:new a("middle"),vertexStyleProperty:new a("round"),joinedLinesJoinProperty:new a("round"),joinedLinesCapProperty:new a("round")},ro={...q(!0,!1,!1,!1,se),theme:U,edgesVisibleProperty:new a(!0),edgesHaveColorsProperty:new a(!1),faceColorThresholdProperty:new a(2),sectorsNextToEdgesVisibleProperty:new a(!1),sectorsTrivialVisibleProperty:new a(!1),allVertexStateVisibleProperty:new a(!1),whiteLineVisibleProperty:new a(!0),redLineVisibleProperty:_,verticesVisibleProperty:new a(!1),smallVertexProperty:new a(!1),redXsVisibleProperty:new a(!1),redXsAlignedProperty:new a(!1),faceValueStyleProperty:J,redLineStyleProperty:new a("middle"),vertexStyleProperty:new a("round"),joinedLinesJoinProperty:new a("round"),joinedLinesCapProperty:new a("round")},io={...q(!0,!1,!1,!1,new re((n,e,t)=>new ie([new Qe(n,e,{solveToRed:!0,solveToBlack:!0},t?void 0:[])]))),theme:U,edgesVisibleProperty:new a(!1),edgesHaveColorsProperty:new a(!1),faceColorThresholdProperty:new a(2),sectorsNextToEdgesVisibleProperty:new a(!1),sectorsTrivialVisibleProperty:new a(!1),allVertexStateVisibleProperty:new a(!1),whiteLineVisibleProperty:new a(!1),redLineVisibleProperty:_,verticesVisibleProperty:new a(!1),smallVertexProperty:new a(!1),redXsVisibleProperty:new a(!1),redXsAlignedProperty:new a(!1),faceValueStyleProperty:J,redLineStyleProperty:new a("middle"),vertexStyleProperty:new a("round"),joinedLinesJoinProperty:new a("round"),joinedLinesCapProperty:new a("round")},so={...q(!1,!1,!1,!1,se),theme:U,edgesVisibleProperty:new a(!0),edgesHaveColorsProperty:new a(!1),faceColorThresholdProperty:new a(Number.POSITIVE_INFINITY),sectorsNextToEdgesVisibleProperty:new a(!1),sectorsTrivialVisibleProperty:new a(!1),allVertexStateVisibleProperty:new a(!1),whiteLineVisibleProperty:new a(!1),redLineVisibleProperty:_,verticesVisibleProperty:new a(!0),smallVertexProperty:new a(!1),redXsVisibleProperty:new a(!0),redXsAlignedProperty:new a(!1),faceValueStyleProperty:J,redLineStyleProperty:new a("middle"),vertexStyleProperty:new a("square"),joinedLinesJoinProperty:new a("miter"),joinedLinesCapProperty:new a("square")},no={...q(!0,!0,!1,!1,tt),theme:U,edgesVisibleProperty:new a(!0),edgesHaveColorsProperty:new a(!0),faceColorThresholdProperty:new a(Number.POSITIVE_INFINITY),sectorsNextToEdgesVisibleProperty:new a(!1),sectorsTrivialVisibleProperty:new a(!1),allVertexStateVisibleProperty:new a(!1),whiteLineVisibleProperty:new a(!0),redLineVisibleProperty:_,verticesVisibleProperty:new a(!1),smallVertexProperty:new a(!1),redXsVisibleProperty:new a(!1),redXsAlignedProperty:new a(!1),faceValueStyleProperty:J,redLineStyleProperty:new a("middle"),vertexStyleProperty:new a("round"),joinedLinesJoinProperty:new a("round"),joinedLinesCapProperty:new a("round")},ao={...q(!0,!0,!1,!1,tt),theme:U,edgesVisibleProperty:new a(!0),edgesHaveColorsProperty:new a(!1),faceColorThresholdProperty:new a(2),sectorsNextToEdgesVisibleProperty:new a(!1),sectorsTrivialVisibleProperty:new a(!1),allVertexStateVisibleProperty:new a(!1),whiteLineVisibleProperty:new a(!0),redLineVisibleProperty:_,verticesVisibleProperty:new a(!1),smallVertexProperty:new a(!1),redXsVisibleProperty:new a(!1),redXsAlignedProperty:new a(!1),faceValueStyleProperty:J,redLineStyleProperty:new a("middle"),vertexStyleProperty:new a("round"),joinedLinesJoinProperty:new a("round"),joinedLinesCapProperty:new a("round")},lo={...q(!0,!1,!0,!1,se),theme:U,edgesVisibleProperty:new a(!0),edgesHaveColorsProperty:new a(!1),faceColorThresholdProperty:new a(2),sectorsNextToEdgesVisibleProperty:new a(!1),sectorsTrivialVisibleProperty:new a(!1),allVertexStateVisibleProperty:new a(!1),whiteLineVisibleProperty:new a(!0),redLineVisibleProperty:_,verticesVisibleProperty:new a(!1),smallVertexProperty:new a(!1),redXsVisibleProperty:new a(!1),redXsAlignedProperty:new a(!1),faceValueStyleProperty:J,redLineStyleProperty:new a("middle"),vertexStyleProperty:new a("round"),joinedLinesJoinProperty:new a("round"),joinedLinesCapProperty:new a("round")},co={...q(!0,!1,!1,!0,se),theme:U,edgesVisibleProperty:new a(!0),edgesHaveColorsProperty:new a(!1),faceColorThresholdProperty:new a(2),sectorsNextToEdgesVisibleProperty:new a(!1),sectorsTrivialVisibleProperty:new a(!1),allVertexStateVisibleProperty:new a(!1),whiteLineVisibleProperty:new a(!0),redLineVisibleProperty:_,verticesVisibleProperty:new a(!1),smallVertexProperty:new a(!1),redXsVisibleProperty:new a(!1),redXsAlignedProperty:new a(!1),faceValueStyleProperty:J,redLineStyleProperty:new a("middle"),vertexStyleProperty:new a("round"),joinedLinesJoinProperty:new a("round"),joinedLinesCapProperty:new a("round")},Ce={basicLines:ot,basicFaceColoring:ro,pureFaceColor:io,classic:so,basicSectors:no,sectorsWithColors:ao,vertexState:lo,faceState:co,custom:oo},Oe=ot,ho=n=>({edgesVisibleProperty:new O(n,{derive:"edgesVisibleProperty"}),edgesHaveColorsProperty:new O(n,{derive:"edgesHaveColorsProperty"}),faceColorsVisibleProperty:new O(n,{derive:"faceColorsVisibleProperty"}),faceColorThresholdProperty:new O(n,{derive:"faceColorThresholdProperty"}),sectorsVisibleProperty:new O(n,{derive:"sectorsVisibleProperty"}),sectorsNextToEdgesVisibleProperty:new O(n,{derive:"sectorsNextToEdgesVisibleProperty"}),sectorsTrivialVisibleProperty:new O(n,{derive:"sectorsTrivialVisibleProperty"}),vertexStateVisibleProperty:new O(n,{derive:"vertexStateVisibleProperty"}),allVertexStateVisibleProperty:new O(n,{derive:"allVertexStateVisibleProperty"}),faceStateVisibleProperty:new O(n,{derive:"faceStateVisibleProperty"}),whiteLineVisibleProperty:new O(n,{derive:"whiteLineVisibleProperty"}),redLineVisibleProperty:new O(n,{derive:"redLineVisibleProperty"}),verticesVisibleProperty:new O(n,{derive:"verticesVisibleProperty"}),smallVertexProperty:new O(n,{derive:"smallVertexProperty"}),redXsVisibleProperty:new O(n,{derive:"redXsVisibleProperty"}),redXsAlignedProperty:new O(n,{derive:"redXsAlignedProperty"}),faceValueStyleProperty:new O(n,{derive:"faceValueStyleProperty"}),redLineStyleProperty:new O(n,{derive:"redLineStyleProperty"}),vertexStyleProperty:new O(n,{derive:"vertexStyleProperty"}),joinedLinesJoinProperty:new O(n,{derive:"joinedLinesJoinProperty"}),joinedLinesCapProperty:new O(n,{derive:"joinedLinesCapProperty"}),safeSolverFactoryProperty:new O(n,{derive:"safeSolverFactoryProperty"}),autoSolverFactoryProperty:new O(n,{derive:"autoSolverFactoryProperty"}),theme:Mt(new D([n],e=>e.theme))}),uo=new gt("puzzleStyle",{serialize:n=>Object.keys(Ce).find(e=>Ce[e]===n),deserialize:n=>n?Ce[n]??Oe:Oe}),te=ho(uo),Go=new wt("showPuzzleStyleProperty",!1),R=class R extends De{constructor(e){super(),this.isEnabledProperty=e}};y(R,"EDGE_STATE",new R(new z(!0))),y(R,"EDGE_STATE_REVERSED",new R(new z(!0))),y(R,"FACE_COLOR_MATCH",new R(te.faceColorsVisibleProperty)),y(R,"FACE_COLOR_OPPOSITE",new R(te.faceColorsVisibleProperty)),y(R,"SECTOR_STATE",new R(te.sectorsVisibleProperty)),y(R,"VERTEX_STATE",new R(te.vertexStateVisibleProperty)),y(R,"FACE_STATE",new R(te.faceStateVisibleProperty)),y(R,"FACE_VALUE",new R(new z(!1))),y(R,"DELETE_FACE",new R(new z(!1))),y(R,"enumeration",new He(R));let B=R;const K=new mt("editModeProperty",B.EDGE_STATE);let Se=null;const Re=n=>{n||(K.value=B.EDGE_STATE)};K.link(n=>{Se&&Se.isEnabledProperty.unlink(Re),Se=n,n.isEnabledProperty.link(Re)});const qo=n=>{n.isEnabledProperty.value&&(K.value=n)},po=new D([K],n=>n===B.EDGE_STATE||n===B.EDGE_STATE_REVERSED),rt=new D([K],n=>n===B.FACE_COLOR_MATCH||n===B.FACE_COLOR_OPPOSITE),fo=new D([K],n=>n===B.SECTOR_STATE),go=new D([K],n=>n===B.VERTEX_STATE),wo=new D([K,rt],(n,e)=>e||n===B.FACE_STATE||n===B.FACE_VALUE||n===B.DELETE_FACE),fe=(n,e,t,o)=>{const r=new me({mouseButton:0,fire:l=>{var h;return t&&t(n,(h=l.domEvent)!=null&&h.shiftKey?2:0)}}),i=new me({mouseButton:2,fire:l=>{var h;return t&&t(n,(h=l.domEvent)!=null&&h.shiftKey?0:2)}}),u=new me({mouseButton:1,fire:l=>t&&t(n,1)});e.addInputListener(r),e.addInputListener(i),e.addInputListener(u),e.cursor="pointer",r.isHighlightedProperty.lazyLink(l=>{o&&o(n,l)}),e.disposeEmitter.addListener(()=>{r.dispose(),i.dispose(),u.dispose()})};class ge extends k{constructor(e,t,o,r){const i=pe()({useBackgroundOffsetStroke:!1,backgroundOffsetDistance:.3,facePressListener:()=>{},faceHoverListener:()=>{},noninteractive:!1},r);super({pickableProperty:rt}),this.outerBoundary=e,this.innerBoundaries=t,this.style=o,!i.noninteractive&&fe(null,this,i.facePressListener,i.faceHoverListener);const u=e.map(p=>p.start.viewCoordinates),l=i.useBackgroundOffsetStroke,h=i.backgroundOffsetDistance,s=Le(u)>0?-h:h,c=p=>{const C=new Pt;C.addShape(0,p),C.computeSimplifiedFaces(),C.computeFaceInclusion(P=>P[0]>0);const S=C.createFilledSubGraph(),v=S.facesToShape();return C.dispose(),S.dispose(),v},m=ge.getOffsetBackgroundShape(e,l,h),g=t.map(p=>{const C=p.map(v=>v.start.viewCoordinates),S=L.polygon(C);if(l)return c(S.getOffsetShape(s));{const P=S.getStrokedShape(new ye({lineWidth:2*h})).subpaths.map(w=>new L([w]));return c(ve.minBy(P,w=>w.getArea()))}});this.children=[new M(m,{fill:o.theme.puzzleBackgroundColorProperty,stroke:o.theme.puzzleBackgroundStrokeColorProperty,lineWidth:.03}),...g.map(p=>new M(p,{fill:o.theme.playAreaBackgroundColorProperty,stroke:o.theme.puzzleBackgroundStrokeColorProperty,lineWidth:.03}))]}static getOffsetBackgroundShape(e,t,o){const r=e.map(h=>h.start.viewCoordinates),i=L.polygon(r),l=Le(r)>0?-o:o;if(t)return i.getOffsetShape(l).getSimplifiedAreaShape();{const h=i.getStrokedShape(new ye({lineWidth:2*o})),d=h.subpaths.map(s=>new L([s]));try{return h.bounds.width===9.718028227819117?L.bounds(h.bounds):ve.maxBy(d,s=>s.getArea()).getSimplifiedAreaShape()}catch{return L.bounds(h.bounds)}}}}const ne=.03,ae=.05,mo=L.circle(ne).makeImmutable(),Co=L.circle(ae).makeImmutable(),So=L.rect(-ne,-ne,2*ne,2*ne).makeImmutable(),Po=L.rect(-ae,-ae,2*ae,2*ae).makeImmutable();class yo extends k{constructor(e,t,o,r){super(),this.vertex=e;const i=new D([t,r.verticesVisibleProperty],(d,s)=>s&&e.edges.every(c=>d.getEdgeState(c)!==W.BLACK));this.disposeEmitter.addListener(()=>i.dispose());const u=new M(null,{translation:e.viewCoordinates,fill:r.theme.vertexColorProperty,visibleProperty:i});this.addChild(u);const l=de.multilink([r.vertexStyleProperty,r.smallVertexProperty],(d,s)=>{d==="round"?u.shape=s?mo:Co:d==="square"?u.shape=s?So:Po:I()&&A(!1,`unhandled vertex style: ${d}`)});this.disposeEmitter.addListener(()=>l.dispose());const h=d=>{this.visible=!d};o.link(h),this.disposeEmitter.addListener(()=>o.unlink(h))}}class vo extends k{constructor(e,t,o,r){const i=pe()({textOptions:{font:Ve,maxWidth:.9,maxHeight:.9},facePressListener:()=>{},faceHoverListener:()=>{},noninteractive:!1},r);super({}),this.face=e;const u=L.polygon(e.vertices.map(d=>d.viewCoordinates));this.mouseArea=u,this.touchArea=u,!i.noninteractive&&fe(e,this,i.facePressListener,i.faceHoverListener);const l=new dt("",We({subScale:.7},i==null?void 0:i.textOptions)),h=de.multilink([t,o.faceValueStyleProperty,o.theme.faceValueColorProperty,o.theme.faceValueCompletedColorProperty,o.theme.faceValueErrorColorProperty,o.theme.faceValueRatioColorProperty,o.faceStateVisibleProperty],(d,s,c,m,g,p,C)=>{const S=d.getFaceValue(e);this.visible=!C;let v,P,w=!1,f=!1;if(S===null)v="",P=null;else{let E=0,T=0;for(const N of e.edges){const F=d.getEdgeState(N);F===W.BLACK?E++:F===W.WHITE&&T++}if(s==="static"||S===0)v=`${S}`;else if(s==="remaining")v=`${S-E}`,w=E>0;else if(s==="ratio")S-E===0?v="0":(v=`${S-E}<sub style="color: ${p.toCSS()};">/<sub>${T}</sub></sub>`,f=!0),w=E>0;else throw new Error(`unhandled faceValueStyle: ${s}`);E<S?P=c:E===S?P=m:P=g}l.string=v,l.fill=P,l.maxWidth=f?.8:.9,l.maxHeight=f?.8:.9,l.center=e.viewCoordinates,this.children=[l]});this.disposeEmitter.addListener(()=>h.dispose())}}const $=.06,Vo=new L().moveTo(-$,-$).lineTo($,$).moveTo(-$,$).lineTo($,-$).makeImmutable();class Eo extends k{constructor(e,t,o,r,i){super({}),this.edge=e;const u=new D([t],w=>w.getEdgeState(e));this.disposeEmitter.addListener(()=>u.dispose());const l=e.start.viewCoordinates,h=e.end.viewCoordinates,d=l.average(h),s=new D([o,r.redXsVisibleProperty],(w,f)=>!w&&f);this.disposeEmitter.addListener(()=>s.dispose());const c=new M(Vo,{stroke:r.theme.xColorProperty,lineWidth:.02,center:d,visibleProperty:s}),m=w=>{c.rotation=w?h.minus(l).getAngle():0};r.redXsAlignedProperty.link(m),this.disposeEmitter.addListener(()=>r.redXsAlignedProperty.unlink(m));const g=new D([o,r.whiteLineVisibleProperty],(w,f)=>!w&&f);this.disposeEmitter.addListener(()=>g.dispose());const p=new Be(l.x,l.y,h.x,h.y,{lineWidth:.02,stroke:r.theme.whiteLineColorProperty,visibleProperty:g}),C=new D([o,r.redLineVisibleProperty],(w,f)=>f);this.disposeEmitter.addListener(()=>C.dispose());const S=new M(null,{lineWidth:.02,stroke:r.theme.redLineColorProperty,lineDash:[.03,.05],visibleProperty:C}),v=w=>{w==="middle"?S.shape=new L().moveToPoint(d.blend(l,.35)).lineToPoint(d.blend(h,.35)).makeImmutable():w==="gap"?S.shape=new L().moveToPoint(l).lineToPoint(l.blend(d,.35)).moveToPoint(h.blend(d,.35)).lineToPoint(h).makeImmutable():w==="full"?S.shape=new L().moveToPoint(l).lineToPoint(h).makeImmutable():I()&&A(!1,`Unknown red line style: ${w}`)};r.redLineStyleProperty.link(v),this.disposeEmitter.addListener(()=>r.redLineStyleProperty.unlink(v));const P=i==null?void 0:i.edgePressListener;if(P){const w=new L;if(e.faces.length===2)w.polygon([l,e.faces[0].viewCoordinates,h,e.faces[1].viewCoordinates]);else{I()&&A(e.faces.length===1,"EdgeNode only supports edges with 1 or 2 faces");const f=e.forwardHalf.face===null?e.forwardHalf:e.reversedHalf;I()&&A(f.previous.face===null),I()&&A(f.next.face===null);const E=f.start.viewCoordinates,T=f.end.viewCoordinates,N=f.previous.start.viewCoordinates,F=f.next.end.viewCoordinates,V=(Ee,he,it)=>{const be=he.minus(Ee).normalized(),st=it.minus(he).normalized();let Z=be.minus(st);return Z.getMagnitude()<1e-6?Z=be.getPerpendicular():Z=Z.normalized(),lt.triangleAreaSigned(Ee,he,he.plus(Z))<0&&(Z=Z.negated()),Z},x=V(N,E,T),we=V(E,T,F);w.polygon([E,e.faces[0].viewCoordinates,T,T.plus(we.times(i.backgroundOffsetDistance)),E.plus(x.times(i.backgroundOffsetDistance))])}this.mouseArea=this.touchArea=w,!i.noninteractive&&fe(e,this,P,i.edgeHoverListener)}u.link(w=>{w===W.WHITE?this.children=[p]:w===W.BLACK?this.children=[]:this.children=[S,c]})}}class bo extends k{constructor(t,o,r,i){super({pickable:!1,visibleProperty:i.edgesVisibleProperty});y(this,"simpleRegionNodeMap",new Map);y(this,"regionIdMap",new Map);y(this,"weirdEdgeNodeMap",new Map);y(this,"regionContainer",new k);y(this,"weirdEdgeContainer",new k);y(this,"adjacentFacesMap",new Map);this.board=t,this.faceFilter=r,this.style=i,t.faces.forEach(h=>{this.adjacentFacesMap.set(h,h.edges.map(d=>d.getOtherFace(h)).filter(d=>d!==null))}),this.children=[this.weirdEdgeContainer,this.regionContainer],o.value.getSimpleRegions().forEach(h=>this.addRegion(h)),o.value.getWeirdEdges().forEach(h=>this.addWeirdEdge(h)),this.updateHues();const u=(h,d)=>{const s=d.getSimpleRegions(),c=h.getSimpleRegions(),m=d.getWeirdEdges(),g=h.getWeirdEdges(),p=[],C=[];Ye(s,c,p,C,[]);const v=new Set(p);for(const P of C)if(this.regionIdMap.has(P.id)){const w=this.regionIdMap.get(P.id);this.replaceRegion(w,P),v.delete(w)}else this.addRegion(P);for(const P of v)this.removeRegion(P);for(const P of m)g.includes(P)||this.removeWeirdEdge(P);for(const P of g)m.includes(P)||this.addWeirdEdge(P);(C.length||p.length)&&this.updateHues()};o.lazyLink(u),this.disposeEmitter.addListener(()=>o.unlink(u)),this.disposeEmitter.addListener(()=>{for(;this.simpleRegionNodeMap.size;)this.removeRegion(this.simpleRegionNodeMap.keys().next().value)});const l=()=>this.updateHues();i.theme.simpleRegionHueLUTProperty.link(l),i.edgesHaveColorsProperty.lazyLink(l),this.disposeEmitter.addListener(()=>{i.theme.simpleRegionHueLUTProperty.unlink(l),i.edgesHaveColorsProperty.unlink(l)})}addRegion(t){const o=new oe(t,this.style);this.simpleRegionNodeMap.set(t,o),this.regionIdMap.set(t.id,t),this.regionContainer.addChild(o)}replaceRegion(t,o){I()&&A(t.id===o.id);const r=this.simpleRegionNodeMap.get(t);r.updateRegion(o),this.simpleRegionNodeMap.delete(t),this.simpleRegionNodeMap.set(o,r),this.regionIdMap.delete(t.id),this.regionIdMap.set(o.id,o)}removeRegion(t){const o=this.simpleRegionNodeMap.get(t);this.regionContainer.removeChild(o),this.simpleRegionNodeMap.delete(t),this.regionIdMap.delete(t.id),o.dispose()}addWeirdEdge(t){const o=t.start.viewCoordinates,r=t.end.viewCoordinates,i=new Be(o.x,o.y,r.x,r.y,{lineWidth:.1,stroke:this.style.theme.edgeWeirdColorProperty,lineCap:"square"});this.weirdEdgeNodeMap.set(t,i),this.weirdEdgeContainer.addChild(i)}removeWeirdEdge(t){const o=this.weirdEdgeNodeMap.get(t);this.weirdEdgeContainer.removeChild(o),this.weirdEdgeNodeMap.delete(t)}updateHues(){const t=[...this.simpleRegionNodeMap.values()];if(t.length<2)return;const o=new H(0,0),r=()=>{for(const s of t)s.hueVector.getMagnitude()>1e-6?s.hueVector.normalize():s.hueVector.setXY(1,0)},i=new Map,u=[];this.board.faces.forEach(s=>{i.set(s,[])});for(const s of t){const c=new Set;for(const g of s.simpleRegion.edges)for(const p of g.faces)c.add(p);const m=new Set;for(const g of c){m.add(g);for(const p of this.adjacentFacesMap.get(g))m.add(p)}for(const g of m){const p=i.get(g);if(p.length)for(const C of p){let S=!1;for(const v of u)if(v.a===C&&v.b===s){v.weight++,S=!0;break}S||u.push({a:C,b:s,weight:1})}p.push(s)}}const l=new Map;for(const s of t)l.set(s,H.ZERO.copy());const h=(s,c,m)=>{const g=l.get(s),p=l.get(c),C=s.hueVector.dot(c.hueVector),S=o.set(c.hueVector).subtract(s.hueVector);if(S.magnitude>1e-9){S.normalize();const v=.3,P=m*((Math.max(v,C)-v)/(1-v))**3;S.multiplyScalar(P),g.subtract(S),p.add(S)}};let d=1;for(let s=0;s<100;s++){d*=.99;for(const c of t)l.get(c).setXY(0,0);for(const c of u){const m=c.a,g=c.b,p=c.weight;h(m,g,p)}if(t.length<8)for(let c=0;c<t.length;c++){const m=t[c];for(let g=c+1;g<t.length;g++)h(m,t[g],.2)}for(const c of t){const m=l.get(c);m.multiplyScalar(d/c.edgeCount),c.hueVector.add(m),l.get(c).setXY(0,0)}r()}for(const s of t)s.updateHue()}}class oe extends M{constructor(t,o){const r=H.createPolar(1,ue.nextDoubleBetween(0,2*Math.PI));super(oe.toShape(t),{stroke:oe.hueVectorToPaint(r,o),lineWidth:.1,lineCap:"square",lineJoin:"round"});y(this,"hueVector");y(this,"edgeCount");this.simpleRegion=t,this.style=o,this.hueVector=r,this.edgeCount=t.edges.length;const i=l=>{this.lineJoin=l};o.joinedLinesJoinProperty.link(i),this.disposeEmitter.addListener(()=>o.joinedLinesJoinProperty.unlink(i));const u=l=>{this.lineCap=l};o.joinedLinesCapProperty.link(u),this.disposeEmitter.addListener(()=>o.joinedLinesCapProperty.unlink(u))}updateHue(){this.stroke=oe.hueVectorToPaint(this.hueVector.getMagnitude()>1e-6?this.hueVector:H.X_UNIT,this.style)}updateRegion(t){this.simpleRegion=t,this.shape=oe.toShape(t),this.edgeCount=t.edges.length}static hueVectorToPaint(t,o){const r=o.theme.simpleRegionHueLUTProperty.value,i=(Math.round(t.getAngle()*180/Math.PI)+360)%360;return I()&&A(i>=0&&i<r.length),o.edgesHaveColorsProperty.value?r[i]:o.theme.blackLineColorProperty}static toShape(t){const o=new L;let r=!0;for(const i of t.halfEdges)r&&(r=!1,o.moveToPoint(i.start.viewCoordinates)),o.lineToPoint(i.end.viewCoordinates);return t.isSolved&&o.close(),o.makeImmutable()}}class To extends k{constructor(t,o,r,i){const u=new k;super({pickable:!1,children:[u]});y(this,"faceColorNodeMap",new Map);y(this,"faceColorIdMap",new Map);y(this,"adjacentFacesMap",new Map);y(this,"faceColorNodeContainer");y(this,"dualColorViews",new Set);this.board=t,this.stateProperty=o,this.faceFilter=r,this.style=i,this.faceColorNodeContainer=u,t.faces.forEach(s=>{r(s)&&this.adjacentFacesMap.set(s,s.edges.map(c=>c.getOtherFace(s)).filter(c=>c!==null))});{const s=o.value.getFaceColors();for(const c of s)this.addFaceColor(c,o.value.getFacesWithColor(c).filter(r));this.addDualColorViews(o.value,s)}this.updateHues();let l=o.value.clone();const h=s=>{const c=l;l=s.clone();const m=c.getFaceColors(),g=s.getFaceColors(),p=[],C=[],S=[];Ye(m,g,p,C,S);const v=new Set(p),P=this.removeInvalidDualColorViews(s),w=[...P];for(const f of C)if(P.add(f),this.faceColorIdMap.has(f.id)){const E=this.faceColorIdMap.get(f.id);this.replaceFaceColor(E,f,s.getFacesWithColor(f).filter(r)),v.delete(E)}else this.addFaceColor(f,s.getFacesWithColor(f).filter(r));for(const f of S)this.updateFaceColor(f,s.getFacesWithColor(f).filter(r));for(const f of v)P.delete(f),this.removeFaceColor(f);this.addDualColorViews(s,[...P]),(C.length||p.length||w.length)&&this.updateHues()};o.lazyLink(h),this.disposeEmitter.addListener(()=>o.unlink(h)),this.disposeEmitter.addListener(()=>{for(;this.faceColorNodeMap.size;)this.removeFaceColor(this.faceColorNodeMap.keys().next().value)});const d=()=>this.updateHues();i.theme.faceColorBasicHueLUTProperty.lazyLink(d),i.theme.faceColorLightHueLUTProperty.lazyLink(d),i.theme.faceColorDarkHueLUTProperty.lazyLink(d),i.theme.faceColorInsideColorProperty.lazyLink(d),i.theme.faceColorOutsideColorProperty.lazyLink(d),i.theme.faceColorDefaultColorProperty.lazyLink(d),i.faceColorThresholdProperty.lazyLink(d),this.updateHues(),this.disposeEmitter.addListener(()=>{i.theme.faceColorBasicHueLUTProperty.unlink(d),i.theme.faceColorLightHueLUTProperty.unlink(d),i.theme.faceColorDarkHueLUTProperty.unlink(d),i.theme.faceColorInsideColorProperty.unlink(d),i.theme.faceColorOutsideColorProperty.unlink(d),i.theme.faceColorDefaultColorProperty.unlink(d),i.faceColorThresholdProperty.unlink(d)})}addFaceColor(t,o){const r=new le(t,o,this.style);this.faceColorNodeMap.set(t,r),this.faceColorIdMap.set(t.id,t),this.faceColorNodeContainer.addChild(r)}replaceFaceColor(t,o,r){I()&&A(t.id===o.id);const i=this.faceColorNodeMap.get(t);i.updateFaceColor(o,r),this.faceColorNodeMap.delete(t),this.faceColorNodeMap.set(o,i),this.faceColorIdMap.delete(t.id),this.faceColorIdMap.set(o.id,o)}updateFaceColor(t,o){const r=this.faceColorNodeMap.get(t);let i=r.faces.length!==o.length;if(!i)for(let u=0;u<o.length;u++){const l=r.faces[u],h=o[u];if(l!==h){i=!0;break}}i&&r.updateFaceColor(t,o)}removeFaceColor(t){const o=this.faceColorNodeMap.get(t);this.faceColorNodeContainer.removeChild(o),this.faceColorNodeMap.delete(t),this.faceColorIdMap.delete(t.id),o.dispose()}addDualColorViews(t,o){const r=new Set(o);for(;r.size;){const i=r.values().next().value;r.delete(i);const u=this.faceColorNodeMap.get(i);I()&&A(u);const l=t.getOppositeFaceColor(i);if(l){I()&&A(r.has(l)),r.delete(l);const h=this.faceColorNodeMap.get(l);I()&&A(h),this.dualColorViews.add(new Ie([u,h],this.style))}else this.dualColorViews.add(new Ie([u],this.style))}}removeInvalidDualColorViews(t){const o=new Set,r=new Set(t.getFaceColors());for(const i of[...this.dualColorViews])if(!i.isStillValidInState(this.stateProperty.value,r)){for(const u of i.colorNodes)o.add(u.faceColor);this.dualColorViews.delete(i),i.dispose()}return o}updateHues(){const t=[...this.dualColorViews].filter(o=>o.colorNodes[0].faceColor.colorState!==Q.UNDECIDED&&this.style.theme.faceColorOutsideColorProperty.value.alpha===1&&this.style.theme.faceColorInsideColorProperty.value.alpha===1?!1:o.faceCount>=this.style.faceColorThresholdProperty.value);if(t.length>=2){const o=new H(0,0),r=()=>{for(const s of t)s.hueVector.getMagnitude()>1e-6?s.hueVector.normalize():s.hueVector.setXY(ue.nextDouble()-.5,ue.nextDouble()-.5).normalize()},i=new Map,u=[];this.board.faces.forEach(s=>{this.faceFilter(s)&&i.set(s,[])});for(const s of t){const c=new Set;for(const g of s.faces)c.add(g);const m=new Set;for(const g of c){m.add(g);for(const p of this.adjacentFacesMap.get(g))m.add(p)}for(const g of m){const p=i.get(g);if(p){if(p.length)for(const C of p){let S=!1;for(const v of u)if(v.a===C&&v.b===s){v.weight++,S=!0;break}S||u.push({a:C,b:s,weight:1})}p.push(s)}}}const l=new Map;for(const s of t)l.set(s,H.ZERO.copy());const h=(s,c,m)=>{const g=l.get(s),p=l.get(c),C=s.hueVector.dot(c.hueVector),S=o.set(c.hueVector).subtract(s.hueVector).normalize(),v=.2,P=Math.abs(C),w=m*((Math.max(v,P)-v)/(1-v))**3;S.multiplyScalar(w),g.subtract(S),p.add(S)};let d=1;for(let s=0;s<100;s++){d*=.99;for(const c of t)l.get(c).setXY(0,0);for(const c of u){const m=c.a,g=c.b,p=c.weight;h(m,g,p)}if(t.length<8)for(let c=0;c<t.length;c++){const m=t[c];for(let g=c+1;g<t.length;g++)h(m,t[g],.2)}for(const c of t){const m=l.get(c);m.multiplyScalar(d/c.faceCount),c.hueVector.add(m),l.get(c).setXY(0,0)}r()}}for(const o of this.dualColorViews)o.updateHue()}}const j=class j extends De{};y(j,"BASIC",new j),y(j,"PRIMARY",new j),y(j,"SECONDARY",new j),y(j,"enumeration",new He(j));let X=j;class Ie{constructor(e,t){y(this,"hueVector");y(this,"faceCount");if(this.colorNodes=e,this.style=t,I()&&A(e.length===1||e.length===2),this.faceCount=ve.sum(this.colorNodes.map(o=>o.faceCount)),e.forEach(o=>{o.dualColorView=this}),e.length===1)e[0].type=X.BASIC,this.hueVector=e[0].hueVector.copy();else{const o=e[0].faceCount>e[1].faceCount?e[0]:e[1],r=o===e[0]?e[1]:e[0];let i;o.type===X.PRIMARY?i=o:r.type===X.PRIMARY||o.type===X.SECONDARY?i=r:(r.type,X.SECONDARY,i=o);const u=i===o?r:o;this.hueVector=o.hueVector.copy(),i.type=X.PRIMARY,u.type=X.SECONDARY}}get faces(){return this.colorNodes.flatMap(e=>e.faces)}isStillValidInState(e,t){for(const o of this.colorNodes)if(!t.has(o.faceColor))return!1;return this.colorNodes.length===1?e.getOppositeFaceColor(this.colorNodes[0].faceColor)===null:e.getOppositeFaceColor(this.colorNodes[0].faceColor)===this.colorNodes[1].faceColor}updateHue(){for(const e of this.colorNodes)e.hueVector.set(this.hueVector),e.updateHue(this.faceCount>=this.style.faceColorThresholdProperty.value)}dispose(){for(const e of this.colorNodes)e.dualColorView=null}}class le extends M{constructor(t,o,r){const i=H.createPolar(1,ue.nextDoubleBetween(0,2*Math.PI));super(le.toShape(o));y(this,"hueVector");y(this,"faceCount");y(this,"dualColorView",null);y(this,"type",X.BASIC);this.faceColor=t,this.faces=o,this.style=r,this.hueVector=i,this.faceCount=o.length}updateHue(t){t||this.faceColor.colorState!==Q.UNDECIDED?this.fill=le.hueVectorToPaint(this.hueVector.getMagnitude()>1e-6?this.hueVector:H.X_UNIT,this.faceColor.colorState,this.type,this.style):this.fill=this.style.theme.faceColorDefaultColorProperty}updateFaceColor(t,o){const r=o.length-this.faceCount;this.faceColor=t,this.faces=o,this.shape=le.toShape(o),this.faceCount=o.length,this.dualColorView&&(this.dualColorView.faceCount+=r)}static hueVectorToPaint(t,o,r,i){const u=r===X.BASIC?i.theme.faceColorBasicHueLUTProperty.value:r===X.PRIMARY?i.theme.faceColorLightHueLUTProperty.value:i.theme.faceColorDarkHueLUTProperty.value,l=(Math.round(t.getAngle()*180/Math.PI)+360)%360;I()&&A(l>=0&&l<u.length);const h=u[l];if(o===Q.UNDECIDED)return h;{const s=(o===Q.INSIDE?i.theme.faceColorInsideColorProperty:i.theme.faceColorOutsideColorProperty).value,c=s.alpha,m=new Te(h);return new Te((1-c)*m.red+c*s.red,(1-c)*m.green+c*s.green,(1-c)*m.blue+c*s.blue).toCSS()}}static toShape(t){const o=new L;for(const r of t)o.polygon(r.vertices.map(i=>i.viewCoordinates));return o.makeImmutable()}}const Ae=[.02,.02],Lo=new Map([[b.NONE,[]],[b.ONLY_ZERO,[]],[b.ONLY_ONE,[]],[b.ONLY_TWO,[]],[b.NOT_ZERO,Ae],[b.NOT_ONE,[]],[b.NOT_TWO,Ae],[b.ANY,[]]]),Pe=.2,Me=.02,ce=class ce extends k{constructor(e,t,o,r){super(),this.sector=e;const i=ce.getSectorBaseShape(e,r.backgroundOffsetDistance);this.mouseArea=i,this.touchArea=i,!r.noninteractive&&fe(e,this,r.sectorPressListener,r.sectorHoverListener);const u=d=>{const s=e.start.viewCoordinates,c=e.end.viewCoordinates,m=e.next.end.viewCoordinates,g=s.minus(c),p=m.minus(c),C=g.normalized(),S=p.normalized(),v=S.minus(C).angle+Math.PI/2,P=g.angle;let w=p.angle;w<P&&(w+=2*Math.PI);const f=H.createPolar(.2,v),E=(N,F)=>(N.moveToPoint(C.timesScalar(F)),N.arcPoint(H.ZERO,F,P,w,!0),N),T=(N,F,V)=>(N.moveTo(F.x+V,F.y),N.circle(F,V),N);if(d===b.NONE)return new L().moveTo(f.x-.05,f.y-.05).lineTo(f.x+.05,f.y+.05).moveTo(f.x-.05,f.y+.05).lineTo(f.x+.05,f.y-.05).makeImmutable();if(d===b.ONLY_ZERO)return T(new L,f,.05).makeImmutable();if(d===b.ONLY_TWO)return new L().moveToPoint(C.timesScalar(.1).plus(f.timesScalar(.7))).lineToPoint(f.timesScalar(.7)).lineToPoint(S.timesScalar(.1).plus(f.timesScalar(.7))).makeImmutable();if(d===b.ONLY_ONE||d===b.NOT_TWO)return E(new L,Pe).makeImmutable();if(d===b.NOT_ZERO||d===b.NOT_ONE)return E(E(new L,Pe+Me),Pe-Me).makeImmutable();if(d===b.ANY)return T(T(T(new L,f,.05),f,.03),f,.01).makeImmutable();throw new Error("Unhandled sector state")},l=new M(null,{translation:e.end.viewCoordinates,lineWidth:.01,lineCap:"butt",visibleProperty:o.sectorsVisibleProperty});this.disposeEmitter.addListener(()=>l.dispose()),this.addChild(l);const h=de.multilink([t,o.sectorsNextToEdgesVisibleProperty,o.sectorsTrivialVisibleProperty],(d,s,c)=>{const m=d.getEdgeState(e.edge),g=d.getEdgeState(e.next.edge),p=d.getSectorState(e);let C=null,S=null,v=[],P=.01;if(s||m===W.WHITE&&g===W.WHITE){let w=b.trivialStates.includes(p);if(p===b.NOT_ONE){const f=e.end.edges.filter(T=>d.getEdgeState(T)===W.BLACK),E=e.end.edges.filter(T=>d.getEdgeState(T)===W.WHITE);f.length===0&&E.length===2&&(w=!0)}(c||!w)&&(C=u(p)??null,S=ce.getStrokeFromStyle(p,o)??null,v=Lo.get(p)??[],v.length&&(P=.015))}l.shape=C,l.stroke=S,l.lineDash=v,l.lineWidth=P});this.disposeEmitter.addListener(()=>h.dispose())}static getSectorBaseShape(e,t){const o=e.start.viewCoordinates,r=e.end.viewCoordinates,i=e.next.end.viewCoordinates,u=o.minus(r),l=i.minus(r),h=u.normalized(),s=l.normalized().minus(h).angle+Math.PI/2,c=e.face?e.face.viewCoordinates:H.createPolar(t,s).plus(r),m=o.average(r),g=i.average(r);return L.polygon([m,r,g,c]).makeImmutable()}static getSectorArcShape(e,t){const o=e.start.viewCoordinates,r=e.end.viewCoordinates,i=e.next.end.viewCoordinates,u=o.minus(r),l=i.minus(r),h=u.normalized(),d=u.angle;let s=l.angle;return s<d&&(s+=2*Math.PI),new L().moveToPoint(r).lineToPoint(h.timesScalar(t).plus(r)).arcPoint(r,t,d,s,!0).close().makeImmutable()}static getStrokeFromStyle(e,t){return e===b.ONLY_ONE?t.theme.sectorOnlyOneColorProperty:e===b.NOT_ZERO?t.theme.sectorNotZeroColorProperty:e===b.NOT_ONE?t.theme.sectorNotOneColorProperty:e===b.NOT_TWO?t.theme.sectorNotTwoColorProperty:t.theme.sectorOtherColorProperty}};y(ce,"nameMap",new Map([[b.NONE,"Invalid"],[b.ONLY_ZERO,"No Lines"],[b.ONLY_ONE,"Only One Line"],[b.ONLY_TWO,"Both Lines"],[b.NOT_ZERO,"At Least One Line"],[b.NOT_ONE,"Zero or Two Lines"],[b.NOT_TWO,"Less Than Two Lines"],[b.ANY,"Any Lines"]]));let ee=ce;class ko extends k{constructor(e,t,o,r){super({pickable:!1}),this.vertex=e;const i=.12,l=e.edges.map(C=>C.getOtherVertex(e).viewCoordinates.minus(e.viewCoordinates).normalized()).map(C=>C.times(i)),d=L.polygon(ct.grahamScan([H.ZERO,...l],!1)).getOffsetShape(-.05),s=new M(null,{stroke:r.theme.vertexStateLineProperty,lineWidth:.01}),c=new M(d,{translation:e.viewCoordinates,fill:r.theme.vertexStateBackgroundProperty,stroke:r.theme.vertexStateOutlineProperty,lineWidth:.01,children:[s,...l.map(C=>new Xe({radius:.02,translation:C,fill:r.theme.vertexStatePointProperty}))]});let m=null;const g=de.multilink([t,r.vertexStateVisibleProperty,r.allVertexStateVisibleProperty],(C,S,v)=>{const P=()=>{this.children=[]};if(!S){P();return}const w=C.getVertexState(e);if(!v){let f=!1,E=!1;const T=new Set;for(const F of e.edges){const V=C.getEdgeState(F);f=f||V===W.BLACK,E=E||V===W.WHITE,V===W.WHITE&&T.add(F)}if(f||!E){P();return}if(to.fromLookup(e,(F,V)=>T.has(F)&&T.has(V),!0).equals(w)){P();return}}if(!m||!m.equals(w)){m=w;const f=new L;for(const E of w.getAllowedPairs()){const T=N=>N.getOtherVertex(e).viewCoordinates.minus(e.viewCoordinates).normalized().times(i);f.moveToPoint(T(E[0])),f.lineToPoint(T(E[1]))}w.allowsEmpty()&&(f.moveTo(.03,0),f.circle(H.ZERO,.03),f.close()),f.makeImmutable(),s.shape=f}this.children=[c]});this.disposeEmitter.addListener(()=>g.dispose());const p=C=>{this.visible=!C};o.link(p),this.disposeEmitter.addListener(()=>o.unlink(p))}}class Fo extends ht{constructor(e,t){const o=pe()({font:Dt,fill:U.uiForegroundColorProperty},t);super(e,o)}}class No extends k{constructor(e,t,o,r){super({translation:e.viewCoordinates}),this.face=e;const i=de.multilink([t,r.faceStateVisibleProperty],(l,h)=>{if(this.children=[],h){const d=l.getFaceState(e),s=d.possibilityCount===0||d.possibilityCount>9;let c;const m=d.possibilityCount===1?r.theme.faceValueCompletedColorProperty:r.theme.faceValueColorProperty;if(s)c=new Fo(d.possibilityCount,{font:Ve,maxWidth:.4,maxHeight:.4});else{const g=new Set(e.vertices);c=new ut({spacing:1.5,autoColumns:Math.ceil(Math.sqrt(d.possibilityCount)),children:d.getAllowedCombinations().map(p=>{const C=new k,S=new Set(p.map(w=>w.start)),v=new Set(p.map(w=>w.end)),P=w=>w.minus(e.viewCoordinates);if(C.addChild(new M(L.polygon(e.vertices.map(w=>P(w.viewCoordinates))),{stroke:m,lineWidth:.03,opacity:.2})),S.size){const w=new L;if(p.length===e.edges.length)w.polygon(e.vertices.map(f=>P(f.viewCoordinates)));else{const f=new Set(p);for(;f.size;){const E=[...g].find(F=>[...f].filter(V=>V.start===F||V.end===F).length===1);I()&&A(E);let T=E,N=[...f].find(F=>F.start===T||F.end===T)??null;for(w.moveToPoint(P(T.viewCoordinates));N;)f.delete(N),T=N.getOtherVertex(T),w.lineToPoint(P(T.viewCoordinates)),N=[...f].find(F=>F.start===T||F.end===T)??null}}C.addChild(new M(w,{stroke:m,lineWidth:.15,lineCap:"round",lineJoin:"round"}))}for(const w of e.vertices)!S.has(w)&&!v.has(w)&&C.addChild(new Xe(.1,{fill:m,translation:P(w.viewCoordinates)}));return C}),maxWidth:.6,maxHeight:.6})}c.center=H.ZERO,this.addChild(c)}});this.disposeEmitter.addListener(()=>i.dispose());const u=l=>{this.visible=!l};o.link(u),this.disposeEmitter.addListener(()=>o.unlink(u))}}const xo=new ye({lineWidth:.2,lineCap:"round",lineJoin:"round"});class Oo extends k{constructor(e,t,o){let r;if(Ht.value)if(e.type==="edge-state"){const i=new L().moveToPoint(e.edge.start.viewCoordinates).lineToPoint(e.edge.end.viewCoordinates);r=[new M(i.getStrokedShape(xo),{stroke:o.theme.hoverHighlightColorProperty,lineWidth:.02})]}else if(e.type==="face-color")if(e.face){const i=L.polygon(e.face.vertices.map(l=>l.viewCoordinates));r=[new M(i.getOffsetShape(-.1),{stroke:o.theme.hoverHighlightColorProperty,lineWidth:.02})]}else r=[];else if(e.type==="sector"){const i=ee.getSectorArcShape(e.sector,.5);r=[new M(i.getOffsetShape(.05),{stroke:o.theme.hoverHighlightColorProperty,lineWidth:.02})]}else r=[];else r=[];super({children:r}),this.hoverHighlight=e}}class Ro extends k{constructor(e,t,o,r){let i=[];try{let u=new L;for(const h of e.faces)u.polygon(h.vertices.map(d=>d.viewCoordinates));if(e.faceColor.colorState===Q.OUTSIDE)try{const h=L.polygon(t.outerBoundary.map(c=>c.start.viewCoordinates)),s=ge.getOffsetBackgroundShape(t.outerBoundary,r.useBackgroundOffsetStroke,r.backgroundOffsetDistance).shapeDifference(h);u=u.shapeUnion(s)}catch(h){console.error(h)}const l=new M(u.getOffsetShape(-.07).getSimplifiedAreaShape(),{stroke:o.theme.selectedFaceColorHighlightColorProperty,lineWidth:.03});i.push(l)}catch(u){console.error(u)}super({children:i}),this.selectedFaceColorHighlight=e}}class Io extends k{constructor(e,t,o,r){const i=[],u=[],l=e.sector,h=e.currentState,d=ee.getSectorArcShape(l,.5),s=new M(d.getOffsetShape(.05),{stroke:o.theme.selectedSectorEditColorProperty,lineWidth:.02});i.push(s);const c=[];if(h===b.ANY&&(c.push(b.NOT_ZERO),c.push(b.NOT_ONE),c.push(b.NOT_TWO)),h.one&&h!==b.ONLY_ONE&&c.push(b.ONLY_ONE),c.length){const m=c.map(C=>{const S=ee.getStrokeFromStyle(C,o);return new Ct({accessibleName:ee.nameMap.get(C),content:new pt(0,0,25,25),listener:()=>{r.sectorSetListener&&r.sectorSetListener(l,C)},buttonAppearanceStrategy:Wt,baseColor:S,xMargin:10.4,yMargin:6.5,mouseAreaXDilation:5,mouseAreaYDilation:5,touchAreaXDilation:5,touchAreaYDilation:5})});u.push(...m);const g=new St(new ft({children:m,spacing:10}),{xMargin:10,yMargin:10,fill:o.theme.uiBackgroundColorProperty,stroke:o.theme.uiForegroundColorProperty,scale:.01});u.push(g);const p=.1;i.push(g),g.centerBottom=s.centerTop.plusXY(0,-.15),g.top<t.top+p&&(g.centerTop=s.centerBottom.plusXY(0,.15)),g.left<t.left+p&&(g.left=t.left+p),g.right>t.right-p&&(g.right=t.right-p)}super({children:i}),this.selectedSectorEdit=e,this.disposeEmitter.addListener(()=>{u.forEach(m=>m.dispose())})}}class Ko extends k{constructor(t,o){const r=pe()({textOptions:{font:Ve,maxWidth:.9,maxHeight:.9},edgePressListener:()=>{},edgeHoverListener:()=>{},facePressListener:()=>{},faceHoverListener:()=>{},sectorPressListener:()=>{},sectorHoverListener:()=>{},sectorSetListener:()=>{},backgroundOffsetDistance:.3,hoverHighlightProperty:new re(null),selectedFaceColorHighlightProperty:new re(null),selectedSectorEditProperty:new re(null),faceFilter:()=>!0,style:te,noninteractive:!1},o),i=r.style,u=new k({visibleProperty:i.faceColorsVisibleProperty}),l=new k({pickableProperty:wo}),h=new k({pickableProperty:fo}),d=new k({pickableProperty:po}),s=new k({pickableProperty:go}),c=new k,m=new k({pickable:!1}),g=new k({pickable:!1}),p=new k({pickable:!1}),C=new k({pickable:!1}),S=new k({pickable:!1}),v=new k,P=new D([t.stateProperty],V=>{if(V.getWeirdEdges().length||V.hasInvalidFaceColors())return!1;const x=V.getSimpleRegions();return x.length===1&&x[0].isSolved});u.addChild(new To(t.board,t.stateProperty,r.faceFilter,i)),t.board.faces.forEach(V=>{r.faceFilter(V)&&(l.addChild(new vo(V,t.stateProperty,i,r)),g.addChild(new No(V,t.stateProperty,P,i)))});const w=new ge(t.board.outerBoundary,t.board.innerBoundaries,i,r),f=V=>{V?t.board.vertices.forEach(x=>{x.faces.some(r.faceFilter)&&s.addChild(new yo(x,t.stateProperty,P,i))}):s.children.forEach(x=>x.dispose())};i.verticesVisibleProperty.link(f);const E=V=>{V?t.board.vertices.forEach(x=>{x.faces.some(r.faceFilter)&&m.addChild(new ko(x,t.stateProperty,P,i))}):m.children.forEach(x=>x.dispose())};i.vertexStateVisibleProperty.link(E),t.board.edges.forEach(V=>{V.faces.some(r.faceFilter)&&d.addChild(new Eo(V,t.stateProperty,P,i,r))}),t.board.halfEdges.forEach(V=>{(V.face?r.faceFilter(V.face):r.faceFilter(V.reversed.face))&&h.addChild(new ee(V,t.stateProperty,i,r))}),c.addChild(new bo(t.board,t.stateProperty,r.faceFilter,i));super(We({children:[w,u,l,h,d,s,c,m,g,p,C,S,v]},r));y(this,"annotationContainer");y(this,"backgroundNode");this.puzzle=t,this.annotationContainer=p;const T=V=>{S.children.forEach(x=>x.dispose()),V&&S.addChild(new Oo(V,r.backgroundOffsetDistance,i))};r.hoverHighlightProperty.link(T),this.disposeEmitter.addListener(()=>r.hoverHighlightProperty.unlink(T));const N=V=>{C.children.forEach(x=>x.dispose()),V&&C.addChild(new Ro(V,t.board,i,r))};r.selectedFaceColorHighlightProperty.link(N),this.disposeEmitter.addListener(()=>r.selectedFaceColorHighlightProperty.unlink(N));const F=V=>{v.children.forEach(x=>x.dispose()),V&&v.addChild(new Io(V,w,i,r))};r.selectedSectorEditProperty.link(F),this.disposeEmitter.addListener(()=>r.selectedSectorEditProperty.unlink(F)),this.disposeEmitter.addListener(()=>{i.verticesVisibleProperty.unlink(f),i.vertexStateVisibleProperty.unlink(E),[u,l,d,s,c,m,g,h].forEach(x=>{x.children.forEach(we=>we.dispose()),x.dispose()}),P.dispose(),w.dispose()}),this.backgroundNode=w}addAnnotationNode(t){this.annotationContainer.addChild(t)}removeAnnotationNode(t){this.annotationContainer.removeChild(t)}clearAnnotationNodes(){this.annotationContainer.removeAllChildren()}getBackgroundBounds(){return this.backgroundNode.bounds}}const Qo=(n,e)=>{jt(Ut,n,e,!0)};class Ao{constructor(e,t,o){y(this,"edgeStateChangedEmitter",new G);this.board=e,this.currentState=t,this.solvedState=o}getEdgeState(e){return this.currentState.getEdgeState(e)}setEdgeState(e,t){if(I()&&A(this.board.edges.includes(e)),t!==W.WHITE){const o=this.solvedState.getEdgeState(e);if(t!==o)throw new Y(`Attempt to make edge ${t} when it should be ${o}`)}}clone(){return this}createDelta(){return this}serializeState(e){throw new Error("unimplemented")}}class Mo{constructor(e,t,o){y(this,"faceColorsChangedEmitter",new G);this.board=e,this.currentState=t,this.solvedState=o}getFaceColors(){return this.currentState.getFaceColors()}getInsideColor(){return this.currentState.getInsideColor()}getOutsideColor(){return this.currentState.getOutsideColor()}getFaceColor(e){return this.currentState.getFaceColor(e)}getFacesWithColor(e){return this.currentState.getFacesWithColor(e)}getFaceColorMap(){return this.currentState.getFaceColorMap()}getOppositeFaceColor(e){return this.currentState.getOppositeFaceColor(e)}hasInvalidFaceColors(){return this.currentState.hasInvalidFaceColors()}modifyFaceColors(e,t,o,r,i){if(i)throw new Y("invalid face color?");const u=new Set([...o.values(),...r.keys(),...o.values()]),l=new Map(this.currentState.getFaceColorMap());for(const s of o.keys())l.set(s,o.get(s));const h=s=>r.has(s)?r.get(s):[...e].includes(s)?this.currentState.getOppositeFaceColor(s):null,d=new Map;for(const s of l.keys()){const c=l.get(s);d.has(c)||d.set(c,new Set([s])),d.get(c).add(s)}for(const s of u){const c=d.get(s);if(!c)continue;const m=[...c];I()&&A(m.length>0);const g=this.solvedState.getFaceColor(m[0]);for(const C of m)if(this.solvedState.getFaceColor(C)!==g)throw new Y("invalid face color");const p=h(s);if(p){let C;if(p.colorState===Q.INSIDE?C=this.solvedState.getInsideColor():p.colorState===Q.OUTSIDE?C=this.solvedState.getOutsideColor():C=this.solvedState.getFaceColor([...d.get(p)][0]),g===C)throw new Y("opposite colors are the same")}}}clone(){return this}createDelta(){return this}serializeState(e){throw new Error("unimplemented")}}class Do{constructor(e,t,o){y(this,"simpleRegionsChangedEmitter",new G);this.board=e,this.currentState=t,this.solvedState=o}getSimpleRegions(){return this.currentState.getSimpleRegions()}getSimpleRegionWithVertex(e){return this.currentState.getSimpleRegionWithVertex(e)}getSimpleRegionWithEdge(e){return this.currentState.getSimpleRegionWithEdge(e)}getSimpleRegionWithId(e){return this.currentState.getSimpleRegionWithId(e)}getWeirdEdges(){return this.currentState.getWeirdEdges()}modifyRegions(e,t,o,r){if([...o].length)throw new Y("weird edges added")}clone(){return this}createDelta(){return this}serializeState(e){throw new Error("unimplemented")}}class Ho{constructor(e,t,o){y(this,"faceValueChangedEmitter",new G);this.board=e,this.currentState=t,this.solvedState=o}getFaceValue(e){return this.currentState.getFaceValue(e)}setFaceValue(e,t){if(this.solvedState.getFaceValue(e)!==t)throw new Y("invalid face state")}clone(){return this}createDelta(){return this}serializeState(e){throw new Error("unimplemented")}}class Wo{constructor(e,t,o){y(this,"sectorStateChangedEmitter",new G);this.board=e,this.currentState=t,this.solvedState=o}getSectorState(e){return this.currentState.getSectorState(e)}setSectorState(e,t){I()&&A(this.board.halfEdges.includes(e));const o=this.solvedState.getSectorState(e);if(!o.isSubsetOf(t))throw new Y(`Attempt to make sector ${t} when it should be ${o}`)}clone(){return this}createDelta(){return this}serializeState(e){throw new Error("unimplemented")}}class Bo{constructor(e,t,o){y(this,"vertexStateChangedEmitter",new G);this.board=e,this.currentState=t,this.solvedState=o}getVertexState(e){return this.currentState.getVertexState(e)}setVertexState(e,t){I()&&A(this.board.vertices.includes(e));const o=this.solvedState.getVertexState(e);if(!o.isSubsetOf(t))throw new Y(`Attempt to make vertex ${t} when it should be ${o}`);const r=this.currentState.getVertexState(e);if(!t.isSubsetOf(r))throw new Y("Do not generalize vertex state")}clone(){return this}createDelta(){return this}serializeState(e){throw new Error("unimplemented")}}class Xo{constructor(e,t,o){y(this,"faceStateChangedEmitter",new G);this.board=e,this.currentState=t,this.solvedState=o}getFaceState(e){return this.currentState.getFaceState(e)}setFaceState(e,t){I()&&A(this.board.faces.includes(e));const o=this.solvedState.getFaceState(e);if(!o.isSubsetOf(t))throw new Y(`Attempt to make face ${t} when it should be ${o}`);const r=this.currentState.getFaceState(e);if(!t.isSubsetOf(r))throw new Y("Do not generalize face state")}clone(){return this}createDelta(){return this}serializeState(e){throw new Error("unimplemented")}}class er{constructor(e,t,o){y(this,"anyStateChangedEmitter",new G);y(this,"edgeStateValidator");y(this,"faceValueValidator");y(this,"simpleRegionDataValidator");y(this,"faceColorValidator");y(this,"sectorStateValidator");y(this,"vertexStateValidator");y(this,"faceStateValidator");I()&&A(e),I()&&A(o),this.edgeStateValidator=new Ao(e,t,o),this.faceValueValidator=new Ho(e,t,o),this.simpleRegionDataValidator=new Do(e,t,o),this.faceColorValidator=new Mo(e,t,o),this.sectorStateValidator=new Wo(e,t,o),this.vertexStateValidator=new Bo(e,t,o),this.faceStateValidator=new Xo(e,t,o)}getFaceValue(e){return this.faceValueValidator.getFaceValue(e)}setFaceValue(e,t){this.faceValueValidator.setFaceValue(e,t)}get faceValueChangedEmitter(){return this.faceValueValidator.faceValueChangedEmitter}getEdgeState(e){return this.edgeStateValidator.getEdgeState(e)}setEdgeState(e,t){this.edgeStateValidator.setEdgeState(e,t)}get edgeStateChangedEmitter(){return this.edgeStateValidator.edgeStateChangedEmitter}getSimpleRegions(){return this.simpleRegionDataValidator.getSimpleRegions()}getSimpleRegionWithVertex(e){return this.simpleRegionDataValidator.getSimpleRegionWithVertex(e)}getSimpleRegionWithEdge(e){return this.simpleRegionDataValidator.getSimpleRegionWithEdge(e)}getSimpleRegionWithId(e){return this.simpleRegionDataValidator.getSimpleRegionWithId(e)}getWeirdEdges(){return this.simpleRegionDataValidator.getWeirdEdges()}modifyRegions(e,t,o,r){this.simpleRegionDataValidator.modifyRegions(e,t,o,r)}get simpleRegionsChangedEmitter(){return this.simpleRegionDataValidator.simpleRegionsChangedEmitter}getFaceColors(){return this.faceColorValidator.getFaceColors()}getInsideColor(){return this.faceColorValidator.getInsideColor()}getOutsideColor(){return this.faceColorValidator.getOutsideColor()}getFaceColor(e){return this.faceColorValidator.getFaceColor(e)}getFacesWithColor(e){return this.faceColorValidator.getFacesWithColor(e)}getFaceColorMap(){return this.faceColorValidator.getFaceColorMap()}getOppositeFaceColor(e){return this.faceColorValidator.getOppositeFaceColor(e)}hasInvalidFaceColors(){return this.faceColorValidator.hasInvalidFaceColors()}modifyFaceColors(e,t,o,r,i){this.faceColorValidator.modifyFaceColors(e,t,o,r,i)}get faceColorsChangedEmitter(){return this.faceColorValidator.faceColorsChangedEmitter}getSectorState(e){return this.sectorStateValidator.getSectorState(e)}setSectorState(e,t){this.sectorStateValidator.setSectorState(e,t)}get sectorStateChangedEmitter(){return this.sectorStateValidator.sectorStateChangedEmitter}getVertexState(e){return this.vertexStateValidator.getVertexState(e)}setVertexState(e,t){this.vertexStateValidator.setVertexState(e,t)}get vertexStateChangedEmitter(){return this.vertexStateValidator.vertexStateChangedEmitter}getFaceState(e){return this.faceStateValidator.getFaceState(e)}setFaceState(e,t){this.faceStateValidator.setFaceState(e,t)}get faceStateChangedEmitter(){return this.faceStateValidator.faceStateChangedEmitter}clone(){return this}createDelta(){return this}serializeState(e){throw new Error("unimplemented")}}const tr=(n,e,t)=>new ie([new je(n,e),new Ue(n,e),new _e(n,e),new ze(n,e,{solveJointToRed:!0,solveForcedLineToBlack:!0,solveAlmostEmptyToRed:!0}),new Ge(n,e,{solveToRed:!0,solveToBlack:!0}),new qe(n,e,{solveToRed:!0,solveToBlack:!0,resolveAllRegions:!1}),new _t(n,e),new Je(n,e),new Ke(n,e),new Jt(n,e),new Ze(n,e),new Zt(n,e,{solveToRed:!0,solveToBlack:!0}),new $t(n,e),new Qe(n,e,{solveToRed:!0,solveToBlack:!0}),new zt(n,e,{solveToRed:!0,solveToBlack:!0,solveColors:!0,allowPartialReduction:!0}),new Gt(n,e),new $e(n,e),new qt(n,e,{solveToRed:!0,solveToBlack:!0}),new Kt(n,e),new Qt(n,e),new eo(n,e)]);export{er as C,B as E,No as F,Ko as P,Fo as U,ko as V,tr as a,Go as b,te as c,ot as d,K as e,ro as f,io as g,so as h,no as i,ao as j,co as k,oo as l,uo as p,Qo as s,qo as t,lo as v};
