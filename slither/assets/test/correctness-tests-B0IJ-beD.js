import"../Vector2Property-DCXaH-JP.js";import{Q as d,s as m,e as p,f as q,h as S,i as f,g as y,a as z,b as U,c as E,d as A}from"../square-only-all-unrestricted-Copy5udM.js";import{B as r}from"../BinaryRuleSequence-swyjMjWa.js";import{g as B,i as O}from"../BinaryRuleCollection-BKRM-FAV.js";import{s as h}from"../PatternRule-DoiK-ly1.js";import"../generalPatternBoardGenerations-WDVO6BXS.js";import"../patternBoards-BWMN3hEW.js";import"../createBoardDescriptor-DQiPBFka.js";import"../getEmbeddings-BW9bZEIh.js";import"../computeEmbeddings-DgNcEsIq.js";import"../getPeriodicTilingGenerator-9D05ORtn.js";import"../getCoordinateClusteredMap-BFcIYRrL.js";import"../FeatureSet-CUuwAkcj.js";import"../FaceColorDualFeature-D9dVWw2V.js";import"../operations-BoJEwKFC.js";import"../logic-solver-PjryYC9f.js";import"../PatternBoardSolver-FUiAf3Qg.js";import"../RichSolution-Dy4hnxeR.js";import"../HighlanderPruner-ClXsMd3n.js";d.module("pattern rule correctness",()=>{const e=(i,s)=>{s.patternBoards.forEach(t=>{const n=h(t);d.test(`${i} ${n}`,u=>{let a=0;const g=B(t,!1);let l=!0,c=null;s.forEachRule(o=>{l&&o.patternBoard===t&&(++a%50===1&&console.log(i,n,a-1),O(o,!0,g)||(l=!1,c=o.toCanonicalString()))}),u.ok(l,c??"all rules passed")})})};e("square-only-color-unrestricted",r.deserialize(m).collection),e("square-only-edge-sector",r.deserialize(p).collection),e("square-only-edge-sector-unrestricted",r.deserialize(q).collection),e("square-only-all",r.deserialize(S).collection),e("square-only-all-unrestricted",r.deserialize(f).collection),e("general-color-unrestricted",r.deserialize(y).collection),e("general-edge-sector",r.deserialize(z).collection),e("general-edge-sector-unrestricted",r.deserialize(U).collection),e("general-all",r.deserialize(E).collection),e("general-all-unrestricted",r.deserialize(A).collection)});window.assertions.enableAssert();
