import"./Vector2Property-95p6aBvi.js";import{N as n,h as i,V as d,d as l}from"./PhetioControlledVisibilityProperty-DXvpzwXO.js";import{d as p,p as c,e as m,f as g,v as h}from"./patternBoards-CAxgrjj1.js";import{P as u}from"./PlanarMappedPatternBoardNode-R95G0Gxt.js";import{P as w,k as f}from"./FeatureSet-CNv15qKr.js";import{P as B}from"./PatternBoardRuleSet-C5qMhy_f.js";import"./getCoordinateClusteredMap-DnTHDDo2.js";import"./getPeriodicTilingGenerator-B19VRuYW.js";import"./Theme-BAHTsAQQ.js";import"./TextPushButton-DPrdGe0P.js";import"./logic-solver-DfLyjx-d.js";import"./PatternRule-GYGPQH88.js";window.assertions.enableAssert();const a=new n,P=new n({renderer:"svg",children:[a]}),t=new i(P,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(t.domElement);t.setWidthHeight(window.innerWidth,window.innerHeight);console.log("test");(async()=>{const o=new d({x:10,y:10,align:"left"});a.addChild(o);const s=e=>{o.addChild(new l(e,{margin:5}))},r=p[0][0];s(new u({patternBoard:r,planarPatternMap:c.get(r)},{labels:!0}));{const e=m[0][0];console.log(w.getSolutions(e,[])),console.log(f(e))}B.createImpliedChained([g,...h],[],{solveEdges:!0,solveFaceColors:!0,solveSectors:!0,highlander:!1}).forEach(e=>{console.log(JSON.stringify(e.serialize()))}),a.bounds.isValid()&&(t.setWidthHeight(Math.ceil(a.right+10),Math.ceil(a.bottom+10)),t.updateDisplay())})();
