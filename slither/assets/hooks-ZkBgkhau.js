import"./Vector2Property-DUQoL60W.js";import{N as l,q as d}from"./getCoordinateClusteredMap-CiLx8OtO.js";import{P as c}from"./PatternBoardRuleSet-B_DvC5lY.js";import{av as w,aU as i}from"./PuzzleModel-D24vwq4z.js";window.assertions.enableAssert();const u=new l,h=new l({renderer:"svg",children:[u]}),s=new d(h,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(s.domElement);s.setWidthHeight(window.innerWidth,window.innerHeight);window.standardSquareBoardGenerations=w;window.addRuleSetToCollection=(t,r,e=Number.POSITIVE_INFINITY)=>{try{console.log(`input: ${t.rules.slice(0,20)}...${t.rules.slice(-20)}`);const o=i.deserialize(t),a=c.deserialize(r);o.addNonredundantRuleSet(a,e);const n=o.serialize();if(!i.deserialize(n))throw new Error("Failed to deserialize what we serialized");return console.log(`output: ${n.rules.slice(0,20)}...${n.rules.slice(-20)}`),n}catch(o){throw console.log(`${o} ${o==null?void 0:o.stack}`),o}};window.combineCollections=(t,r)=>{try{const e=i.deserialize(t),o=i.deserialize(r);return e.combineWith(o),e.serialize()}catch(e){throw console.log(`${e} ${e==null?void 0:e.stack}`),e}};
