import"./Vector2Property-95p6aBvi.js";import{N as l,h as d}from"./PhetioControlledVisibilityProperty-DXvpzwXO.js";import{P as c}from"./PatternBoardRuleSet-Bvg6NaVt.js";import{P as i}from"./PatternRuleCollection-3nJjEr8J.js";import{d as w}from"./patternBoards-DgFI8dKG.js";import"./getCoordinateClusteredMap-DnTHDDo2.js";import"./PatternRule-DnjdiaAA.js";import"./FeatureSet-1wxomgJY.js";import"./logic-solver-DfLyjx-d.js";import"./getPeriodicTilingGenerator-B19VRuYW.js";window.assertions.enableAssert();const u=new l,m=new l({renderer:"svg",children:[u]}),s=new d(m,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(s.domElement);s.setWidthHeight(window.innerWidth,window.innerHeight);window.standardSquareBoardGenerations=w;window.addRuleSetToCollection=(t,n,e=Number.POSITIVE_INFINITY)=>{try{console.log(`input: ${t.rules.slice(0,20)}...${t.rules.slice(-20)}`);const o=i.deserialize(t),a=c.deserialize(n);o.addNonredundantRuleSet(a,e);const r=o.serialize();if(!i.deserialize(r))throw new Error("Failed to deserialize what we serialized");return console.log(`output: ${r.rules.slice(0,20)}...${r.rules.slice(-20)}`),r}catch(o){throw console.log(`${o} ${o==null?void 0:o.stack}`),o}};window.combineCollections=(t,n)=>{try{const e=i.deserialize(t),o=i.deserialize(n);return e.combineWith(o),e.serialize()}catch(e){throw console.log(`${e} ${e==null?void 0:e.stack}`),e}};
