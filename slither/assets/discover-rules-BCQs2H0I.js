import"./Vector2Property-DUQoL60W.js";import{N as U,P as ne,h as j,R as ve,L as oe,T as O,_ as Z,q as Ce,j as Ve,z as k,V as se,H as z,O as ye,r as Q,a as Ne,b as be}from"./getCoordinateClusteredMap-CiLx8OtO.js";import{Y as R,a4 as Pe,a5 as I,a6 as Fe,a7 as Be,a8 as a,a9 as P,aa as ae,ab as Me,ac as qe,ad as Se,ae as W,af as re,ag as H,ah as T,ai as F,aj as Ge,ak as B,al as Le,am as ie,an as ze,ao as We,W as He,ap as Te,aq as De,ar as je,as as Oe,at as ke,au as X}from"./PuzzleModel-D24vwq4z.js";import{P as J}from"./PlanarMappedPatternBoardNode-CwwkKCDU.js";import{d as ce,s as Re}from"./TPlanarMappedPatternBoard-DIPtj3oO.js";import{P as D}from"./PatternNode-CxRHf90L.js";class Je extends U{constructor(v,l,r){super(),this.pattern=v,this.targetBoard=l,this.embedding=r;const t=new U({scale:30});this.addChild(t),l.board.faces.forEach(i=>{t.addChild(new ne(j.polygon(i.vertices.map(o=>o.viewCoordinates)),{stroke:"#888",lineWidth:.02}))});const c=t.localBounds;this.addChild(ve.bounds(t.bounds.dilated(5)));for(const[i,o]of r.exitEdgeMap){const n=i.index;for(const m of o){const x=l.getEdge(m),C=new oe(x.vertices[0].viewCoordinates,x.vertices[1].viewCoordinates,{stroke:"#066",lineWidth:.03});t.addChild(C);const h=new O(n,{font:R,maxWidth:.4,maxHeight:.4,center:x.vertices[0].viewCoordinates.average(x.vertices[1].viewCoordinates),fill:"rgba(128,255,255,0.5)"});t.addChild(h)}}for(const[i,o]of r.nonExitEdgeMap){const n=l.getEdge(o),m=i.index,x=new oe(n.vertices[0].viewCoordinates,n.vertices[1].viewCoordinates,{stroke:"#f00",lineWidth:.03});t.addChild(x);const C=new O(m,{font:R,maxWidth:.4,maxHeight:.4,center:n.vertices[0].viewCoordinates.average(n.vertices[1].viewCoordinates),fill:"#fff"});t.addChild(C)}for(const[i,o]of r.faceMap){const n=l.getFace(o),m=i.index,x=i.isExit,C=n?j.polygon(n.vertices.map(g=>g.viewCoordinates)):j.bounds(c.dilated(.13)).shapeDifference(j.bounds(c)),h=new ne(C,{fill:x?"rgba(0,0,0,0.2)":"rgba(50,0,0,0.5)"});if(t.addChild(h),n){const g=()=>{const y=l.getEdge(r.nonExitEdgeMap.get(i.edges[0])).vertices.map(d=>d.viewCoordinates);return n.viewCoordinates.average(y[0].average(y[1]))},s=new O(m,{font:R,maxWidth:.4,maxHeight:.4,center:x?g():n.viewCoordinates,fill:x?"#f88":"#8f8"});t.addChild(s)}}for(const[i,o]of r.vertexMap){const n=l.getVertex(o),m=i.index,x=i.isExit,C=new O(m,{font:R,maxWidth:.4,maxHeight:.4,center:n.viewCoordinates,fill:x?"#0ff":"#88f"});t.addChild(C)}}}const $=E=>{const v=new Map,l=Pe.get(E).connectedComponents,r=o=>l.findIndex(n=>n.includes(o)),t=(o,n)=>{const m=o.length>n.length||o.length===n.length&&o[0]<n[0],x=m?o:n,C=m?n:o,h=`${x.join(",")}-${C.join(",")}`;if(v.has(h))return v.get(h);{const g=I.fromPrimarySecondaryFaces(o.map(s=>E.faces[s]),n.map(s=>E.faces[s]));return v.set(h,g),g}},c=E.faces.length,i=le(c).flatMap(o=>{const n=[];if(o.some(h=>{const g=h.map(s=>r(E.faces[s]));return g.some(s=>s!==g[0])}))return n;const m=o.map(h=>de(h.length).map(g=>{const s=g[0].map(d=>h[d]),y=g[1].map(d=>h[d]);return t(s,y)})),x=[],C=h=>{if(h===m.length){n.push(x.slice());return}else for(let g=0;g<m[h].length;g++)x.push(m[h][g]),C(h+1),x.pop()};return C(0),n});return Z.sortBy(i,o=>o.length*1e4+o.reduce((n,m)=>n+m.allFaces.size,0))},$e=E=>{let v=[];const l=(r,t,c)=>{if(t===r.length){v.push(c.map(i=>i.slice()));return}l(r,t+1,c),l(r,t+1,[...c,[r[t]]]);for(let i=0;i<c.length;i++)c[i].push(r[t]),l(r,t+1,c),c[i].pop()};return l(Array.from({length:E},(r,t)=>t),0,[]),v},le=E=>$e(E).filter(v=>v.every(l=>l.length>1)),de=E=>{const v=[],l=(r,t,c)=>{if(r===E){(t.length===0||c.length===0||Math.min(...t)<Math.min(...c))&&t.length&&v.push([t.slice(),c.slice()]);return}t.push(r),l(r+1,t,c),t.pop(),c.push(r),l(r+1,t,c),c.pop()};return l(0,[],[]),v};window.assertions.enableAssert();const _=new U,_e=new U({renderer:"svg",children:[_]}),Y=new Ce(_e,{allowWebGL:!0,allowBackingScaleAntialiasing:!0,allowSceneOverflow:!1});document.body.appendChild(Y.domElement);Y.setWidthHeight(window.innerWidth,window.innerHeight);console.log("test");(async()=>{const E=new Fe,v=new X("a","a"),l=new X("b","b"),r=new X("c","c");E.addFormula(Be([v,l,r]));let t;do t=E.getNextSolution(),console.log(t);while(t!==null);const c=new a({numNonExitVertices:0,numExitVertices:0,type:"edge"});console.log("edgeBoard",c),console.log(P(c.descriptor));const i=new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:3});console.log("nonExitVertexBoard",i),console.log(P(i.descriptor));const o=new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:4,spans:[1,1]});console.log("exitVertexBoard",o),console.log(P(o.descriptor));const n=new a({numNonExitVertices:0,numExitVertices:3,type:"faces",vertexLists:[[0,1,2]]});console.log("facesBoard",n),console.log(P(n.descriptor));const m=new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2],[0,1,3]]});console.log("facesBoard2",m),console.log(P(m.descriptor));const x=Ve.loadDefaultPuzzle(),C=new ae(x.board);console.log("boardPatternBoard",C),console.log(P(C.descriptor));const h=new k(2,3),g=new ae(h);console.log("simplePatternBoard",g),console.log(P(g.descriptor));const s=new se({x:10,y:10,align:"left"});_.addChild(s);const y=b=>{s.addChild(new Q(b,{margin:5}))},d=(b,V)=>{console.log("----------"),console.log(b),console.log("pattern",P(V.descriptor),V);const M=re(V,g);console.log("embeddings",M),s.addChild(new z({children:M.map(S=>new Je(V,g,S))}))};d("edge pattern",new a({numNonExitVertices:0,numExitVertices:0,type:"edge"})),d("2-count exit-vertex no sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:2,spans:[]})),d("2-count exit-vertex one sector",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:2,spans:[1]})),d("3-count exit-vertex two adjacent sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:3,spans:[2]})),d("4-count exit-vertex two opposite sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:4,spans:[1,1]})),d("4-count exit-vertex three-adjacent sectors",new a({numNonExitVertices:0,numExitVertices:1,type:"exit-vertex",edgeCount:4,spans:[3]})),d("2-count non-exit-vertex",new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:2})),d("3-count non-exit-vertex",new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:3})),d("4-count non-exit-vertex",new a({numNonExitVertices:1,numExitVertices:0,type:"non-exit-vertex",edgeCount:4})),d("square pattern",new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2,3]]})),d("2 adjacent squares pattern",new a({numNonExitVertices:0,numExitVertices:6,type:"faces",vertexLists:[[0,1,4,3],[1,2,5,4]]})),d("2 diagonal squares pattern",new a({numNonExitVertices:0,numExitVertices:7,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6]]})),d("L square pattern",new a({numNonExitVertices:0,numExitVertices:8,type:"faces",vertexLists:[[0,1,2,3],[0,3,4,5],[0,5,6,7]]})),d("4-square pattern",new a({numNonExitVertices:1,numExitVertices:8,type:"faces",vertexLists:[[0,1,2,3],[0,3,4,5],[0,5,6,7],[0,7,8,1]]})),d("3 diagonal squares pattern",new a({numNonExitVertices:0,numExitVertices:10,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6],[5,7,8,9]]})),d("3 semi-diagonal squares pattern",new a({numNonExitVertices:0,numExitVertices:10,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6],[4,7,8,9]]}));{y(new z({spacing:10,align:"origin",children:Me.map(b=>new J({patternBoard:b,planarPatternMap:qe.get(b)}))}));{const b=e=>new Q(new z({spacing:10,children:e.map(u=>new J(u))}),{margin:5}),V=e=>new se({spacing:10,align:"left",children:e.map(u=>b(u))}),M=e=>{const u=Z.uniq(e.faces.map(w=>w.vertices.length)),p=e.vertices.map(w=>w.viewCoordinates).reduce((w,f)=>w.plus(f)).timesScalar(1/e.vertices.length);return u.map(w=>{const f=Z.minBy(e.faces.filter(N=>N.vertices.length===w),N=>N.viewCoordinates.distanceSquared(p));return Ne()&&be(f),new H(e,[f])})},S=(e,u)=>{const w=[M(e)];for(let f=0;f<u-1;f++)w.push(H.getNextGeneration(w[w.length-1]));return w},G=(e,u)=>{const p=e.generate({width:15,height:15}),w=new He(p,e.scale??1);return S(w,u)};console.log("---- square ----");const ee=ce('{"patternBoard":"[0,9,\\"faces\\",[[0,1,2,3],[4,5,0,6],[1,7,8,2]]]","planarPatternMap":"[[[9,9],[10,9],[10,10],[9,10],[8,8],[9,8],[8,9],[11,9],[11,10]],[[0,1],[1,2],[2,3],[0,3],[4,5],[0,5],[0,6],[4,6],[1,7],[7,8],[2,8]],[[[9,9],[10,9],[10,10]],[[10,9],[10,10],[9,10]],[[10,10],[9,10],[9,9]],[[9,10],[9,9],[10,9]],[[8,8],[9,8],[9,9]],[[9,8],[9,9],[8,9]],[[9,9],[8,9],[8,8]],[[8,9],[8,8],[9,8]],[[10,9],[11,9],[11,10]],[[11,9],[11,10],[10,10]],[[11,10],[10,10],[10,9]],[[10,10],[10,9],[11,9]]],[[[9,9],[10,9],[10,10],[9,10]],[[8,8],[9,8],[9,9],[8,9]],[[10,9],[11,9],[11,10],[10,10]],[[9,9],[10,9],[9.5,8.75]],[[10,10],[9,10],[9.5,10.25]],[[9,9],[9,10],[8.75,9.5]],[[8,8],[9,8],[8.5,7.75]],[[9,9],[9,8],[9.25,8.5]],[[9,9],[8,9],[8.5,9.25]],[[8,8],[8,9],[7.75,8.5]],[[10,9],[11,9],[10.5,8.75]],[[11,9],[11,10],[11.25,9.5]],[[10,10],[11,10],[10.5,10.25]]]]"}'),te=ce('{"patternBoard":"[0,9,\\"faces\\",[[0,1,2,3],[4,5,0,6],[3,2,7,8]]]","planarPatternMap":"[[[9,9],[10,9],[10,10],[9,10],[8,8],[9,8],[8,9],[10,11],[9,11]],[[0,1],[1,2],[2,3],[0,3],[4,5],[0,5],[0,6],[4,6],[2,7],[7,8],[3,8]],[[[9,9],[10,9],[10,10]],[[10,9],[10,10],[9,10]],[[10,10],[9,10],[9,9]],[[9,10],[9,9],[10,9]],[[8,8],[9,8],[9,9]],[[9,8],[9,9],[8,9]],[[9,9],[8,9],[8,8]],[[8,9],[8,8],[9,8]],[[9,10],[10,10],[10,11]],[[10,10],[10,11],[9,11]],[[10,11],[9,11],[9,10]],[[9,11],[9,10],[10,10]]],[[[9,9],[10,9],[10,10],[9,10]],[[8,8],[9,8],[9,9],[8,9]],[[9,10],[10,10],[10,11],[9,11]],[[9,9],[10,9],[9.5,8.75]],[[10,9],[10,10],[10.25,9.5]],[[9,9],[9,10],[8.75,9.5]],[[8,8],[9,8],[8.5,7.75]],[[9,9],[9,8],[9.25,8.5]],[[9,9],[8,9],[8.5,9.25]],[[8,8],[8,9],[7.75,8.5]],[[10,10],[10,11],[10.25,10.5]],[[10,11],[9,11],[9.5,11.25]],[[9,10],[9,11],[8.75,10.5]]]]"}');s.addChild(new z({spacing:10,children:[new J(ee,{labels:!0}),new J(te,{labels:!0})]})),console.log(Se(ee.patternBoard,te.patternBoard));const A=S(new k(20,20),5);s.addChild(V(A)),A.forEach((e,u)=>{console.log(`-- ${u} --`),e.forEach(p=>{console.log(JSON.stringify(Re(p)))})}),console.log("---- hex ----");const ge=S(new ye(5,1,!0),4);s.addChild(V(ge)),console.log("---- rhombille ----");const ue=G(W(Te,{width:8,height:8}),4);s.addChild(V(ue)),console.log("---- cairo ----");const pe=G(W(De,{width:8,height:8,squareRegion:!0}),4);s.addChild(V(pe)),console.log("---- triangular ----");const xe=G(W(je,{width:6,height:5}),4);s.addChild(V(xe)),console.log("---- snub square ----");const he=G(W(Oe,{width:5,height:6,squareRegion:!0}),4);s.addChild(V(he)),console.log("---- trihexagonal ----");const me=G(W(ke,{width:9,height:9}),4);s.addChild(V(me)),console.log(le(5).map(e=>JSON.stringify(e))),console.log(de(5).map(e=>JSON.stringify(e))),console.log($(new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2,3]]})).map(e=>e.map(u=>u.toCanonicalString()))),console.log($(new a({numNonExitVertices:0,numExitVertices:4,type:"faces",vertexLists:[[0,1,2,3]]}))),console.log($(new a({numNonExitVertices:0,numExitVertices:7,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6]]})));const K=new a({numNonExitVertices:0,numExitVertices:7,type:"faces",vertexLists:[[0,1,2,3],[0,4,5,6]]}),we=re(K,K);console.log($(K).filter(e=>I.areCanonicalWith(e,we)));{const e=M(new k(20,20))[0],u=H.getNextGeneration(H.getNextGeneration(H.getNextGeneration(M(new k(20,20)))))[0];s.addChild(new D(e,T.fromSolution(e,[e.edges[0],e.edges[1],e.edges[4]]),e.planarPatternMap)),[[],[new F(e.faces[0],2)],[new Ge(e.edges[0])],[new B(e.edges[0])],[I.fromPrimarySecondaryFaces([e.faces[0],e.faces[1]],[e.faces[2]])],[new Le(e.sectors[3])]].forEach(f=>{const N=new ie(e);f.forEach(q=>N.addFeature(q));const L=N.getRemainingSolutions();console.log(L),s.addChild(new Q(new z({spacing:10,children:L.map(q=>new D(e,T.fromSolution(e,q),e.planarPatternMap))}),{margin:5}))}),y(new D(u,T.fromFeatures(u,[new F(u.faces[0],3),new F(u.faces[1],3),new B(u.edges.filter(f=>f.isExit)[1]),new B(u.edges.filter(f=>f.isExit)[3])]),u.planarPatternMap));const p=A[4][7],w=[new F(p.faces[0],null),new F(p.faces[1],null),new F(p.faces[2],2),new F(p.faces[3],null),new F(p.faces[4],null),new B(p.edges[1]),new B(p.edges[12]),new B(p.edges[17]),new B(p.edges[21])];y(new D(p,T.fromFeatures(p,w),p.planarPatternMap,{labels:!0})),y(new D(e,T.empty(e),e.planarPatternMap,{labels:!0}));{const f=new ie(p),N=w;N.forEach(Ee=>f.addFeature(Ee));const L=f.getRemainingSolutions();console.log(L);const q=ze(p,N);console.log(q);const fe=We(L,q);console.log(fe)}}}}Y.setWidthHeight(Math.ceil(_.right+10),Math.ceil(_.bottom+10)),Y.updateDisplay()})();
