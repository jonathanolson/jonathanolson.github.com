import{o as _}from"./Vector2Property-DUQoL60W.js";import{N as M,a as $,b as B,h as l,P as f,ab as U,g as A,T as p}from"./getCoordinateClusteredMap-CiLx8OtO.js";import{a5 as ee,aQ as m,aR as I,aS as Q,aT as te,al as R,ai as V,Y as F,aj as N,ak as Y}from"./PuzzleModel-D24vwq4z.js";class ce extends M{constructor(c,O,n,Z){const P=_()({showQuestionMarks:!0,labels:!1},Z),h=O.getFeaturesArray();$()&&B(n,"planarPatternMap should be defined");const i=new M({scale:30}),W=new l;c.faces.forEach(e=>{if(e.isExit&&e.edges.length<2)return;const t=n.faceMap.get(e);W.polygon(t)}),i.addChild(new f(W,{fill:"#000"}));const g=[255,160,20,96,70,230,0],D=g.map(()=>new l),H=g.map(()=>new l);h.filter(e=>e instanceof ee).forEach((e,t)=>{e.primaryFaces.forEach(o=>{const s=n.faceMap.get(o);D[t%g.length].polygon(s)}),e.secondaryFaces.forEach(o=>{const s=n.faceMap.get(o);H[t%g.length].polygon(s)})}),D.forEach((e,t)=>{e.bounds.isFinite()&&i.addChild(new f(e,{fill:m.faceColorLightHueLUTProperty.value[g[t]]}))}),H.forEach((e,t)=>{e.bounds.isFinite()&&i.addChild(new f(e,{fill:m.faceColorDarkHueLUTProperty.value[g[t]]}))}),c.sectors.forEach(e=>{const t=h.filter(o=>(o instanceof I||o instanceof Q||o instanceof te||o instanceof R)&&o.sector===e);if(t.length){const o=t.some(E=>E instanceof R),s=t.some(E=>E instanceof I),r=t.some(E=>E instanceof Q),a=o,w=s,z=!a&&r,j=!a&&!w,X=!a&&!z,q=a?m.sectorOnlyOneColorProperty:w?m.sectorNotOneColorProperty:z?m.sectorNotTwoColorProperty:m.sectorNotZeroColorProperty,v=n.sectorMap.get(e),G=v[0],d=v[1],J=v[2],L=G.minus(d),K=J.minus(d),S=L.normalized(),C=L.angle;let x=K.angle;x<C&&(x+=2*Math.PI);let b;const u=.25;X?b=new l().moveToPoint(S.timesScalar(u-.03).plus(d)).arcPoint(d,u-.03,C,x,!0).moveToPoint(S.timesScalar(u+.03).plus(d)).arcPoint(d,u+.03,C,x,!0).makeImmutable():b=new l().moveToPoint(S.timesScalar(u).plus(d)).arcPoint(d,u,C,x,!0).makeImmutable(),i.addChild(new f(b,{stroke:q,lineWidth:.02,lineDash:j?[.03,.03]:[]}))}});const y=new l;c.edges.forEach(e=>{if(e.isExit)return;const t=n.edgeMap.get(e);y.moveToPoint(t[0]),y.lineToPoint(t[1])}),i.addChild(new f(y,{stroke:"rgba(255,255,255,0.2)",lineWidth:.01})),c.vertices.forEach(e=>{const t=e.isExit;i.addChild(new U(t?.06:.04,{center:n.vertexMap.get(e),lineWidth:.02,stroke:"rgba(255,255,255,0.2)",fill:t?"#222":"rgba(255,255,255,0.2)"}))}),c.faces.forEach(e=>{if(e.isExit){const t=h.find(o=>o instanceof V&&o.face===e)??null;if(t&&t.value===null){const o=n.faceMap.get(e),s=l.polygon(o);i.addChild(new f(s,{stroke:"#666",lineWidth:.05,lineDash:[.05,.05]}))}}else{const t=h.find(o=>o instanceof V&&o.face===e)??null;if(!t||t.value!==null){const o=t?t.value.toString():P.showQuestionMarks?"?":"";if(o.length){const s=n.faceMap.get(e),r=A(s),a=new p(o,{font:F,centerX:r.x,centerY:r.y,fill:t?"rgba(255,255,255,0.8)":"rgba(255,255,255,0.2)",maxWidth:.9,maxHeight:.9});i.addChild(a)}}}}),c.edges.forEach(e=>{if(e.isExit){const t=h.filter(s=>(s instanceof N||s instanceof Y)&&s.edge===e),o=e.exitVertex;t.forEach(s=>{const r=s instanceof N;i.addChild(new U(.12,{center:n.vertexMap.get(o),lineWidth:.03,stroke:r?"#000":"#f00"}))})}});const T=new l;c.edges.forEach(e=>{if(!e.isExit&&h.filter(o=>o instanceof Y&&o.edge===e).length){const o=n.edgeMap.get(e);T.moveToPoint(o[0]),T.lineToPoint(o[1])}}),i.addChild(new f(T,{stroke:"#f00",lineWidth:.05,lineCap:"round"}));const k=new l;c.edges.forEach(e=>{if(!e.isExit&&h.filter(o=>o instanceof N&&o.edge===e).length){const o=n.edgeMap.get(e);k.moveToPoint(o[0]),k.lineToPoint(o[1])}}),i.addChild(new f(k,{stroke:"#fff",lineWidth:.1,lineCap:"round"})),P.labels&&(c.edges.forEach(e=>{if(!e.isExit){const t=n.edgeMap.get(e),o=t[0].average(t[1]);i.addChild(new p(e.index,{font:F,center:o,fill:"#fa0",maxWidth:.4,maxHeight:.4}))}}),c.faces.forEach(e=>{const t=e.isExit,o=n.faceMap.get(e);let s=A(o);if(t){const r=s.minus(e.edges[0].vertices.map(a=>n.vertexMap.get(a)).reduce((a,w)=>a.plus(w)).timesScalar(.5));s=s.plus(r.timesScalar(1.5))}i.addChild(new p(e.index,{font:F,center:s,fill:t?"#0ff":"#0f0",maxWidth:.4,maxHeight:.4}))}),c.vertices.forEach(e=>{const t=n.vertexMap.get(e);i.addChild(new p(e.index,{font:F,center:t,fill:"#fff",maxWidth:.4,maxHeight:.4}))})),super({children:[i]}),this.patternBoard=c,this.featureSet=O,this.planarPatternMap=n}}export{ce as P};
